library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/12to0/c_to_ri8"

entity c_to_ri8_entity_c11f4b42df is
  port (
    c: in std_logic_vector(23 downto 0); 
    im: out std_logic_vector(11 downto 0); 
    re: out std_logic_vector(11 downto 0)
  );
end c_to_ri8_entity_c11f4b42df;

architecture structural of c_to_ri8_entity_c11f4b42df is
  signal delay73_q_net_x0: std_logic_vector(23 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal slice_im_y_net: std_logic_vector(11 downto 0);
  signal slice_re_y_net: std_logic_vector(11 downto 0);

begin
  delay73_q_net_x0 <= c;
  im <= force_im_output_port_net_x0;
  re <= force_re_output_port_net_x0;

  force_im: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_im_y_net,
      output_port => force_im_output_port_net_x0
    );

  force_re: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_re_y_net,
      output_port => force_re_output_port_net_x0
    );

  slice_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 24,
      y_width => 12
    )
    port map (
      x => delay73_q_net_x0,
      y => slice_im_y_net
    );

  slice_re: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 23,
      x_width => 24,
      y_width => 12
    )
    port map (
      x => delay73_q_net_x0,
      y => slice_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/12to0/ri_to_c"

entity ri_to_c_entity_c77832b36a is
  port (
    im: in std_logic_vector(17 downto 0); 
    re: in std_logic_vector(17 downto 0); 
    c: out std_logic_vector(35 downto 0)
  );
end ri_to_c_entity_c77832b36a;

architecture structural of ri_to_c_entity_c77832b36a is
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal force_im_output_port_net: std_logic_vector(17 downto 0);
  signal force_re_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);

begin
  reinterpret1_output_port_net_x0 <= im;
  reinterpret5_output_port_net_x0 <= re;
  c <= concat_y_net_x0;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x0
    );

  force_im: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret5_output_port_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/12to0"

entity x12to0_entity_c0fc6704db is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    complexin: in std_logic_vector(23 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end x12to0_entity_c0fc6704db;

architecture structural of x12to0_entity_c0fc6704db is
  signal ce_1_sg_x0: std_logic;
  signal clk_1_sg_x0: std_logic;
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal convert16_dout_net: std_logic_vector(17 downto 0);
  signal convert1_dout_net: std_logic_vector(17 downto 0);
  signal delay73_q_net_x1: std_logic_vector(23 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x0 <= ce_1;
  clk_1_sg_x0 <= clk_1;
  delay73_q_net_x1 <= complexin;
  out1 <= concat_y_net_x1;

  c_to_ri8_c11f4b42df: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => delay73_q_net_x1,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 11,
      din_width => 12,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      din => force_im_output_port_net_x0,
      en => "1",
      dout => convert1_dout_net
    );

  convert16: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 11,
      din_width => 12,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      din => force_re_output_port_net_x0,
      en => "1",
      dout => convert16_dout_net
    );

  reinterpret1: entity work.reinterpret_120751dc4b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert1_dout_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_120751dc4b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert16_dout_net,
      output_port => reinterpret5_output_port_net_x0
    );

  ri_to_c_c77832b36a: entity work.ri_to_c_entity_c77832b36a
    port map (
      im => reinterpret1_output_port_net_x0,
      re => reinterpret5_output_port_net_x0,
      c => concat_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/Ia/delay_bram"

entity delay_bram_entity_b9a19993ed is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(31 downto 0); 
    out1: out std_logic_vector(31 downto 0)
  );
end delay_bram_entity_b9a19993ed;

architecture structural of delay_bram_entity_b9a19993ed is
  signal adder_s_net_x0: std_logic_vector(31 downto 0);
  signal ce_1_sg_x2: std_logic;
  signal clk_1_sg_x2: std_logic;
  signal constant2_op_net: std_logic;
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal single_port_ram_data_out_net_x0: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x2 <= ce_1;
  clk_1_sg_x2 <= clk_1;
  adder_s_net_x0 <= in1;
  out1 <= single_port_ram_data_out_net_x0;

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  counter: entity work.counter_3ba0f48271
    port map (
      ce => ce_1_sg_x2,
      clk => clk_1_sg_x2,
      clr => '0',
      op => counter_op_net
    );

  single_port_ram: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 32,
      core_name0 => "bmg_72_cc15fa2ec33bfbe5",
      latency => 1
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x2,
      clk => clk_1_sg_x2,
      data_in => adder_s_net_x0,
      en => "1",
      rst => "0",
      we(0) => constant2_op_net,
      data_out => single_port_ram_data_out_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/Ia/pulse_ext/posedge"

entity posedge_entity_3c635beefd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end posedge_entity_3c635beefd;

architecture structural of posedge_entity_3c635beefd is
  signal ce_1_sg_x3: std_logic;
  signal clk_1_sg_x3: std_logic;
  signal delay58_q_net_x0: std_logic;
  signal delay_q_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net_x0: std_logic;

begin
  ce_1_sg_x3 <= ce_1;
  clk_1_sg_x3 <= clk_1;
  delay58_q_net_x0 <= in_x0;
  out_x0 <= logical_y_net_x0;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x3,
      clk => clk_1_sg_x3,
      clr => '0',
      d(0) => delay58_q_net_x0,
      q(0) => delay_q_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x3,
      clk => clk_1_sg_x3,
      clr => '0',
      ip(0) => delay_q_net,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay58_q_net_x0,
      y(0) => logical_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/Ia/pulse_ext"

entity pulse_ext_entity_db3ef11f2b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end pulse_ext_entity_db3ef11f2b;

architecture structural of pulse_ext_entity_db3ef11f2b is
  signal ce_1_sg_x4: std_logic;
  signal clk_1_sg_x4: std_logic;
  signal constant5_op_net: std_logic_vector(9 downto 0);
  signal counter3_op_net: std_logic_vector(9 downto 0);
  signal delay58_q_net_x1: std_logic;
  signal logical_y_net_x0: std_logic;
  signal relational5_op_net_x0: std_logic;

begin
  ce_1_sg_x4 <= ce_1;
  clk_1_sg_x4 <= clk_1;
  delay58_q_net_x1 <= in_x0;
  out_x0 <= relational5_op_net_x0;

  constant5: entity work.constant_fbc2f0cce1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  counter3: entity work.counter_a1cad1a9ea
    port map (
      ce => ce_1_sg_x4,
      clk => clk_1_sg_x4,
      clr => '0',
      en(0) => relational5_op_net_x0,
      rst(0) => logical_y_net_x0,
      op => counter3_op_net
    );

  posedge_3c635beefd: entity work.posedge_entity_3c635beefd
    port map (
      ce_1 => ce_1_sg_x4,
      clk_1 => clk_1_sg_x4,
      in_x0 => delay58_q_net_x1,
      out_x0 => logical_y_net_x0
    );

  relational5: entity work.relational_f6702ea2f7
    port map (
      a => counter3_op_net,
      b => constant5_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational5_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/Ia"

entity ia_entity_ab92225e81 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(18 downto 0); 
    new_acc: in std_logic; 
    dout: out std_logic_vector(31 downto 0)
  );
end ia_entity_ab92225e81;

architecture structural of ia_entity_ab92225e81 is
  signal adder_s_net_x0: std_logic_vector(31 downto 0);
  signal ce_1_sg_x5: std_logic;
  signal clk_1_sg_x5: std_logic;
  signal constant_op_net: std_logic_vector(31 downto 0);
  signal delay49_q_net_x0: std_logic_vector(18 downto 0);
  signal delay58_q_net_x2: std_logic;
  signal mux_y_net: std_logic_vector(31 downto 0);
  signal relational5_op_net_x0: std_logic;
  signal single_port_ram_data_out_net_x1: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x5 <= ce_1;
  clk_1_sg_x5 <= clk_1;
  delay49_q_net_x0 <= din;
  delay58_q_net_x2 <= new_acc;
  dout <= single_port_ram_data_out_net_x1;

  adder: entity work.addsub_a62bd424ca
    port map (
      a => delay49_q_net_x0,
      b => mux_y_net,
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      clr => '0',
      s => adder_s_net_x0
    );

  constant_x0: entity work.constant_37567836aa
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  delay_bram_b9a19993ed: entity work.delay_bram_entity_b9a19993ed
    port map (
      ce_1 => ce_1_sg_x5,
      clk_1 => clk_1_sg_x5,
      in1 => adder_s_net_x0,
      out1 => single_port_ram_data_out_net_x1
    );

  mux: entity work.mux_286b77e019
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => single_port_ram_data_out_net_x1,
      d1 => constant_op_net,
      sel(0) => relational5_op_net_x0,
      y => mux_y_net
    );

  pulse_ext_db3ef11f2b: entity work.pulse_ext_entity_db3ef11f2b
    port map (
      ce_1 => ce_1_sg_x5,
      clk_1 => clk_1_sg_x5,
      in_x0 => delay58_q_net_x2,
      out_x0 => relational5_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/QDR_LUT/edge_detect1"

entity edge_detect1_entity_a1c15fd7db is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect1_entity_a1c15fd7db;

architecture structural of edge_detect1_entity_a1c15fd7db is
  signal ce_1_sg_x10: std_logic;
  signal clk_1_sg_x10: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal slice1_y_net_x0: std_logic;

begin
  ce_1_sg_x10 <= ce_1;
  clk_1_sg_x10 <= clk_1;
  slice1_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x10,
      clk => clk_1_sg_x10,
      d(0) => slice1_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_dfe2dded7f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x10,
      clk => clk_1_sg_x10,
      clr => '0',
      ip(0) => slice1_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/QDR_LUT/qdr0"

entity qdr0_entity_d441e1a7c0 is
  port (
    address: in std_logic_vector(31 downto 0); 
    be: in std_logic_vector(7 downto 0); 
    blast_0209_dds305_qdr_lut_qdr0_data_out: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(71 downto 0); 
    rd_en: in std_logic; 
    wr_en: in std_logic; 
    convert_address_x0: out std_logic_vector(31 downto 0); 
    convert_be_x0: out std_logic_vector(7 downto 0); 
    convert_data_in_x0: out std_logic_vector(71 downto 0); 
    convert_rd_en_x0: out std_logic; 
    convert_wr_en_x0: out std_logic; 
    data_out: out std_logic_vector(71 downto 0)
  );
end qdr0_entity_d441e1a7c0;

architecture structural of qdr0_entity_d441e1a7c0 is
  signal blast_0209_dds305_qdr_lut_qdr0_data_out_net_x0: std_logic_vector(71 downto 0);
  signal ce_1_sg_x11: std_logic;
  signal clk_1_sg_x11: std_logic;
  signal convert_address_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_be_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert_data_in1_dout_net: std_logic_vector(71 downto 0);
  signal convert_data_in_dout_net_x0: std_logic_vector(71 downto 0);
  signal convert_rd_en_dout_net_x0: std_logic;
  signal convert_wr_en_dout_net_x0: std_logic;
  signal delay52_q_net_x0: std_logic;
  signal delay53_q_net_x0: std_logic;
  signal delay54_q_net_x0: std_logic_vector(7 downto 0);
  signal delay55_q_net_x0: std_logic_vector(31 downto 0);
  signal delay56_q_net_x0: std_logic_vector(71 downto 0);
  signal extract_parity_b_net_x0: std_logic_vector(71 downto 0);
  signal force_data_out_output_port_net: std_logic_vector(71 downto 0);
  signal insert_parity_b_net: std_logic_vector(71 downto 0);

begin
  delay55_q_net_x0 <= address;
  delay54_q_net_x0 <= be;
  blast_0209_dds305_qdr_lut_qdr0_data_out_net_x0 <= blast_0209_dds305_qdr_lut_qdr0_data_out;
  ce_1_sg_x11 <= ce_1;
  clk_1_sg_x11 <= clk_1;
  delay56_q_net_x0 <= data_in;
  delay52_q_net_x0 <= rd_en;
  delay53_q_net_x0 <= wr_en;
  convert_address_x0 <= convert_address_dout_net_x0;
  convert_be_x0 <= convert_be_dout_net_x0;
  convert_data_in_x0 <= convert_data_in_dout_net_x0;
  convert_rd_en_x0 <= convert_rd_en_dout_net_x0;
  convert_wr_en_x0 <= convert_wr_en_dout_net_x0;
  data_out <= extract_parity_b_net_x0;

  convert_address: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      clr => '0',
      din => delay55_q_net_x0,
      en => "1",
      dout => convert_address_dout_net_x0
    );

  convert_be: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 8,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      clr => '0',
      din => delay54_q_net_x0,
      en => "1",
      dout => convert_be_dout_net_x0
    );

  convert_data_in: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 72,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      clr => '0',
      din => insert_parity_b_net,
      en => "1",
      dout => convert_data_in_dout_net_x0
    );

  convert_data_in1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 72,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      clr => '0',
      din => delay56_q_net_x0,
      en => "1",
      dout => convert_data_in1_dout_net
    );

  convert_rd_en: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      clr => '0',
      din(0) => delay52_q_net_x0,
      en => "1",
      dout(0) => convert_rd_en_dout_net_x0
    );

  convert_wr_en: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      clr => '0',
      din(0) => delay53_q_net_x0,
      en => "1",
      dout(0) => convert_wr_en_dout_net_x0
    );

  extract_parity: entity work.bitbasher_7f79f7d703
    port map (
      a => force_data_out_output_port_net,
      ce => '0',
      clk => '0',
      clr => '0',
      b => extract_parity_b_net_x0
    );

  force_data_out: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => blast_0209_dds305_qdr_lut_qdr0_data_out_net_x0,
      output_port => force_data_out_output_port_net
    );

  insert_parity: entity work.bitbasher_34778e1824
    port map (
      a => convert_data_in1_dout_net,
      ce => '0',
      clk => '0',
      clr => '0',
      b => insert_parity_b_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/QDR_LUT/qdr1"

entity qdr1_entity_acdff3db75 is
  port (
    address: in std_logic_vector(31 downto 0); 
    be: in std_logic_vector(7 downto 0); 
    blast_0209_dds305_qdr_lut_qdr1_data_out: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(71 downto 0); 
    rd_en: in std_logic; 
    wr_en: in std_logic; 
    convert_address_x0: out std_logic_vector(31 downto 0); 
    convert_be_x0: out std_logic_vector(7 downto 0); 
    convert_data_in_x0: out std_logic_vector(71 downto 0); 
    convert_rd_en_x0: out std_logic; 
    convert_wr_en_x0: out std_logic; 
    data_out: out std_logic_vector(71 downto 0)
  );
end qdr1_entity_acdff3db75;

architecture structural of qdr1_entity_acdff3db75 is
  signal blast_0209_dds305_qdr_lut_qdr1_data_out_net_x0: std_logic_vector(71 downto 0);
  signal ce_1_sg_x12: std_logic;
  signal clk_1_sg_x12: std_logic;
  signal convert_address_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_be_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert_data_in1_dout_net: std_logic_vector(71 downto 0);
  signal convert_data_in_dout_net_x0: std_logic_vector(71 downto 0);
  signal convert_rd_en_dout_net_x0: std_logic;
  signal convert_wr_en_dout_net_x0: std_logic;
  signal delay57_q_net_x0: std_logic;
  signal delay58_q_net_x0: std_logic;
  signal delay59_q_net_x0: std_logic_vector(7 downto 0);
  signal delay60_q_net_x0: std_logic_vector(31 downto 0);
  signal delay61_q_net_x0: std_logic_vector(71 downto 0);
  signal extract_parity_b_net_x0: std_logic_vector(71 downto 0);
  signal force_data_out_output_port_net: std_logic_vector(71 downto 0);
  signal insert_parity_b_net: std_logic_vector(71 downto 0);

begin
  delay60_q_net_x0 <= address;
  delay59_q_net_x0 <= be;
  blast_0209_dds305_qdr_lut_qdr1_data_out_net_x0 <= blast_0209_dds305_qdr_lut_qdr1_data_out;
  ce_1_sg_x12 <= ce_1;
  clk_1_sg_x12 <= clk_1;
  delay61_q_net_x0 <= data_in;
  delay57_q_net_x0 <= rd_en;
  delay58_q_net_x0 <= wr_en;
  convert_address_x0 <= convert_address_dout_net_x0;
  convert_be_x0 <= convert_be_dout_net_x0;
  convert_data_in_x0 <= convert_data_in_dout_net_x0;
  convert_rd_en_x0 <= convert_rd_en_dout_net_x0;
  convert_wr_en_x0 <= convert_wr_en_dout_net_x0;
  data_out <= extract_parity_b_net_x0;

  convert_address: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din => delay60_q_net_x0,
      en => "1",
      dout => convert_address_dout_net_x0
    );

  convert_be: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 8,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din => delay59_q_net_x0,
      en => "1",
      dout => convert_be_dout_net_x0
    );

  convert_data_in: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 72,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din => insert_parity_b_net,
      en => "1",
      dout => convert_data_in_dout_net_x0
    );

  convert_data_in1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 72,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din => delay61_q_net_x0,
      en => "1",
      dout => convert_data_in1_dout_net
    );

  convert_rd_en: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din(0) => delay57_q_net_x0,
      en => "1",
      dout(0) => convert_rd_en_dout_net_x0
    );

  convert_wr_en: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din(0) => delay58_q_net_x0,
      en => "1",
      dout(0) => convert_wr_en_dout_net_x0
    );

  extract_parity: entity work.bitbasher_7f79f7d703
    port map (
      a => force_data_out_output_port_net,
      ce => '0',
      clk => '0',
      clr => '0',
      b => extract_parity_b_net_x0
    );

  force_data_out: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => blast_0209_dds305_qdr_lut_qdr1_data_out_net_x0,
      output_port => force_data_out_output_port_net
    );

  insert_parity: entity work.bitbasher_34778e1824
    port map (
      a => convert_data_in1_dout_net,
      ce => '0',
      clk => '0',
      clr => '0',
      b => insert_parity_b_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/QDR_LUT/we_qdr"

entity we_qdr_entity_c92134ab7a is
  port (
    blast_0209_dds305_qdr_lut_we_qdr_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end we_qdr_entity_c92134ab7a;

architecture structural of we_qdr_entity_c92134ab7a is
  signal blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net_x0 <= blast_0209_dds305_qdr_lut_we_qdr_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/QDR_LUT"

entity qdr_lut_entity_36237efa01 is
  port (
    blast_0209_dds305_qdr_lut_qdr0_data_out: in std_logic_vector(71 downto 0); 
    blast_0209_dds305_qdr_lut_qdr1_data_out: in std_logic_vector(71 downto 0); 
    blast_0209_dds305_qdr_lut_we_qdr_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    startdac: in std_logic; 
    data_i0: out std_logic_vector(15 downto 0); 
    data_i1: out std_logic_vector(15 downto 0); 
    data_q0: out std_logic_vector(15 downto 0); 
    data_q1: out std_logic_vector(15 downto 0); 
    dds_i0: out std_logic_vector(15 downto 0); 
    dds_i1: out std_logic_vector(15 downto 0); 
    dds_q0: out std_logic_vector(15 downto 0); 
    dds_q1: out std_logic_vector(15 downto 0); 
    qdr0: out std_logic_vector(31 downto 0); 
    qdr0_x0: out std_logic_vector(7 downto 0); 
    qdr0_x1: out std_logic_vector(71 downto 0); 
    qdr0_x2: out std_logic; 
    qdr0_x3: out std_logic; 
    qdr1: out std_logic_vector(31 downto 0); 
    qdr1_x0: out std_logic_vector(7 downto 0); 
    qdr1_x1: out std_logic_vector(71 downto 0); 
    qdr1_x2: out std_logic; 
    qdr1_x3: out std_logic
  );
end qdr_lut_entity_36237efa01;

architecture structural of qdr_lut_entity_36237efa01 is
  signal blast_0209_dds305_qdr_lut_qdr0_data_out_net_x1: std_logic_vector(71 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr1_data_out_net_x1: std_logic_vector(71 downto 0);
  signal blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x13: std_logic;
  signal clk_1_sg_x13: std_logic;
  signal constant1_op_net: std_logic_vector(71 downto 0);
  signal constant3_op_net: std_logic_vector(7 downto 0);
  signal convert2_dout_net: std_logic_vector(31 downto 0);
  signal convert3_dout_net: std_logic_vector(63 downto 0);
  signal convert9_dout_net: std_logic_vector(63 downto 0);
  signal convert_address_dout_net_x2: std_logic_vector(31 downto 0);
  signal convert_address_dout_net_x3: std_logic_vector(31 downto 0);
  signal convert_be_dout_net_x2: std_logic_vector(7 downto 0);
  signal convert_be_dout_net_x3: std_logic_vector(7 downto 0);
  signal convert_data_in_dout_net_x2: std_logic_vector(71 downto 0);
  signal convert_data_in_dout_net_x3: std_logic_vector(71 downto 0);
  signal convert_rd_en_dout_net_x2: std_logic;
  signal convert_rd_en_dout_net_x3: std_logic;
  signal convert_wr_en_dout_net_x2: std_logic;
  signal convert_wr_en_dout_net_x3: std_logic;
  signal counter_op_net: std_logic_vector(19 downto 0);
  signal delay10_q_net_x0: std_logic_vector(15 downto 0);
  signal delay11_q_net_x0: std_logic_vector(15 downto 0);
  signal delay12_q_net_x0: std_logic_vector(15 downto 0);
  signal delay13_q_net: std_logic_vector(71 downto 0);
  signal delay14_q_net_x0: std_logic_vector(15 downto 0);
  signal delay16_q_net: std_logic;
  signal delay17_q_net_x0: std_logic_vector(15 downto 0);
  signal delay18_q_net_x0: std_logic_vector(15 downto 0);
  signal delay21_q_net: std_logic_vector(18 downto 0);
  signal delay27_q_net: std_logic;
  signal delay2_q_net_x0: std_logic_vector(15 downto 0);
  signal delay34_q_net: std_logic_vector(71 downto 0);
  signal delay4_q_net: std_logic_vector(31 downto 0);
  signal delay52_q_net_x0: std_logic;
  signal delay53_q_net_x0: std_logic;
  signal delay54_q_net_x0: std_logic_vector(7 downto 0);
  signal delay55_q_net_x0: std_logic_vector(31 downto 0);
  signal delay56_q_net_x0: std_logic_vector(71 downto 0);
  signal delay57_q_net_x0: std_logic;
  signal delay58_q_net_x0: std_logic;
  signal delay59_q_net_x0: std_logic_vector(7 downto 0);
  signal delay5_q_net: std_logic_vector(71 downto 0);
  signal delay60_q_net_x0: std_logic_vector(31 downto 0);
  signal delay61_q_net_x0: std_logic_vector(71 downto 0);
  signal delay74_q_net: std_logic_vector(71 downto 0);
  signal delay75_q_net: std_logic_vector(71 downto 0);
  signal delay9_q_net_x0: std_logic_vector(15 downto 0);
  signal edge_op_y_net_x0: std_logic;
  signal en1_y_net: std_logic;
  signal en3_y_net: std_logic_vector(18 downto 0);
  signal extract_parity_b_net_x0: std_logic_vector(71 downto 0);
  signal extract_parity_b_net_x1: std_logic_vector(71 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(15 downto 0);
  signal slice10_y_net: std_logic_vector(15 downto 0);
  signal slice16_y_net: std_logic_vector(15 downto 0);
  signal slice17_y_net: std_logic_vector(15 downto 0);
  signal slice1_y_net_x1: std_logic;
  signal slice2_y_net: std_logic_vector(63 downto 0);
  signal slice3_y_net: std_logic_vector(63 downto 0);
  signal slice4_y_net: std_logic_vector(15 downto 0);
  signal slice6_y_net: std_logic_vector(15 downto 0);
  signal slice7_y_net: std_logic_vector(15 downto 0);
  signal slice8_y_net: std_logic_vector(15 downto 0);
  signal slice9_y_net: std_logic_vector(15 downto 0);

begin
  blast_0209_dds305_qdr_lut_qdr0_data_out_net_x1 <= blast_0209_dds305_qdr_lut_qdr0_data_out;
  blast_0209_dds305_qdr_lut_qdr1_data_out_net_x1 <= blast_0209_dds305_qdr_lut_qdr1_data_out;
  blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net_x1 <= blast_0209_dds305_qdr_lut_we_qdr_user_data_out;
  ce_1_sg_x13 <= ce_1;
  clk_1_sg_x13 <= clk_1;
  slice1_y_net_x1 <= startdac;
  data_i0 <= delay2_q_net_x0;
  data_i1 <= delay9_q_net_x0;
  data_q0 <= delay12_q_net_x0;
  data_q1 <= delay14_q_net_x0;
  dds_i0 <= delay10_q_net_x0;
  dds_i1 <= delay11_q_net_x0;
  dds_q0 <= delay17_q_net_x0;
  dds_q1 <= delay18_q_net_x0;
  qdr0 <= convert_address_dout_net_x2;
  qdr0_x0 <= convert_be_dout_net_x2;
  qdr0_x1 <= convert_data_in_dout_net_x2;
  qdr0_x2 <= convert_rd_en_dout_net_x2;
  qdr0_x3 <= convert_wr_en_dout_net_x2;
  qdr1 <= convert_address_dout_net_x3;
  qdr1_x0 <= convert_be_dout_net_x3;
  qdr1_x1 <= convert_data_in_dout_net_x3;
  qdr1_x2 <= convert_rd_en_dout_net_x3;
  qdr1_x3 <= convert_wr_en_dout_net_x3;

  constant1: entity work.constant_68d110842c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant3: entity work.constant_19562ab42f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 19,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      din => delay21_q_net,
      en => "1",
      dout => convert2_dout_net
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      din => delay34_q_net,
      en => "1",
      dout => convert3_dout_net
    );

  convert9: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert9_dout_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_121582607093004b",
      op_arith => xlUnsigned,
      op_width => 20
    )
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      en => "1",
      rst(0) => edge_op_y_net_x0,
      op => counter_op_net
    );

  delay10: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => reinterpret5_output_port_net,
      q => delay10_q_net_x0
    );

  delay11: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => reinterpret6_output_port_net,
      q => delay11_q_net_x0
    );

  delay12: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => reinterpret8_output_port_net,
      q => delay12_q_net_x0
    );

  delay13: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => delay75_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => reinterpret7_output_port_net,
      q => delay14_q_net_x0
    );

  delay16: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d(0) => slice1_y_net_x1,
      q(0) => delay16_q_net
    );

  delay17: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => reinterpret3_output_port_net,
      q => delay17_q_net_x0
    );

  delay18: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => reinterpret2_output_port_net,
      q => delay18_q_net_x0
    );

  delay2: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => reinterpret4_output_port_net,
      q => delay2_q_net_x0
    );

  delay21: entity work.delay_241f4fc903
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => en3_y_net,
      q => delay21_q_net
    );

  delay27: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d(0) => delay16_q_net,
      q(0) => delay27_q_net
    );

  delay34: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => delay74_q_net,
      q => delay34_q_net
    );

  delay4: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => convert2_dout_net,
      q => delay4_q_net
    );

  delay5: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => constant1_op_net,
      q => delay5_q_net
    );

  delay52: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d(0) => delay27_q_net,
      q(0) => delay52_q_net_x0
    );

  delay53: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d(0) => en1_y_net,
      q(0) => delay53_q_net_x0
    );

  delay54: entity work.delay_ebec135d8a
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => constant3_op_net,
      q => delay54_q_net_x0
    );

  delay55: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => delay4_q_net,
      q => delay55_q_net_x0
    );

  delay56: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => delay5_q_net,
      q => delay56_q_net_x0
    );

  delay57: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d(0) => delay27_q_net,
      q(0) => delay57_q_net_x0
    );

  delay58: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d(0) => en1_y_net,
      q(0) => delay58_q_net_x0
    );

  delay59: entity work.delay_ebec135d8a
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => constant3_op_net,
      q => delay59_q_net_x0
    );

  delay60: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => delay4_q_net,
      q => delay60_q_net_x0
    );

  delay61: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => delay5_q_net,
      q => delay61_q_net_x0
    );

  delay74: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => extract_parity_b_net_x1,
      q => delay74_q_net
    );

  delay75: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => extract_parity_b_net_x0,
      q => delay75_q_net
    );

  delay9: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      d => reinterpret1_output_port_net,
      q => delay9_q_net_x0
    );

  edge_detect1_a1c15fd7db: entity work.edge_detect1_entity_a1c15fd7db
    port map (
      ce_1 => ce_1_sg_x13,
      clk_1 => clk_1_sg_x13,
      in_x0 => slice1_y_net_x1,
      out_x0 => edge_op_y_net_x0
    );

  en1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => en1_y_net
    );

  en3: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 19,
      x_width => 20,
      y_width => 19
    )
    port map (
      x => counter_op_net,
      y => en3_y_net
    );

  qdr0_d441e1a7c0: entity work.qdr0_entity_d441e1a7c0
    port map (
      address => delay55_q_net_x0,
      be => delay54_q_net_x0,
      blast_0209_dds305_qdr_lut_qdr0_data_out => blast_0209_dds305_qdr_lut_qdr0_data_out_net_x1,
      ce_1 => ce_1_sg_x13,
      clk_1 => clk_1_sg_x13,
      data_in => delay56_q_net_x0,
      rd_en => delay52_q_net_x0,
      wr_en => delay53_q_net_x0,
      convert_address_x0 => convert_address_dout_net_x2,
      convert_be_x0 => convert_be_dout_net_x2,
      convert_data_in_x0 => convert_data_in_dout_net_x2,
      convert_rd_en_x0 => convert_rd_en_dout_net_x2,
      convert_wr_en_x0 => convert_wr_en_dout_net_x2,
      data_out => extract_parity_b_net_x0
    );

  qdr1_acdff3db75: entity work.qdr1_entity_acdff3db75
    port map (
      address => delay60_q_net_x0,
      be => delay59_q_net_x0,
      blast_0209_dds305_qdr_lut_qdr1_data_out => blast_0209_dds305_qdr_lut_qdr1_data_out_net_x1,
      ce_1 => ce_1_sg_x13,
      clk_1 => clk_1_sg_x13,
      data_in => delay61_q_net_x0,
      rd_en => delay57_q_net_x0,
      wr_en => delay58_q_net_x0,
      convert_address_x0 => convert_address_dout_net_x3,
      convert_be_x0 => convert_be_dout_net_x3,
      convert_data_in_x0 => convert_data_in_dout_net_x3,
      convert_rd_en_x0 => convert_rd_en_dout_net_x3,
      convert_wr_en_x0 => convert_wr_en_dout_net_x3,
      data_out => extract_parity_b_net_x1
    );

  reinterpret1: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice17_y_net,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret8_output_port_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 48,
      new_msb => 63,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => slice2_y_net,
      y => slice10_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => slice3_y_net,
      y => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => slice3_y_net,
      y => slice17_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 63,
      x_width => 64,
      y_width => 64
    )
    port map (
      x => convert9_dout_net,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 63,
      x_width => 64,
      y_width => 64
    )
    port map (
      x => convert3_dout_net,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => slice2_y_net,
      y => slice4_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => slice2_y_net,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 47,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => slice3_y_net,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 48,
      new_msb => 63,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => slice3_y_net,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 47,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => slice2_y_net,
      y => slice9_y_net
    );

  we_qdr_c92134ab7a: entity work.we_qdr_entity_c92134ab7a
    port map (
      blast_0209_dds305_qdr_lut_we_qdr_user_data_out => blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/add_gen/edge_detect"

entity edge_detect_entity_27b9bc22ff is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect_entity_27b9bc22ff;

architecture structural of edge_detect_entity_27b9bc22ff is
  signal ce_1_sg_x22: std_logic;
  signal clk_1_sg_x22: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal slice3_y_net_x0: std_logic;

begin
  ce_1_sg_x22 <= ce_1;
  clk_1_sg_x22 <= clk_1;
  slice3_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x22,
      clk => clk_1_sg_x22,
      clr => '0',
      d(0) => slice3_y_net_x0,
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_f6397bdee1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x22,
      clk => clk_1_sg_x22,
      clr => '0',
      ip(0) => slice3_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/add_gen"

entity add_gen_entity_9a8e3b8d33 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    cont: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    go: in std_logic; 
    init: in std_logic; 
    we: in std_logic; 
    add: out std_logic_vector(8 downto 0); 
    dout: out std_logic_vector(127 downto 0); 
    status: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end add_gen_entity_9a8e3b8d33;

architecture structural of add_gen_entity_9a8e3b8d33 is
  signal add_gen_op_net: std_logic_vector(13 downto 0);
  signal ce_1_sg_x23: std_logic;
  signal clk_1_sg_x23: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal convert_dout_net: std_logic_vector(17 downto 0);
  signal data_choice_y_net_x0: std_logic_vector(127 downto 0);
  signal delay1_q_net: std_logic_vector(12 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net_x0: std_logic_vector(127 downto 0);
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register5_q_net: std_logic;
  signal register6_q_net_x0: std_logic;
  signal shift_op_net: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(12 downto 0);
  signal slice2_y_net_x0: std_logic_vector(8 downto 0);
  signal slice3_y_net_x0: std_logic;
  signal we_choice_y_net_x0: std_logic;

begin
  ce_1_sg_x23 <= ce_1;
  clk_1_sg_x23 <= clk_1;
  never_op_net_x0 <= cont;
  data_choice_y_net_x0 <= din;
  register6_q_net_x0 <= go;
  edge_op_y_net_x1 <= init;
  we_choice_y_net_x0 <= we;
  add <= slice2_y_net_x0;
  dout <= delay6_q_net_x0;
  status <= concat_y_net_x0;
  we_o <= logical6_y_net_x0;

  add_gen: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_ce2b8528998e57e3",
      op_arith => xlUnsigned,
      op_width => 14
    )
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      en(0) => logical6_y_net_x0,
      rst(0) => delay4_q_net,
      op => add_gen_op_net
    );

  concat: entity work.concat_0d26a0854a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => shift_op_net,
      in1(0) => inverter_op_net,
      in2 => delay1_q_net,
      y => concat_y_net_x0
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 18,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      din(0) => register5_q_net,
      en => "1",
      dout => convert_dout_net
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d(0) => delay4_q_net,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_67ef71f6b4
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d => slice1_y_net,
      q => delay1_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d(0) => never_op_net_x0,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d(0) => edge_op_y_net_x1,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_ee0f706095
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d => data_choice_y_net_x0,
      q => delay6_q_net_x0
    );

  edge_detect_27b9bc22ff: entity work.edge_detect_entity_27b9bc22ff
    port map (
      ce_1 => ce_1_sg_x23,
      clk_1 => clk_1_sg_x23,
      in_x0 => slice3_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_6844eee868
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      ip(0) => register5_q_net,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      ip(0) => edge_op_y_net_x0,
      op(0) => inverter1_op_net
    );

  logical1: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d0(0) => we_choice_y_net_x0,
      d1(0) => register6_q_net_x0,
      y(0) => logical1_y_net
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay3_q_net,
      d1(0) => inverter1_op_net,
      y(0) => logical4_y_net
    );

  logical6: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register5_q_net,
      d1(0) => logical4_y_net,
      d2(0) => logical1_y_net,
      y(0) => logical6_y_net_x0
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"1"
    )
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      d(0) => delay3_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => delay_q_net,
      q(0) => register5_q_net
    );

  shift: entity work.shift_718ef321c4
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      ip => convert_dout_net,
      op => shift_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 12,
      x_width => 14,
      y_width => 13
    )
    port map (
      x => add_gen_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 12,
      x_width => 14,
      y_width => 9
    )
    port map (
      x => add_gen_op_net,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 13,
      new_msb => 13,
      x_width => 14,
      y_width => 1
    )
    port map (
      x => add_gen_op_net,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/basic_ctrl/dram_munge"

entity dram_munge_entity_9ed6f8ea3d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    init: in std_logic; 
    we: in std_logic; 
    dout: out std_logic_vector(127 downto 0); 
    we_o: out std_logic
  );
end dram_munge_entity_9ed6f8ea3d;

architecture structural of dram_munge_entity_9ed6f8ea3d is
  signal cast_dout_net_x0: std_logic_vector(127 downto 0);
  signal ce_1_sg_x24: std_logic;
  signal clk_1_sg_x24: std_logic;
  signal con0_op_net: std_logic_vector(1 downto 0);
  signal con1_op_net: std_logic_vector(1 downto 0);
  signal con2_op_net: std_logic_vector(1 downto 0);
  signal con3_op_net: std_logic_vector(1 downto 0);
  signal concat1_y_net: std_logic_vector(271 downto 0);
  signal concat_y_net: std_logic_vector(271 downto 0);
  signal constant_op_net: std_logic_vector(7 downto 0);
  signal data_choice_y_net_x1: std_logic_vector(127 downto 0);
  signal delay1_q_net: std_logic;
  signal delay_q_net: std_logic;
  signal dout_count_op_net: std_logic;
  signal dram_op_net: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal input_count_op_net: std_logic_vector(1 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x0: std_logic_vector(271 downto 0);
  signal mux1_y_net_x1: std_logic;
  signal register1_q_net: std_logic_vector(127 downto 0);
  signal register2_q_net: std_logic_vector(127 downto 0);
  signal register3_q_net: std_logic_vector(127 downto 0);
  signal register_q_net: std_logic_vector(127 downto 0);
  signal relational1_op_net: std_logic;
  signal relational2_op_net: std_logic;
  signal relational3_op_net: std_logic;
  signal relational_op_net: std_logic;
  signal we_choice_y_net_x1: std_logic;

begin
  ce_1_sg_x24 <= ce_1;
  clk_1_sg_x24 <= clk_1;
  cast_dout_net_x0 <= din;
  edge_op_y_net_x2 <= init;
  mux1_y_net_x1 <= we;
  dout <= data_choice_y_net_x1;
  we_o <= we_choice_y_net_x1;

  con0: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con0_op_net
    );

  con1: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con1_op_net
    );

  con2: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con2_op_net
    );

  con3: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con3_op_net
    );

  concat: entity work.concat_fd1ce36c4a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant_op_net,
      in1 => register_q_net,
      in2 => constant_op_net,
      in3 => register1_q_net,
      y => concat_y_net
    );

  concat1: entity work.concat_fd1ce36c4a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant_op_net,
      in1 => register2_q_net,
      in2 => constant_op_net,
      in3 => register3_q_net,
      y => concat1_y_net
    );

  constant_x0: entity work.constant_91ef1678ca
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  data_choice: entity work.mux_5441ad2d93
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => cast_dout_net_x0,
      d1 => mux1_y_net_x0,
      sel(0) => dram_op_net,
      y => data_choice_y_net_x1
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      clr => '0',
      d(0) => logical_y_net,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay1_q_net
    );

  dout_count: entity work.counter_caa2b01eef
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      clr => '0',
      en(0) => logical1_y_net,
      rst(0) => edge_op_y_net_x2,
      op(0) => dout_count_op_net
    );

  dram: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => dram_op_net
    );

  input_count: entity work.counter_26bd51c4ba
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      clr => '0',
      en(0) => mux1_y_net_x1,
      rst(0) => edge_op_y_net_x2,
      op => input_count_op_net
    );

  logical: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      clr => '0',
      d0(0) => relational3_op_net,
      d1(0) => mux1_y_net_x1,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => delay_q_net,
      y(0) => logical1_y_net
    );

  mux1: entity work.mux_ddf27bda35
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      clr => '0',
      d0 => concat_y_net,
      d1 => concat1_y_net,
      sel(0) => dout_count_op_net,
      y => mux1_y_net_x0
    );

  register1: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      d => cast_dout_net_x0,
      en(0) => relational1_op_net,
      rst => "0",
      q => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      d => cast_dout_net_x0,
      en(0) => relational2_op_net,
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      d => cast_dout_net_x0,
      en(0) => relational3_op_net,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      d => cast_dout_net_x0,
      en(0) => relational_op_net,
      rst => "0",
      q => register_q_net
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con0_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational2_op_net
    );

  relational3: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational3_op_net
    );

  we_choice: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux1_y_net_x1,
      d1(0) => delay1_q_net,
      sel(0) => dram_op_net,
      y(0) => we_choice_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/basic_ctrl"

entity basic_ctrl_entity_735d6524c5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ctrl: in std_logic_vector(31 downto 0); 
    din: in std_logic_vector(127 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    dout: out std_logic_vector(127 downto 0); 
    go: out std_logic; 
    init: out std_logic; 
    we_o: out std_logic
  );
end basic_ctrl_entity_735d6524c5;

architecture structural of basic_ctrl_entity_735d6524c5 is
  signal cast_dout_net_x1: std_logic_vector(127 downto 0);
  signal ce_1_sg_x26: std_logic;
  signal clk_1_sg_x26: std_logic;
  signal constant1_op_net: std_logic;
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic;
  signal data_choice_y_net_x2: std_logic_vector(127 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal delay9_q_net_x0: std_logic;
  signal edge_op_y_net_x4: std_logic;
  signal enable_y_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x1: std_logic;
  signal mux2_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal relational5_op_net_x0: std_logic;
  signal trig_src_y_net: std_logic;
  signal valid_src_y_net: std_logic;
  signal we_choice_y_net_x2: std_logic;

begin
  ce_1_sg_x26 <= ce_1;
  clk_1_sg_x26 <= clk_1;
  reint1_output_port_net_x0 <= ctrl;
  cast_dout_net_x1 <= din;
  delay9_q_net_x0 <= trig;
  relational5_op_net_x0 <= we;
  dout <= data_choice_y_net_x2;
  go <= register6_q_net_x1;
  init <= edge_op_y_net_x4;
  we_o <= we_choice_y_net_x2;

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x26,
      clk => clk_1_sg_x26,
      clr => '0',
      d(0) => enable_y_net,
      q(0) => delay1_q_net_x0
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x26,
      clk => clk_1_sg_x26,
      clr => '0',
      d(0) => trig_src_y_net,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x26,
      clk => clk_1_sg_x26,
      clr => '0',
      d(0) => valid_src_y_net,
      q(0) => delay3_q_net
    );

  dram_munge_9ed6f8ea3d: entity work.dram_munge_entity_9ed6f8ea3d
    port map (
      ce_1 => ce_1_sg_x26,
      clk_1 => clk_1_sg_x26,
      din => cast_dout_net_x1,
      init => edge_op_y_net_x4,
      we => mux1_y_net_x1,
      dout => data_choice_y_net_x2,
      we_o => we_choice_y_net_x2
    );

  edge_detect_02dd751f80: entity work.edge_detect1_entity_a1c15fd7db
    port map (
      ce_1 => ce_1_sg_x26,
      clk_1 => clk_1_sg_x26,
      in_x0 => delay1_q_net_x0,
      out_x0 => edge_op_y_net_x4
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => enable_y_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x26,
      clk => clk_1_sg_x26,
      clr => '0',
      ip(0) => edge_op_y_net_x4,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux2_y_net,
      d1(0) => inverter_op_net,
      y(0) => logical_y_net
    );

  mux1: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => relational5_op_net_x0,
      d1(0) => constant2_op_net,
      sel(0) => delay3_q_net,
      y(0) => mux1_y_net_x1
    );

  mux2: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay9_q_net_x0,
      d1(0) => constant1_op_net,
      sel(0) => delay2_q_net,
      y(0) => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x26,
      clk => clk_1_sg_x26,
      d(0) => constant_op_net,
      en(0) => edge_op_y_net_x4,
      rst(0) => logical_y_net,
      q(0) => register1_q_net
    );

  register6: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x26,
      clk => clk_1_sg_x26,
      d(0) => mux2_y_net,
      en(0) => register1_q_net,
      rst(0) => edge_op_y_net_x4,
      q(0) => register6_q_net_x1
    );

  trig_src: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => trig_src_y_net
    );

  valid_src: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => valid_src_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/bram/calc_add"

entity calc_add_entity_bd3853bc75 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(8 downto 0)
  );
end calc_add_entity_bd3853bc75;

architecture structural of calc_add_entity_bd3853bc75 is
  signal add_del_q_net_x0: std_logic_vector(8 downto 0);
  signal add_sub_s_net: std_logic;
  signal ce_1_sg_x27: std_logic;
  signal clk_1_sg_x27: std_logic;
  signal concat_y_net: std_logic_vector(8 downto 0);
  signal const_op_net: std_logic;
  signal convert_addr_dout_net: std_logic_vector(8 downto 0);
  signal lsw_y_net: std_logic;
  signal manipulate_op_net: std_logic;
  signal msw_y_net: std_logic_vector(7 downto 0);
  signal mux_y_net_x0: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x27 <= ce_1;
  clk_1_sg_x27 <= clk_1;
  add_del_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  add_sub: entity work.addsub_c13097e33e
    port map (
      a(0) => const_op_net,
      b(0) => lsw_y_net,
      ce => ce_1_sg_x27,
      clk => clk_1_sg_x27,
      clr => '0',
      s(0) => add_sub_s_net
    );

  concat: entity work.concat_e27c8b361a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => msw_y_net,
      in1(0) => add_sub_s_net,
      y => concat_y_net
    );

  const: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 9,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 9,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x27,
      clk => clk_1_sg_x27,
      clr => '0',
      din => add_del_q_net_x0,
      en => "1",
      dout => convert_addr_dout_net
    );

  lsw: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => convert_addr_dout_net,
      y(0) => lsw_y_net
    );

  manipulate: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => manipulate_op_net
    );

  msw: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 8,
      x_width => 9,
      y_width => 8
    )
    port map (
      x => convert_addr_dout_net,
      y => msw_y_net
    );

  mux: entity work.mux_1c9c15de9c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => convert_addr_dout_net,
      d1 => concat_y_net,
      sel(0) => manipulate_op_net,
      y => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/bram/munge_in/join"

entity join_entity_628a03ad90 is
  port (
    in1: in std_logic_vector(31 downto 0); 
    in2: in std_logic_vector(31 downto 0); 
    in3: in std_logic_vector(31 downto 0); 
    in4: in std_logic_vector(31 downto 0); 
    bus_out: out std_logic_vector(127 downto 0)
  );
end join_entity_628a03ad90;

architecture structural of join_entity_628a03ad90 is
  signal concatenate_y_net_x0: std_logic_vector(127 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(31 downto 0);

begin
  reinterpret1_output_port_net_x1 <= in1;
  reinterpret2_output_port_net_x1 <= in2;
  reinterpret3_output_port_net_x1 <= in3;
  reinterpret4_output_port_net_x1 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b11ec1c0d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret3_output_port_net_x1,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x1,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/bram/munge_in/split"

entity split_entity_23fd67f277 is
  port (
    bus_in: in std_logic_vector(127 downto 0); 
    lsb_out1: out std_logic_vector(31 downto 0); 
    msb_out4: out std_logic_vector(31 downto 0); 
    out2: out std_logic_vector(31 downto 0); 
    out3: out std_logic_vector(31 downto 0)
  );
end split_entity_23fd67f277;

architecture structural of split_entity_23fd67f277 is
  signal reinterpret1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(127 downto 0);
  signal slice1_y_net: std_logic_vector(31 downto 0);
  signal slice2_y_net: std_logic_vector(31 downto 0);
  signal slice3_y_net: std_logic_vector(31 downto 0);
  signal slice4_y_net: std_logic_vector(31 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out4 <= reinterpret4_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 128,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 63,
      x_width => 128,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 64,
      new_msb => 95,
      x_width => 128,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 96,
      new_msb => 127,
      x_width => 128,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/bram/munge_in"

entity munge_in_entity_bfbd9f3801 is
  port (
    din: in std_logic_vector(127 downto 0); 
    dout: out std_logic_vector(127 downto 0)
  );
end munge_in_entity_bfbd9f3801;

architecture structural of munge_in_entity_bfbd9f3801 is
  signal concatenate_y_net_x0: std_logic_vector(127 downto 0);
  signal dat_del_q_net_x0: std_logic_vector(127 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(127 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(127 downto 0);

begin
  dat_del_q_net_x0 <= din;
  dout <= reinterpret_out_output_port_net_x0;

  join_628a03ad90: entity work.join_entity_628a03ad90
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => reinterpret2_output_port_net_x2,
      in3 => reinterpret3_output_port_net_x2,
      in4 => reinterpret4_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => dat_del_q_net_x0,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x0
    );

  split_23fd67f277: entity work.split_entity_23fd67f277
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/bram"

entity bram_entity_14100e7e22 is
  port (
    addr: in std_logic_vector(8 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(127 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(8 downto 0); 
    convert_din1_x0: out std_logic_vector(127 downto 0); 
    convert_we_x0: out std_logic
  );
end bram_entity_14100e7e22;

architecture structural of bram_entity_14100e7e22 is
  signal add_del_q_net_x1: std_logic_vector(8 downto 0);
  signal ce_1_sg_x28: std_logic;
  signal clk_1_sg_x28: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(8 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(127 downto 0);
  signal mux_y_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(127 downto 0);
  signal we_del_q_net_x0: std_logic;

begin
  add_del_q_net_x1 <= addr;
  ce_1_sg_x28 <= ce_1;
  clk_1_sg_x28 <= clk_1;
  dat_del_q_net_x1 <= data_in;
  we_del_q_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_bd3853bc75: entity work.calc_add_entity_bd3853bc75
    port map (
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      in_x0 => add_del_q_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 9,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 9,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x28,
      clk => clk_1_sg_x28,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 128,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x28,
      clk => clk_1_sg_x28,
      clr => '0',
      din => reinterpret_out_output_port_net_x0,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x28,
      clk => clk_1_sg_x28,
      clr => '0',
      din(0) => we_del_q_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

  munge_in_bfbd9f3801: entity work.munge_in_entity_bfbd9f3801
    port map (
      din => dat_del_q_net_x1,
      dout => reinterpret_out_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/ctrl"

entity ctrl_entity_8c23256422 is
  port (
    blast_0209_dds305_accum_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_8c23256422;

architecture structural of ctrl_entity_8c23256422 is
  signal blast_0209_dds305_accum_snap_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_accum_snap_ctrl_user_data_out_net_x0 <= blast_0209_dds305_accum_snap_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_accum_snap_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap/status"

entity status_entity_1610992e91 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    out_reg: in std_logic_vector(31 downto 0); 
    cast_gw_x0: out std_logic_vector(31 downto 0)
  );
end status_entity_1610992e91;

architecture structural of status_entity_1610992e91 is
  signal assert_reg_dout_net: std_logic_vector(31 downto 0);
  signal cast_gw_dout_net_x0: std_logic_vector(31 downto 0);
  signal ce_1_sg_x29: std_logic;
  signal clk_1_sg_x29: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x29 <= ce_1;
  clk_1_sg_x29 <= clk_1;
  concat_y_net_x1 <= out_reg;
  cast_gw_x0 <= cast_gw_dout_net_x0;

  assert_reg: entity work.xlpassthrough
    generic map (
      din_width => 32,
      dout_width => 32
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_reg_dout_net
    );

  cast_gw: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x29,
      clk => clk_1_sg_x29,
      clr => '0',
      din => io_delay_q_net,
      en => "1",
      dout => cast_gw_dout_net_x0
    );

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reint1_output_port_net,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => assert_reg_dout_net,
      output_port => reint1_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/accum_snap"

entity accum_snap_entity_c908e90a25 is
  port (
    blast_0209_dds305_accum_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    bram: out std_logic_vector(8 downto 0); 
    bram_x0: out std_logic_vector(127 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0)
  );
end accum_snap_entity_c908e90a25;

architecture structural of accum_snap_entity_c908e90a25 is
  signal add_del_q_net_x1: std_logic_vector(8 downto 0);
  signal blast_0209_dds305_accum_snap_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal cast_dout_net_x1: std_logic_vector(127 downto 0);
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x30: std_logic;
  signal clk_1_sg_x30: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal convert_addr_dout_net_x1: std_logic_vector(8 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(127 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(127 downto 0);
  signal delay6_q_net_x0: std_logic_vector(127 downto 0);
  signal delay72_q_net_x0: std_logic_vector(127 downto 0);
  signal delay9_q_net_x1: std_logic;
  signal edge_op_y_net_x4: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal relational5_op_net_x1: std_logic;
  signal ri_output_port_net: std_logic_vector(127 downto 0);
  signal slice2_y_net_x0: std_logic_vector(8 downto 0);
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  blast_0209_dds305_accum_snap_ctrl_user_data_out_net_x1 <= blast_0209_dds305_accum_snap_ctrl_user_data_out;
  ce_1_sg_x30 <= ce_1;
  clk_1_sg_x30 <= clk_1;
  delay72_q_net_x0 <= din;
  delay9_q_net_x1 <= trig;
  relational5_op_net_x1 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= cast_gw_dout_net_x1;

  add_del: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x30,
      clk => clk_1_sg_x30,
      clr => '0',
      d => slice2_y_net_x0,
      q => add_del_q_net_x1
    );

  add_gen_9a8e3b8d33: entity work.add_gen_entity_9a8e3b8d33
    port map (
      ce_1 => ce_1_sg_x30,
      clk_1 => clk_1_sg_x30,
      cont => never_op_net_x0,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we => we_choice_y_net_x2,
      add => slice2_y_net_x0,
      dout => delay6_q_net_x0,
      status => concat_y_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_735d6524c5: entity work.basic_ctrl_entity_735d6524c5
    port map (
      ce_1 => ce_1_sg_x30,
      clk_1 => clk_1_sg_x30,
      ctrl => reint1_output_port_net_x1,
      din => cast_dout_net_x1,
      trig => delay9_q_net_x1,
      we => relational5_op_net_x1,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we_o => we_choice_y_net_x2
    );

  bram_14100e7e22: entity work.bram_entity_14100e7e22
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x30,
      clk_1 => clk_1_sg_x30,
      data_in => dat_del_q_net_x1,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 128,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x30,
      clk => clk_1_sg_x30,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  ctrl_8c23256422: entity work.ctrl_entity_8c23256422
    port map (
      blast_0209_dds305_accum_snap_ctrl_user_data_out => blast_0209_dds305_accum_snap_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  dat_del: entity work.delay_ee0f706095
    port map (
      ce => ce_1_sg_x30,
      clk => clk_1_sg_x30,
      clr => '0',
      d => delay6_q_net_x0,
      q => dat_del_q_net_x1
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x0
    );

  ri: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay72_q_net_x0,
      output_port => ri_output_port_net
    );

  status_1610992e91: entity work.status_entity_1610992e91
    port map (
      ce_1 => ce_1_sg_x30,
      clk_1 => clk_1_sg_x30,
      out_reg => concat_y_net_x1,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

  we_del: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x30,
      clk => clk_1_sg_x30,
      clr => '0',
      d(0) => logical6_y_net_x0,
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_mkid/conv"

entity conv_entity_33e4e5654a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(11 downto 0); 
    out1: out std_logic_vector(11 downto 0)
  );
end conv_entity_33e4e5654a;

architecture structural of conv_entity_33e4e5654a is
  signal blast_0209_dds305_adc_mkid_user_data_i0_net_x0: std_logic_vector(11 downto 0);
  signal ce_1_sg_x31: std_logic;
  signal clk_1_sg_x31: std_logic;
  signal concat_y_net: std_logic_vector(11 downto 0);
  signal inverter_op_net: std_logic;
  signal reinterpret_output_port_net_x0: std_logic_vector(11 downto 0);
  signal slice1_y_net: std_logic_vector(10 downto 0);
  signal slice_y_net: std_logic;

begin
  ce_1_sg_x31 <= ce_1;
  clk_1_sg_x31 <= clk_1;
  blast_0209_dds305_adc_mkid_user_data_i0_net_x0 <= in1;
  out1 <= reinterpret_output_port_net_x0;

  concat: entity work.concat_9769d05421
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inverter_op_net,
      in1 => slice1_y_net,
      y => concat_y_net
    );

  inverter: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x31,
      clk => clk_1_sg_x31,
      clr => '0',
      ip(0) => slice_y_net,
      op(0) => inverter_op_net
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => reinterpret_output_port_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 11,
      new_msb => 11,
      x_width => 12,
      y_width => 1
    )
    port map (
      x => blast_0209_dds305_adc_mkid_user_data_i0_net_x0,
      y(0) => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 10,
      x_width => 12,
      y_width => 11
    )
    port map (
      x => blast_0209_dds305_adc_mkid_user_data_i0_net_x0,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_mkid"

entity adc_mkid_entity_aa08432fe2 is
  port (
    blast_0209_dds305_adc_mkid_user_data_i0: in std_logic_vector(11 downto 0); 
    blast_0209_dds305_adc_mkid_user_data_i1: in std_logic_vector(11 downto 0); 
    blast_0209_dds305_adc_mkid_user_data_q0: in std_logic_vector(11 downto 0); 
    blast_0209_dds305_adc_mkid_user_data_q1: in std_logic_vector(11 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_i0: out std_logic_vector(11 downto 0); 
    data_i1: out std_logic_vector(11 downto 0); 
    data_q0: out std_logic_vector(11 downto 0); 
    data_q1: out std_logic_vector(11 downto 0)
  );
end adc_mkid_entity_aa08432fe2;

architecture structural of adc_mkid_entity_aa08432fe2 is
  signal blast_0209_dds305_adc_mkid_user_data_i0_net_x1: std_logic_vector(11 downto 0);
  signal blast_0209_dds305_adc_mkid_user_data_i1_net_x1: std_logic_vector(11 downto 0);
  signal blast_0209_dds305_adc_mkid_user_data_q0_net_x1: std_logic_vector(11 downto 0);
  signal blast_0209_dds305_adc_mkid_user_data_q1_net_x1: std_logic_vector(11 downto 0);
  signal ce_1_sg_x35: std_logic;
  signal clk_1_sg_x35: std_logic;
  signal reinterpret_output_port_net_x4: std_logic_vector(11 downto 0);
  signal reinterpret_output_port_net_x5: std_logic_vector(11 downto 0);
  signal reinterpret_output_port_net_x6: std_logic_vector(11 downto 0);
  signal reinterpret_output_port_net_x7: std_logic_vector(11 downto 0);

begin
  blast_0209_dds305_adc_mkid_user_data_i0_net_x1 <= blast_0209_dds305_adc_mkid_user_data_i0;
  blast_0209_dds305_adc_mkid_user_data_i1_net_x1 <= blast_0209_dds305_adc_mkid_user_data_i1;
  blast_0209_dds305_adc_mkid_user_data_q0_net_x1 <= blast_0209_dds305_adc_mkid_user_data_q0;
  blast_0209_dds305_adc_mkid_user_data_q1_net_x1 <= blast_0209_dds305_adc_mkid_user_data_q1;
  ce_1_sg_x35 <= ce_1;
  clk_1_sg_x35 <= clk_1;
  data_i0 <= reinterpret_output_port_net_x4;
  data_i1 <= reinterpret_output_port_net_x5;
  data_q0 <= reinterpret_output_port_net_x6;
  data_q1 <= reinterpret_output_port_net_x7;

  conv1_5ea3196ca3: entity work.conv_entity_33e4e5654a
    port map (
      ce_1 => ce_1_sg_x35,
      clk_1 => clk_1_sg_x35,
      in1 => blast_0209_dds305_adc_mkid_user_data_i1_net_x1,
      out1 => reinterpret_output_port_net_x5
    );

  conv2_416df6b0ca: entity work.conv_entity_33e4e5654a
    port map (
      ce_1 => ce_1_sg_x35,
      clk_1 => clk_1_sg_x35,
      in1 => blast_0209_dds305_adc_mkid_user_data_q0_net_x1,
      out1 => reinterpret_output_port_net_x6
    );

  conv3_b2e5f4b908: entity work.conv_entity_33e4e5654a
    port map (
      ce_1 => ce_1_sg_x35,
      clk_1 => clk_1_sg_x35,
      in1 => blast_0209_dds305_adc_mkid_user_data_q1_net_x1,
      out1 => reinterpret_output_port_net_x7
    );

  conv_33e4e5654a: entity work.conv_entity_33e4e5654a
    port map (
      ce_1 => ce_1_sg_x35,
      clk_1 => clk_1_sg_x35,
      in1 => blast_0209_dds305_adc_mkid_user_data_i0_net_x1,
      out1 => reinterpret_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/add_gen"

entity add_gen_entity_6b4e2cb58b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    cont: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    go: in std_logic; 
    init: in std_logic; 
    we: in std_logic; 
    add: out std_logic_vector(9 downto 0); 
    dout: out std_logic_vector(63 downto 0); 
    status: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end add_gen_entity_6b4e2cb58b;

architecture structural of add_gen_entity_6b4e2cb58b is
  signal add_gen_op_net: std_logic_vector(13 downto 0);
  signal ce_1_sg_x37: std_logic;
  signal clk_1_sg_x37: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal convert_dout_net: std_logic_vector(17 downto 0);
  signal data_choice_y_net_x0: std_logic_vector(63 downto 0);
  signal delay1_q_net: std_logic_vector(12 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net_x0: std_logic_vector(63 downto 0);
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register5_q_net: std_logic;
  signal register6_q_net_x0: std_logic;
  signal shift_op_net: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(12 downto 0);
  signal slice2_y_net_x0: std_logic_vector(9 downto 0);
  signal slice3_y_net_x0: std_logic;
  signal we_choice_y_net_x0: std_logic;

begin
  ce_1_sg_x37 <= ce_1;
  clk_1_sg_x37 <= clk_1;
  never_op_net_x0 <= cont;
  data_choice_y_net_x0 <= din;
  register6_q_net_x0 <= go;
  edge_op_y_net_x1 <= init;
  we_choice_y_net_x0 <= we;
  add <= slice2_y_net_x0;
  dout <= delay6_q_net_x0;
  status <= concat_y_net_x0;
  we_o <= logical6_y_net_x0;

  add_gen: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1bcc81fd2717e42f",
      op_arith => xlUnsigned,
      op_width => 14
    )
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      en(0) => logical6_y_net_x0,
      rst(0) => delay4_q_net,
      op => add_gen_op_net
    );

  concat: entity work.concat_0d26a0854a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => shift_op_net,
      in1(0) => inverter_op_net,
      in2 => delay1_q_net,
      y => concat_y_net_x0
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 18,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      din(0) => register5_q_net,
      en => "1",
      dout => convert_dout_net
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      d(0) => delay4_q_net,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_67ef71f6b4
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      d => slice1_y_net,
      q => delay1_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      d(0) => never_op_net_x0,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      d(0) => edge_op_y_net_x1,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_e2d047c154
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      d => data_choice_y_net_x0,
      q => delay6_q_net_x0
    );

  edge_detect_254fcbc986: entity work.edge_detect_entity_27b9bc22ff
    port map (
      ce_1 => ce_1_sg_x37,
      clk_1 => clk_1_sg_x37,
      in_x0 => slice3_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_6844eee868
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      ip(0) => register5_q_net,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      ip(0) => edge_op_y_net_x0,
      op(0) => inverter1_op_net
    );

  logical1: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      d0(0) => we_choice_y_net_x0,
      d1(0) => register6_q_net_x0,
      y(0) => logical1_y_net
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay3_q_net,
      d1(0) => inverter1_op_net,
      y(0) => logical4_y_net
    );

  logical6: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register5_q_net,
      d1(0) => logical4_y_net,
      d2(0) => logical1_y_net,
      y(0) => logical6_y_net_x0
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"1"
    )
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      d(0) => delay3_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => delay_q_net,
      q(0) => register5_q_net
    );

  shift: entity work.shift_718ef321c4
    port map (
      ce => ce_1_sg_x37,
      clk => clk_1_sg_x37,
      clr => '0',
      ip => convert_dout_net,
      op => shift_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 12,
      x_width => 14,
      y_width => 13
    )
    port map (
      x => add_gen_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 12,
      x_width => 14,
      y_width => 10
    )
    port map (
      x => add_gen_op_net,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 13,
      new_msb => 13,
      x_width => 14,
      y_width => 1
    )
    port map (
      x => add_gen_op_net,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/basic_ctrl/dram_munge"

entity dram_munge_entity_cb5befed27 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    init: in std_logic; 
    we: in std_logic; 
    dout: out std_logic_vector(63 downto 0); 
    we_o: out std_logic
  );
end dram_munge_entity_cb5befed27;

architecture structural of dram_munge_entity_cb5befed27 is
  signal cast_dout_net_x0: std_logic_vector(63 downto 0);
  signal ce_1_sg_x38: std_logic;
  signal clk_1_sg_x38: std_logic;
  signal con0_op_net: std_logic_vector(1 downto 0);
  signal con1_op_net: std_logic_vector(1 downto 0);
  signal con2_op_net: std_logic_vector(1 downto 0);
  signal con3_op_net: std_logic_vector(1 downto 0);
  signal concat1_y_net: std_logic_vector(143 downto 0);
  signal concat_y_net: std_logic_vector(143 downto 0);
  signal constant_op_net: std_logic_vector(7 downto 0);
  signal data_choice_y_net_x1: std_logic_vector(63 downto 0);
  signal delay1_q_net: std_logic;
  signal delay_q_net: std_logic;
  signal dout_count_op_net: std_logic;
  signal dram_op_net: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal input_count_op_net: std_logic_vector(1 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x0: std_logic_vector(143 downto 0);
  signal mux1_y_net_x1: std_logic;
  signal register1_q_net: std_logic_vector(63 downto 0);
  signal register2_q_net: std_logic_vector(63 downto 0);
  signal register3_q_net: std_logic_vector(63 downto 0);
  signal register_q_net: std_logic_vector(63 downto 0);
  signal relational1_op_net: std_logic;
  signal relational2_op_net: std_logic;
  signal relational3_op_net: std_logic;
  signal relational_op_net: std_logic;
  signal we_choice_y_net_x1: std_logic;

begin
  ce_1_sg_x38 <= ce_1;
  clk_1_sg_x38 <= clk_1;
  cast_dout_net_x0 <= din;
  edge_op_y_net_x2 <= init;
  mux1_y_net_x1 <= we;
  dout <= data_choice_y_net_x1;
  we_o <= we_choice_y_net_x1;

  con0: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con0_op_net
    );

  con1: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con1_op_net
    );

  con2: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con2_op_net
    );

  con3: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con3_op_net
    );

  concat: entity work.concat_1cf6dd7a8c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant_op_net,
      in1 => register_q_net,
      in2 => constant_op_net,
      in3 => register1_q_net,
      y => concat_y_net
    );

  concat1: entity work.concat_1cf6dd7a8c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant_op_net,
      in1 => register2_q_net,
      in2 => constant_op_net,
      in3 => register3_q_net,
      y => concat1_y_net
    );

  constant_x0: entity work.constant_91ef1678ca
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  data_choice: entity work.mux_5b4e0018fe
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => cast_dout_net_x0,
      d1 => mux1_y_net_x0,
      sel(0) => dram_op_net,
      y => data_choice_y_net_x1
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      clr => '0',
      d(0) => logical_y_net,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay1_q_net
    );

  dout_count: entity work.counter_caa2b01eef
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      clr => '0',
      en(0) => logical1_y_net,
      rst(0) => edge_op_y_net_x2,
      op(0) => dout_count_op_net
    );

  dram: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => dram_op_net
    );

  input_count: entity work.counter_26bd51c4ba
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      clr => '0',
      en(0) => mux1_y_net_x1,
      rst(0) => edge_op_y_net_x2,
      op => input_count_op_net
    );

  logical: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      clr => '0',
      d0(0) => relational3_op_net,
      d1(0) => mux1_y_net_x1,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => delay_q_net,
      y(0) => logical1_y_net
    );

  mux1: entity work.mux_d10510a905
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      clr => '0',
      d0 => concat_y_net,
      d1 => concat1_y_net,
      sel(0) => dout_count_op_net,
      y => mux1_y_net_x0
    );

  register1: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      d => cast_dout_net_x0,
      en(0) => relational1_op_net,
      rst => "0",
      q => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      d => cast_dout_net_x0,
      en(0) => relational2_op_net,
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      d => cast_dout_net_x0,
      en(0) => relational3_op_net,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x38,
      clk => clk_1_sg_x38,
      d => cast_dout_net_x0,
      en(0) => relational_op_net,
      rst => "0",
      q => register_q_net
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con0_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational2_op_net
    );

  relational3: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational3_op_net
    );

  we_choice: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux1_y_net_x1,
      d1(0) => delay1_q_net,
      sel(0) => dram_op_net,
      y(0) => we_choice_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/basic_ctrl"

entity basic_ctrl_entity_ca2b1806d1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ctrl: in std_logic_vector(31 downto 0); 
    din: in std_logic_vector(63 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    dout: out std_logic_vector(63 downto 0); 
    go: out std_logic; 
    init: out std_logic; 
    we_o: out std_logic
  );
end basic_ctrl_entity_ca2b1806d1;

architecture structural of basic_ctrl_entity_ca2b1806d1 is
  signal cast_dout_net_x1: std_logic_vector(63 downto 0);
  signal ce_1_sg_x40: std_logic;
  signal clk_1_sg_x40: std_logic;
  signal constant10_op_net_x0: std_logic;
  signal constant1_op_net: std_logic;
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic;
  signal data_choice_y_net_x2: std_logic_vector(63 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal edge_op_y_net_x4: std_logic;
  signal enable_y_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x1: std_logic;
  signal mux2_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice2_y_net_x0: std_logic;
  signal trig_src_y_net: std_logic;
  signal valid_src_y_net: std_logic;
  signal we_choice_y_net_x2: std_logic;

begin
  ce_1_sg_x40 <= ce_1;
  clk_1_sg_x40 <= clk_1;
  reint1_output_port_net_x0 <= ctrl;
  cast_dout_net_x1 <= din;
  slice2_y_net_x0 <= trig;
  constant10_op_net_x0 <= we;
  dout <= data_choice_y_net_x2;
  go <= register6_q_net_x1;
  init <= edge_op_y_net_x4;
  we_o <= we_choice_y_net_x2;

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x40,
      clk => clk_1_sg_x40,
      clr => '0',
      d(0) => enable_y_net,
      q(0) => delay1_q_net_x0
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x40,
      clk => clk_1_sg_x40,
      clr => '0',
      d(0) => trig_src_y_net,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x40,
      clk => clk_1_sg_x40,
      clr => '0',
      d(0) => valid_src_y_net,
      q(0) => delay3_q_net
    );

  dram_munge_cb5befed27: entity work.dram_munge_entity_cb5befed27
    port map (
      ce_1 => ce_1_sg_x40,
      clk_1 => clk_1_sg_x40,
      din => cast_dout_net_x1,
      init => edge_op_y_net_x4,
      we => mux1_y_net_x1,
      dout => data_choice_y_net_x2,
      we_o => we_choice_y_net_x2
    );

  edge_detect_bd3ed21b29: entity work.edge_detect1_entity_a1c15fd7db
    port map (
      ce_1 => ce_1_sg_x40,
      clk_1 => clk_1_sg_x40,
      in_x0 => delay1_q_net_x0,
      out_x0 => edge_op_y_net_x4
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => enable_y_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x40,
      clk => clk_1_sg_x40,
      clr => '0',
      ip(0) => edge_op_y_net_x4,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux2_y_net,
      d1(0) => inverter_op_net,
      y(0) => logical_y_net
    );

  mux1: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => constant10_op_net_x0,
      d1(0) => constant2_op_net,
      sel(0) => delay3_q_net,
      y(0) => mux1_y_net_x1
    );

  mux2: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice2_y_net_x0,
      d1(0) => constant1_op_net,
      sel(0) => delay2_q_net,
      y(0) => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x40,
      clk => clk_1_sg_x40,
      d(0) => constant_op_net,
      en(0) => edge_op_y_net_x4,
      rst(0) => logical_y_net,
      q(0) => register1_q_net
    );

  register6: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x40,
      clk => clk_1_sg_x40,
      d(0) => mux2_y_net,
      en(0) => register1_q_net,
      rst(0) => edge_op_y_net_x4,
      q(0) => register6_q_net_x1
    );

  trig_src: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => trig_src_y_net
    );

  valid_src: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => valid_src_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/bram/calc_add"

entity calc_add_entity_ac7ea3e703 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(9 downto 0); 
    out_x0: out std_logic_vector(9 downto 0)
  );
end calc_add_entity_ac7ea3e703;

architecture structural of calc_add_entity_ac7ea3e703 is
  signal add_del_q_net_x0: std_logic_vector(9 downto 0);
  signal add_sub_s_net: std_logic;
  signal ce_1_sg_x41: std_logic;
  signal clk_1_sg_x41: std_logic;
  signal concat_y_net: std_logic_vector(9 downto 0);
  signal const_op_net: std_logic;
  signal convert_addr_dout_net: std_logic_vector(9 downto 0);
  signal lsw_y_net: std_logic;
  signal manipulate_op_net: std_logic;
  signal msw_y_net: std_logic_vector(8 downto 0);
  signal mux_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x41 <= ce_1;
  clk_1_sg_x41 <= clk_1;
  add_del_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  add_sub: entity work.addsub_c13097e33e
    port map (
      a(0) => const_op_net,
      b(0) => lsw_y_net,
      ce => ce_1_sg_x41,
      clk => clk_1_sg_x41,
      clr => '0',
      s(0) => add_sub_s_net
    );

  concat: entity work.concat_1d98d96b58
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => msw_y_net,
      in1(0) => add_sub_s_net,
      y => concat_y_net
    );

  const: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x41,
      clk => clk_1_sg_x41,
      clr => '0',
      din => add_del_q_net_x0,
      en => "1",
      dout => convert_addr_dout_net
    );

  lsw: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => convert_addr_dout_net,
      y(0) => lsw_y_net
    );

  manipulate: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => manipulate_op_net
    );

  msw: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 9,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => convert_addr_dout_net,
      y => msw_y_net
    );

  mux: entity work.mux_4fe5face7f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => convert_addr_dout_net,
      d1 => concat_y_net,
      sel(0) => manipulate_op_net,
      y => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/bram/munge_in/join"

entity join_entity_aefcecb885 is
  port (
    in1: in std_logic_vector(31 downto 0); 
    in2: in std_logic_vector(31 downto 0); 
    bus_out: out std_logic_vector(63 downto 0)
  );
end join_entity_aefcecb885;

architecture structural of join_entity_aefcecb885 is
  signal concatenate_y_net_x0: std_logic_vector(63 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(31 downto 0);

begin
  reinterpret1_output_port_net_x1 <= in1;
  reinterpret2_output_port_net_x1 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_62c4475a80
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/bram/munge_in/split"

entity split_entity_2d71950948 is
  port (
    bus_in: in std_logic_vector(63 downto 0); 
    lsb_out1: out std_logic_vector(31 downto 0); 
    msb_out2: out std_logic_vector(31 downto 0)
  );
end split_entity_2d71950948;

architecture structural of split_entity_2d71950948 is
  signal reinterpret1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(63 downto 0);
  signal slice1_y_net: std_logic_vector(31 downto 0);
  signal slice2_y_net: std_logic_vector(31 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out2 <= reinterpret2_output_port_net_x2;

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 64,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 63,
      x_width => 64,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/bram/munge_in"

entity munge_in_entity_b453ddae89 is
  port (
    din: in std_logic_vector(63 downto 0); 
    dout: out std_logic_vector(63 downto 0)
  );
end munge_in_entity_b453ddae89;

architecture structural of munge_in_entity_b453ddae89 is
  signal concatenate_y_net_x0: std_logic_vector(63 downto 0);
  signal dat_del_q_net_x0: std_logic_vector(63 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(63 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(63 downto 0);

begin
  dat_del_q_net_x0 <= din;
  dout <= reinterpret_out_output_port_net_x0;

  join_aefcecb885: entity work.join_entity_aefcecb885
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => reinterpret2_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_9a13f6a2a0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => dat_del_q_net_x0,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_9a13f6a2a0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x0
    );

  split_2d71950948: entity work.split_entity_2d71950948
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/bram"

entity bram_entity_e0a701a102 is
  port (
    addr: in std_logic_vector(9 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(63 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(9 downto 0); 
    convert_din1_x0: out std_logic_vector(63 downto 0); 
    convert_we_x0: out std_logic
  );
end bram_entity_e0a701a102;

architecture structural of bram_entity_e0a701a102 is
  signal add_del_q_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x42: std_logic;
  signal clk_1_sg_x42: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(9 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(63 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(63 downto 0);
  signal mux_y_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(63 downto 0);
  signal we_del_q_net_x0: std_logic;

begin
  add_del_q_net_x1 <= addr;
  ce_1_sg_x42 <= ce_1;
  clk_1_sg_x42 <= clk_1;
  dat_del_q_net_x1 <= data_in;
  we_del_q_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_ac7ea3e703: entity work.calc_add_entity_ac7ea3e703
    port map (
      ce_1 => ce_1_sg_x42,
      clk_1 => clk_1_sg_x42,
      in_x0 => add_del_q_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x42,
      clk => clk_1_sg_x42,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x42,
      clk => clk_1_sg_x42,
      clr => '0',
      din => reinterpret_out_output_port_net_x0,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x42,
      clk => clk_1_sg_x42,
      clr => '0',
      din(0) => we_del_q_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

  munge_in_b453ddae89: entity work.munge_in_entity_b453ddae89
    port map (
      din => dat_del_q_net_x1,
      dout => reinterpret_out_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap/ctrl"

entity ctrl_entity_69255d7c25 is
  port (
    blast_0209_dds305_adc_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_69255d7c25;

architecture structural of ctrl_entity_69255d7c25 is
  signal blast_0209_dds305_adc_snap_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_adc_snap_ctrl_user_data_out_net_x0 <= blast_0209_dds305_adc_snap_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_adc_snap_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap"

entity adc_snap_entity_7e674f563c is
  port (
    blast_0209_dds305_adc_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    bram: out std_logic_vector(9 downto 0); 
    bram_x0: out std_logic_vector(63 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0)
  );
end adc_snap_entity_7e674f563c;

architecture structural of adc_snap_entity_7e674f563c is
  signal add_del_q_net_x1: std_logic_vector(9 downto 0);
  signal blast_0209_dds305_adc_snap_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal cast_dout_net_x1: std_logic_vector(63 downto 0);
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x44: std_logic;
  signal clk_1_sg_x44: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal constant10_op_net_x1: std_logic;
  signal convert_addr_dout_net_x1: std_logic_vector(9 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(63 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(63 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(63 downto 0);
  signal delay11_q_net_x0: std_logic_vector(63 downto 0);
  signal delay6_q_net_x0: std_logic_vector(63 downto 0);
  signal edge_op_y_net_x4: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal ri_output_port_net: std_logic_vector(63 downto 0);
  signal slice2_y_net_x1: std_logic_vector(9 downto 0);
  signal slice2_y_net_x2: std_logic;
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  blast_0209_dds305_adc_snap_ctrl_user_data_out_net_x1 <= blast_0209_dds305_adc_snap_ctrl_user_data_out;
  ce_1_sg_x44 <= ce_1;
  clk_1_sg_x44 <= clk_1;
  delay11_q_net_x0 <= din;
  slice2_y_net_x2 <= trig;
  constant10_op_net_x1 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= cast_gw_dout_net_x1;

  add_del: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x44,
      clk => clk_1_sg_x44,
      clr => '0',
      d => slice2_y_net_x1,
      q => add_del_q_net_x1
    );

  add_gen_6b4e2cb58b: entity work.add_gen_entity_6b4e2cb58b
    port map (
      ce_1 => ce_1_sg_x44,
      clk_1 => clk_1_sg_x44,
      cont => never_op_net_x0,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we => we_choice_y_net_x2,
      add => slice2_y_net_x1,
      dout => delay6_q_net_x0,
      status => concat_y_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_ca2b1806d1: entity work.basic_ctrl_entity_ca2b1806d1
    port map (
      ce_1 => ce_1_sg_x44,
      clk_1 => clk_1_sg_x44,
      ctrl => reint1_output_port_net_x1,
      din => cast_dout_net_x1,
      trig => slice2_y_net_x2,
      we => constant10_op_net_x1,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we_o => we_choice_y_net_x2
    );

  bram_e0a701a102: entity work.bram_entity_e0a701a102
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x44,
      clk_1 => clk_1_sg_x44,
      data_in => dat_del_q_net_x1,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x44,
      clk => clk_1_sg_x44,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  ctrl_69255d7c25: entity work.ctrl_entity_69255d7c25
    port map (
      blast_0209_dds305_adc_snap_ctrl_user_data_out => blast_0209_dds305_adc_snap_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  dat_del: entity work.delay_e2d047c154
    port map (
      ce => ce_1_sg_x44,
      clk => clk_1_sg_x44,
      clr => '0',
      d => delay6_q_net_x0,
      q => dat_del_q_net_x1
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x0
    );

  ri: entity work.reinterpret_9a13f6a2a0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay11_q_net_x0,
      output_port => ri_output_port_net
    );

  status_500ccaf5ad: entity work.status_entity_1610992e91
    port map (
      ce_1 => ce_1_sg_x44,
      clk_1 => clk_1_sg_x44,
      out_reg => concat_y_net_x1,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

  we_del: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x44,
      clk => clk_1_sg_x44,
      clr => '0',
      d(0) => logical6_y_net_x0,
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/adc_snap_trig"

entity adc_snap_trig_entity_fe125d08a4 is
  port (
    blast_0209_dds305_adc_snap_trig_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_reg: out std_logic_vector(31 downto 0)
  );
end adc_snap_trig_entity_fe125d08a4;

architecture structural of adc_snap_trig_entity_fe125d08a4 is
  signal blast_0209_dds305_adc_snap_trig_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal ce_1_sg_x45: std_logic;
  signal clk_1_sg_x45: std_logic;
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_adc_snap_trig_user_data_out_net_x0 <= blast_0209_dds305_adc_snap_trig_user_data_out;
  ce_1_sg_x45 <= ce_1;
  clk_1_sg_x45 <= clk_1;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      d => blast_0209_dds305_adc_snap_trig_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/bins"

entity bins_entity_ba5c42e40f is
  port (
    blast_0209_dds305_bins_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end bins_entity_ba5c42e40f;

architecture structural of bins_entity_ba5c42e40f is
  signal blast_0209_dds305_bins_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_bins_user_data_out_net_x0 <= blast_0209_dds305_bins_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_bins_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/bus_create1"

entity bus_create1_entity_e98d453ec1 is
  port (
    in1: in std_logic_vector(15 downto 0); 
    in2: in std_logic_vector(15 downto 0); 
    in3: in std_logic_vector(15 downto 0); 
    in4: in std_logic_vector(15 downto 0); 
    bus_out: out std_logic_vector(63 downto 0)
  );
end bus_create1_entity_e98d453ec1;

architecture structural of bus_create1_entity_e98d453ec1 is
  signal concatenate_y_net_x0: std_logic_vector(63 downto 0);
  signal convert10_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert11_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert12_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert13_dout_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(15 downto 0);

begin
  convert10_dout_net_x0 <= in1;
  convert11_dout_net_x0 <= in2;
  convert12_dout_net_x0 <= in3;
  convert13_dout_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_8b51f4067b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert10_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert11_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert12_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert13_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/bus_create5"

entity bus_create5_entity_bdb10f7b98 is
  port (
    in1: in std_logic_vector(31 downto 0); 
    in2: in std_logic_vector(31 downto 0); 
    in3: in std_logic_vector(31 downto 0); 
    in4: in std_logic_vector(31 downto 0); 
    bus_out: out std_logic_vector(127 downto 0)
  );
end bus_create5_entity_bdb10f7b98;

architecture structural of bus_create5_entity_bdb10f7b98 is
  signal concatenate_y_net_x0: std_logic_vector(127 downto 0);
  signal delay23_q_net_x0: std_logic_vector(31 downto 0);
  signal delay24_q_net_x0: std_logic_vector(31 downto 0);
  signal delay28_q_net_x0: std_logic_vector(31 downto 0);
  signal delay57_q_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(31 downto 0);

begin
  delay57_q_net_x0 <= in1;
  delay24_q_net_x0 <= in2;
  delay23_q_net_x0 <= in3;
  delay28_q_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b11ec1c0d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_3f7e3674f6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay57_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_3f7e3674f6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay24_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_3f7e3674f6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay23_q_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_3f7e3674f6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay28_q_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/bus_create7"

entity bus_create7_entity_53d16b4e65 is
  port (
    in1: in std_logic_vector(15 downto 0); 
    in2: in std_logic_vector(15 downto 0); 
    bus_out: out std_logic_vector(31 downto 0)
  );
end bus_create7_entity_53d16b4e65;

architecture structural of bus_create7_entity_53d16b4e65 is
  signal concatenate_y_net_x0: std_logic_vector(31 downto 0);
  signal delay10_q_net_x1: std_logic_vector(15 downto 0);
  signal delay17_q_net_x1: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(15 downto 0);

begin
  delay10_q_net_x1 <= in1;
  delay17_q_net_x1 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_a369e00c6b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay10_q_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay17_q_net_x1,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/c_to_ri3"

entity c_to_ri3_entity_f97ac79861 is
  port (
    c: in std_logic_vector(35 downto 0); 
    im: out std_logic_vector(17 downto 0); 
    re: out std_logic_vector(17 downto 0)
  );
end c_to_ri3_entity_f97ac79861;

architecture structural of c_to_ri3_entity_f97ac79861 is
  signal delay40_q_net_x0: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice_im_y_net: std_logic_vector(17 downto 0);
  signal slice_re_y_net: std_logic_vector(17 downto 0);

begin
  delay40_q_net_x0 <= c;
  im <= force_im_output_port_net_x0;
  re <= force_re_output_port_net_x0;

  force_im: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_im_y_net,
      output_port => force_im_output_port_net_x0
    );

  force_re: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_re_y_net,
      output_port => force_re_output_port_net_x0
    );

  slice_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => delay40_q_net_x0,
      y => slice_im_y_net
    );

  slice_re: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => delay40_q_net_x0,
      y => slice_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/c_to_ri5"

entity c_to_ri5_entity_9f5d726fc2 is
  port (
    c: in std_logic_vector(37 downto 0); 
    im: out std_logic_vector(18 downto 0); 
    re: out std_logic_vector(18 downto 0)
  );
end c_to_ri5_entity_9f5d726fc2;

architecture structural of c_to_ri5_entity_9f5d726fc2 is
  signal concat_y_net_x0: std_logic_vector(37 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(18 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(18 downto 0);
  signal slice_im_y_net: std_logic_vector(18 downto 0);
  signal slice_re_y_net: std_logic_vector(18 downto 0);

begin
  concat_y_net_x0 <= c;
  im <= force_im_output_port_net_x0;
  re <= force_re_output_port_net_x0;

  force_im: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_im_y_net,
      output_port => force_im_output_port_net_x0
    );

  force_re: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_re_y_net,
      output_port => force_re_output_port_net_x0
    );

  slice_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 38,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice_im_y_net
    );

  slice_re: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 38,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/chan_select"

entity chan_select_entity_606dfa777f is
  port (
    blast_0209_dds305_chan_select_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end chan_select_entity_606dfa777f;

architecture structural of chan_select_entity_606dfa777f is
  signal blast_0209_dds305_chan_select_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_chan_select_user_data_out_net_x0 <= blast_0209_dds305_chan_select_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_chan_select_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/dac_mkid1"

entity dac_mkid1_entity_70d3ed7c4a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_i0: in std_logic_vector(15 downto 0); 
    data_i1: in std_logic_vector(15 downto 0); 
    data_q0: in std_logic_vector(15 downto 0); 
    data_q1: in std_logic_vector(15 downto 0); 
    reset: in std_logic; 
    sync_i: in std_logic; 
    convert1_x0: out std_logic_vector(15 downto 0); 
    convert2_x0: out std_logic_vector(15 downto 0); 
    convert3_x0: out std_logic_vector(15 downto 0); 
    convert_not_reset_x0: out std_logic; 
    convert_sync_i_x0: out std_logic; 
    convert_sync_q_x0: out std_logic; 
    convert_x0: out std_logic_vector(15 downto 0)
  );
end dac_mkid1_entity_70d3ed7c4a;

architecture structural of dac_mkid1_entity_70d3ed7c4a is
  signal ce_1_sg_x46: std_logic;
  signal clk_1_sg_x46: std_logic;
  signal convert1_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert3_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert_not_reset_dout_net_x0: std_logic;
  signal convert_sync_i_dout_net_x0: std_logic;
  signal convert_sync_q_dout_net_x0: std_logic;
  signal delay12_q_net_x1: std_logic_vector(15 downto 0);
  signal delay14_q_net_x1: std_logic_vector(15 downto 0);
  signal delay2_q_net_x1: std_logic_vector(15 downto 0);
  signal delay9_q_net_x1: std_logic_vector(15 downto 0);
  signal inverter_op_net: std_logic;
  signal slice1_y_net_x2: std_logic;
  signal slice4_y_net_x0: std_logic;

begin
  ce_1_sg_x46 <= ce_1;
  clk_1_sg_x46 <= clk_1;
  delay2_q_net_x1 <= data_i0;
  delay9_q_net_x1 <= data_i1;
  delay12_q_net_x1 <= data_q0;
  delay14_q_net_x1 <= data_q1;
  slice4_y_net_x0 <= reset;
  slice1_y_net_x2 <= sync_i;
  convert1_x0 <= convert1_dout_net_x0;
  convert2_x0 <= convert2_dout_net_x0;
  convert3_x0 <= convert3_dout_net_x0;
  convert_not_reset_x0 <= convert_not_reset_dout_net_x0;
  convert_sync_i_x0 <= convert_sync_i_dout_net_x0;
  convert_sync_q_x0 <= convert_sync_q_dout_net_x0;
  convert_x0 <= convert_dout_net_x0;

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x46,
      clk => clk_1_sg_x46,
      clr => '0',
      din => delay2_q_net_x1,
      en => "1",
      dout => convert_dout_net_x0
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x46,
      clk => clk_1_sg_x46,
      clr => '0',
      din => delay9_q_net_x1,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x46,
      clk => clk_1_sg_x46,
      clr => '0',
      din => delay12_q_net_x1,
      en => "1",
      dout => convert2_dout_net_x0
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x46,
      clk => clk_1_sg_x46,
      clr => '0',
      din => delay14_q_net_x1,
      en => "1",
      dout => convert3_dout_net_x0
    );

  convert_not_reset: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x46,
      clk => clk_1_sg_x46,
      clr => '0',
      din(0) => inverter_op_net,
      en => "1",
      dout(0) => convert_not_reset_dout_net_x0
    );

  convert_sync_i: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x46,
      clk => clk_1_sg_x46,
      clr => '0',
      din(0) => slice1_y_net_x2,
      en => "1",
      dout(0) => convert_sync_i_dout_net_x0
    );

  convert_sync_q: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x46,
      clk => clk_1_sg_x46,
      clr => '0',
      din(0) => slice1_y_net_x2,
      en => "1",
      dout(0) => convert_sync_q_dout_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x46,
      clk => clk_1_sg_x46,
      clr => '0',
      ip(0) => slice4_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/dac_reset"

entity dac_reset_entity_a0b5aac069 is
  port (
    blast_0209_dds305_dac_reset_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end dac_reset_entity_a0b5aac069;

architecture structural of dac_reset_entity_a0b5aac069 is
  signal blast_0209_dds305_dac_reset_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_dac_reset_user_data_out_net_x0 <= blast_0209_dds305_dac_reset_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_dac_reset_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/dds_shift"

entity dds_shift_entity_9ba88dfbb1 is
  port (
    blast_0209_dds305_dds_shift_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end dds_shift_entity_9ba88dfbb1;

architecture structural of dds_shift_entity_9ba88dfbb1 is
  signal blast_0209_dds305_dds_shift_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_dds_shift_user_data_out_net_x0 <= blast_0209_dds305_dds_shift_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_dds_shift_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/dds_shift0"

entity dds_shift0_entity_6ed64f8cf1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    delay: in std_logic_vector(8 downto 0); 
    din: in std_logic_vector(31 downto 0); 
    dout: out std_logic_vector(31 downto 0)
  );
end dds_shift0_entity_6ed64f8cf1;

architecture structural of dds_shift0_entity_6ed64f8cf1 is
  signal addsub_s_net: std_logic_vector(8 downto 0);
  signal ce_1_sg_x47: std_logic;
  signal clk_1_sg_x47: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(31 downto 0);
  signal constant2_op_net: std_logic;
  signal constant4_op_net: std_logic;
  signal dual_port_ram_doutb_net_x2: std_logic_vector(31 downto 0);
  signal slice6_y_net_x0: std_logic_vector(8 downto 0);
  signal wr_addr_op_net: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x47 <= ce_1;
  clk_1_sg_x47 <= clk_1;
  slice6_y_net_x0 <= delay;
  concatenate_y_net_x1 <= din;
  dout <= dual_port_ram_doutb_net_x2;

  addsub: entity work.addsub_5da0e88a67
    port map (
      a => wr_addr_op_net,
      b => slice6_y_net_x0,
      ce => ce_1_sg_x47,
      clk => clk_1_sg_x47,
      clr => '0',
      s => addsub_s_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant4: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant4_op_net
    );

  dual_port_ram: entity work.xldpram_blast_0209_dds305
    generic map (
      c_address_width_a => 9,
      c_address_width_b => 9,
      c_width_a => 32,
      c_width_b => 32,
      core_name0 => "bmg_72_a9cd3afac42c99fd",
      latency => 2
    )
    port map (
      a_ce => ce_1_sg_x47,
      a_clk => clk_1_sg_x47,
      addra => wr_addr_op_net,
      addrb => addsub_s_net,
      b_ce => ce_1_sg_x47,
      b_clk => clk_1_sg_x47,
      dina => concatenate_y_net_x1,
      dinb => concatenate_y_net_x1,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => constant2_op_net,
      web(0) => constant4_op_net,
      doutb => dual_port_ram_doutb_net_x2
    );

  wr_addr: entity work.counter_ca85bf174a
    port map (
      ce => ce_1_sg_x47,
      clk => clk_1_sg_x47,
      clr => '0',
      op => wr_addr_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/dds_shift2"

entity dds_shift2_entity_4845de00b1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    delay: in std_logic_vector(8 downto 0); 
    din: in std_logic_vector(15 downto 0); 
    dout: out std_logic_vector(15 downto 0)
  );
end dds_shift2_entity_4845de00b1;

architecture structural of dds_shift2_entity_4845de00b1 is
  signal addsub_s_net: std_logic_vector(8 downto 0);
  signal ce_1_sg_x49: std_logic;
  signal clk_1_sg_x49: std_logic;
  signal constant2_op_net: std_logic;
  signal constant4_op_net: std_logic;
  signal delay10_q_net_x2: std_logic_vector(15 downto 0);
  signal dual_port_ram_doutb_net_x0: std_logic_vector(15 downto 0);
  signal slice6_y_net_x2: std_logic_vector(8 downto 0);
  signal wr_addr_op_net: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x49 <= ce_1;
  clk_1_sg_x49 <= clk_1;
  slice6_y_net_x2 <= delay;
  delay10_q_net_x2 <= din;
  dout <= dual_port_ram_doutb_net_x0;

  addsub: entity work.addsub_5da0e88a67
    port map (
      a => wr_addr_op_net,
      b => slice6_y_net_x2,
      ce => ce_1_sg_x49,
      clk => clk_1_sg_x49,
      clr => '0',
      s => addsub_s_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant4: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant4_op_net
    );

  dual_port_ram: entity work.xldpram_blast_0209_dds305
    generic map (
      c_address_width_a => 9,
      c_address_width_b => 9,
      c_width_a => 16,
      c_width_b => 16,
      core_name0 => "bmg_72_be7f7464ba730ea5",
      latency => 2
    )
    port map (
      a_ce => ce_1_sg_x49,
      a_clk => clk_1_sg_x49,
      addra => wr_addr_op_net,
      addrb => addsub_s_net,
      b_ce => ce_1_sg_x49,
      b_clk => clk_1_sg_x49,
      dina => delay10_q_net_x2,
      dinb => delay10_q_net_x2,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => constant2_op_net,
      web(0) => constant4_op_net,
      doutb => dual_port_ram_doutb_net_x0
    );

  wr_addr: entity work.counter_ca85bf174a
    port map (
      ce => ce_1_sg_x49,
      clk => clk_1_sg_x49,
      clr => '0',
      op => wr_addr_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/downselect18to16"

entity downselect18to16_entity_d5980b4ea3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    complexin: in std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(31 downto 0)
  );
end downselect18to16_entity_d5980b4ea3;

architecture structural of downselect18to16_entity_d5980b4ea3 is
  signal ce_1_sg_x53: std_logic;
  signal clk_1_sg_x53: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(31 downto 0);
  signal convert16_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert17_dout_net_x0: std_logic_vector(15 downto 0);
  signal delay40_q_net_x2: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x53 <= ce_1;
  clk_1_sg_x53 <= clk_1;
  delay40_q_net_x2 <= complexin;
  out1 <= concatenate_y_net_x1;

  bus_create6_1adfedb5f0: entity work.bus_create7_entity_53d16b4e65
    port map (
      in1 => convert16_dout_net_x0,
      in2 => convert17_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  c_to_ri8_bb86ab0422: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => delay40_q_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  convert16: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x53,
      clk => clk_1_sg_x53,
      clr => '0',
      din => force_re_output_port_net_x0,
      en => "1",
      dout => convert16_dout_net_x0
    );

  convert17: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x53,
      clk => clk_1_sg_x53,
      clr => '0',
      din => force_im_output_port_net_x0,
      en => "1",
      dout => convert17_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/downselect19to1/bus_create6"

entity bus_create6_entity_ef895e22b0 is
  port (
    in1: in std_logic_vector(15 downto 0); 
    in2: in std_logic_vector(15 downto 0); 
    bus_out: out std_logic_vector(31 downto 0)
  );
end bus_create6_entity_ef895e22b0;

architecture structural of bus_create6_entity_ef895e22b0 is
  signal concatenate_y_net_x3: std_logic_vector(31 downto 0);
  signal convert16_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert17_dout_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(15 downto 0);

begin
  convert16_dout_net_x0 <= in1;
  convert17_dout_net_x0 <= in2;
  bus_out <= concatenate_y_net_x3;

  concatenate: entity work.concat_a369e00c6b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x3
    );

  reinterpret1: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert16_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert17_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/downselect19to1"

entity downselect19to1_entity_1db523393f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    complexin: in std_logic_vector(37 downto 0); 
    out1: out std_logic_vector(31 downto 0)
  );
end downselect19to1_entity_1db523393f;

architecture structural of downselect19to1_entity_1db523393f is
  signal ce_1_sg_x55: std_logic;
  signal clk_1_sg_x55: std_logic;
  signal concat_y_net_x2: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(31 downto 0);
  signal convert16_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert17_dout_net_x0: std_logic_vector(15 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(18 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(18 downto 0);

begin
  ce_1_sg_x55 <= ce_1;
  clk_1_sg_x55 <= clk_1;
  concat_y_net_x2 <= complexin;
  out1 <= concatenate_y_net_x4;

  bus_create6_ef895e22b0: entity work.bus_create6_entity_ef895e22b0
    port map (
      in1 => convert16_dout_net_x0,
      in2 => convert17_dout_net_x0,
      bus_out => concatenate_y_net_x4
    );

  c_to_ri8_d112dadd70: entity work.c_to_ri5_entity_9f5d726fc2
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  convert16: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 14,
      dout_width => 16,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x55,
      clk => clk_1_sg_x55,
      clr => '0',
      din => force_re_output_port_net_x0,
      en => "1",
      dout => convert16_dout_net_x0
    );

  convert17: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 14,
      dout_width => 16,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x55,
      clk => clk_1_sg_x55,
      clr => '0',
      din => force_im_output_port_net_x0,
      en => "1",
      dout => convert17_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/downselect19to2"

entity downselect19to2_entity_d210ed342f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    complexin: in std_logic_vector(37 downto 0); 
    out1: out std_logic_vector(31 downto 0)
  );
end downselect19to2_entity_d210ed342f;

architecture structural of downselect19to2_entity_d210ed342f is
  signal ce_1_sg_x56: std_logic;
  signal clk_1_sg_x56: std_logic;
  signal concat_y_net_x2: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(31 downto 0);
  signal convert16_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert17_dout_net_x0: std_logic_vector(15 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(18 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(18 downto 0);

begin
  ce_1_sg_x56 <= ce_1;
  clk_1_sg_x56 <= clk_1;
  concat_y_net_x2 <= complexin;
  out1 <= concatenate_y_net_x5;

  bus_create6_095e29d18c: entity work.bus_create6_entity_ef895e22b0
    port map (
      in1 => convert16_dout_net_x0,
      in2 => convert17_dout_net_x0,
      bus_out => concatenate_y_net_x5
    );

  c_to_ri8_a83f3ee6c7: entity work.c_to_ri5_entity_9f5d726fc2
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  convert16: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 14,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x56,
      clk => clk_1_sg_x56,
      clr => '0',
      din => force_re_output_port_net_x0,
      en => "1",
      dout => convert16_dout_net_x0
    );

  convert17: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 14,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x56,
      clk => clk_1_sg_x56,
      clr => '0',
      din => force_im_output_port_net_x0,
      en => "1",
      dout => convert17_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/edge_detect1"

entity edge_detect1_entity_35b2158155 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect1_entity_35b2158155;

architecture structural of edge_detect1_entity_35b2158155 is
  signal ce_1_sg_x59: std_logic;
  signal clk_1_sg_x59: std_logic;
  signal delay9_q_net_x2: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;

begin
  ce_1_sg_x59 <= ce_1;
  clk_1_sg_x59 <= clk_1;
  delay9_q_net_x2 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x59,
      clk => clk_1_sg_x59,
      clr => '0',
      d(0) => delay9_q_net_x2,
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_dfe2dded7f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x59,
      clk => clk_1_sg_x59,
      clr => '0',
      ip(0) => delay9_q_net_x2,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_add/a_debus"

entity a_debus_entity_bf77508fb5 is
  port (
    bus_in: in std_logic_vector(35 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out2: out std_logic_vector(17 downto 0)
  );
end a_debus_entity_bf77508fb5;

architecture structural of a_debus_entity_bf77508fb5 is
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_add/op_bussify"

entity op_bussify_entity_fddd2d0f40 is
  port (
    in1: in std_logic_vector(18 downto 0); 
    in2: in std_logic_vector(18 downto 0); 
    bus_out: out std_logic_vector(37 downto 0)
  );
end op_bussify_entity_fddd2d0f40;

architecture structural of op_bussify_entity_fddd2d0f40 is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(37 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(18 downto 0);

begin
  addsub1_s_net_x0 <= in1;
  addsub2_s_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_5a12f8f9be
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub2_s_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_add"

entity bus_add_entity_4767fca661 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(37 downto 0)
  );
end bus_add_entity_4767fca661;

architecture structural of bus_add_entity_4767fca661 is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x60: std_logic;
  signal clk_1_sg_x60: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(37 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);

begin
  reinterpret1_output_port_net_x3 <= a;
  dmux0_q_net_x1 <= b;
  ce_1_sg_x60 <= ce_1;
  clk_1_sg_x60 <= clk_1;
  dout <= concatenate_y_net_x1;

  a_debus_bf77508fb5: entity work.a_debus_entity_bf77508fb5
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  addsub1: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_659f580a46bd900d",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x60,
      clk => clk_1_sg_x60,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  addsub2: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_659f580a46bd900d",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret1_output_port_net_x2,
      b => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x60,
      clk => clk_1_sg_x60,
      clr => '0',
      en => "1",
      s => addsub2_s_net_x0
    );

  b_debus_392439657f: entity work.a_debus_entity_bf77508fb5
    port map (
      bus_in => dmux0_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  op_bussify_fddd2d0f40: entity work.op_bussify_entity_fddd2d0f40
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_convert/bussify"

entity bussify_entity_11b23fca0f is
  port (
    in1: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    in3: in std_logic_vector(17 downto 0); 
    in4: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(71 downto 0)
  );
end bussify_entity_11b23fca0f;

architecture structural of bussify_entity_11b23fca0f is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);

begin
  adder_s_net_x3 <= in1;
  adder_s_net_x4 <= in2;
  adder_s_net_x5 <= in3;
  adder_s_net_x6 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x3,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x4,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x5,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x6,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_convert/conv1/convert"

entity convert_entity_7ff6a030a9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(19 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end convert_entity_7ff6a030a9;

architecture structural of convert_entity_7ff6a030a9 is
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x61: std_logic;
  signal clk_1_sg_x61: std_logic;
  signal concat_y_net: std_logic_vector(20 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(20 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(19 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x61 <= ce_1;
  clk_1_sg_x61 <= clk_1;
  reinterpret4_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x4;

  adder: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 21,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 22,
      core_name0 => "addsb_11_0_6b068b1f5acb71f9",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 22,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 18
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x61,
      clk => clk_1_sg_x61,
      clr => '0',
      en => "1",
      s => adder_s_net_x4
    );

  almost_half: entity work.constant_b366689086
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_c615d93998
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_b1e9d7c303
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_convert/conv1"

entity conv1_entity_03e97cef23 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(19 downto 0); 
    dout: out std_logic_vector(17 downto 0); 
    of_x0: out std_logic
  );
end conv1_entity_03e97cef23;

architecture structural of conv1_entity_03e97cef23 is
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x62: std_logic;
  signal clk_1_sg_x62: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;

begin
  ce_1_sg_x62 <= ce_1;
  clk_1_sg_x62 <= clk_1;
  reinterpret4_output_port_net_x1 <= din;
  dout <= adder_s_net_x5;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_89dc141487
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_89dc141487
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_7ff6a030a9: entity work.convert_entity_7ff6a030a9
    port map (
      ce_1 => ce_1_sg_x62,
      clk_1 => clk_1_sg_x62,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x5
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x1,
      y(0) => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_convert/debus"

entity debus_entity_45804ad8a2 is
  port (
    bus_in: in std_logic_vector(79 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out4: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0)
  );
end debus_entity_45804ad8a2;

architecture structural of debus_entity_45804ad8a2 is
  signal concatenate_y_net_x0: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out4 <= reinterpret4_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_convert/of_bussify"

entity of_bussify_entity_fe2802e566 is
  port (
    in1: in std_logic; 
    in2: in std_logic; 
    in3: in std_logic; 
    in4: in std_logic; 
    bus_out: out std_logic_vector(3 downto 0)
  );
end of_bussify_entity_fe2802e566;

architecture structural of of_bussify_entity_fe2802e566 is
  signal and_y_net_x4: std_logic;
  signal and_y_net_x5: std_logic;
  signal and_y_net_x6: std_logic;
  signal and_y_net_x7: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic;
  signal reinterpret4_output_port_net: std_logic;

begin
  and_y_net_x4 <= in1;
  and_y_net_x5 <= in2;
  and_y_net_x6 <= in3;
  and_y_net_x7 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_a0c7cd7a34
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      in3(0) => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x4,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x5,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x6,
      output_port(0) => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x7,
      output_port(0) => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_convert"

entity bus_convert_entity_7409b9461f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(79 downto 0); 
    dout: out std_logic_vector(71 downto 0); 
    overflow: out std_logic_vector(3 downto 0)
  );
end bus_convert_entity_7409b9461f;

architecture structural of bus_convert_entity_7409b9461f is
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal adder_s_net_x7: std_logic_vector(17 downto 0);
  signal adder_s_net_x8: std_logic_vector(17 downto 0);
  signal and_y_net_x4: std_logic;
  signal and_y_net_x5: std_logic;
  signal and_y_net_x6: std_logic;
  signal and_y_net_x7: std_logic;
  signal ce_1_sg_x69: std_logic;
  signal clk_1_sg_x69: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x69 <= ce_1;
  clk_1_sg_x69 <= clk_1;
  concatenate_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;
  overflow <= concatenate_y_net_x5;

  bussify_11b23fca0f: entity work.bussify_entity_11b23fca0f
    port map (
      in1 => adder_s_net_x5,
      in2 => adder_s_net_x6,
      in3 => adder_s_net_x7,
      in4 => adder_s_net_x8,
      bus_out => concatenate_y_net_x4
    );

  conv1_03e97cef23: entity work.conv1_entity_03e97cef23
    port map (
      ce_1 => ce_1_sg_x69,
      clk_1 => clk_1_sg_x69,
      din => reinterpret4_output_port_net_x2,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x4
    );

  conv2_131108b2ca: entity work.conv1_entity_03e97cef23
    port map (
      ce_1 => ce_1_sg_x69,
      clk_1 => clk_1_sg_x69,
      din => reinterpret3_output_port_net_x2,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x5
    );

  conv3_146845076f: entity work.conv1_entity_03e97cef23
    port map (
      ce_1 => ce_1_sg_x69,
      clk_1 => clk_1_sg_x69,
      din => reinterpret2_output_port_net_x2,
      dout => adder_s_net_x7,
      of_x0 => and_y_net_x6
    );

  conv4_ceb33ee5ff: entity work.conv1_entity_03e97cef23
    port map (
      ce_1 => ce_1_sg_x69,
      clk_1 => clk_1_sg_x69,
      din => reinterpret1_output_port_net_x2,
      dout => adder_s_net_x8,
      of_x0 => and_y_net_x7
    );

  debus_45804ad8a2: entity work.debus_entity_45804ad8a2
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

  of_bussify_fe2802e566: entity work.of_bussify_entity_fe2802e566
    port map (
      in1 => and_y_net_x4,
      in2 => and_y_net_x5,
      in3 => and_y_net_x6,
      in4 => and_y_net_x7,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_expand"

entity bus_expand_entity_bc75ac6922 is
  port (
    bus_in: in std_logic_vector(71 downto 0); 
    lsb_out1: out std_logic_vector(35 downto 0); 
    msb_out2: out std_logic_vector(35 downto 0)
  );
end bus_expand_entity_bc75ac6922;

architecture structural of bus_expand_entity_bc75ac6922 is
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);
  signal slice2_y_net: std_logic_vector(35 downto 0);

begin
  concatenate_y_net_x5 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => concatenate_y_net_x5,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => concatenate_y_net_x5,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_norm0/bussify"

entity bussify_entity_e7f6ba03f8 is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(79 downto 0)
  );
end bussify_entity_e7f6ba03f8;

architecture structural of bussify_entity_e7f6ba03f8 is
  signal concatenate_y_net_x0: std_logic_vector(79 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);

begin
  conv1_dout_net_x0 <= in1;
  conv2_dout_net_x0 <= in2;
  conv3_dout_net_x0 <= in3;
  conv4_dout_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_f86ebb6084
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv1_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv2_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv3_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv4_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_norm0/debus"

entity debus_entity_6999505c6e is
  port (
    bus_in: in std_logic_vector(75 downto 0); 
    lsb_out1: out std_logic_vector(18 downto 0); 
    msb_out4: out std_logic_vector(18 downto 0); 
    out2: out std_logic_vector(18 downto 0); 
    out3: out std_logic_vector(18 downto 0)
  );
end debus_entity_6999505c6e;

architecture structural of debus_entity_6999505c6e is
  signal concat_y_net_x0: std_logic_vector(75 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(18 downto 0);
  signal slice2_y_net: std_logic_vector(18 downto 0);
  signal slice3_y_net: std_logic_vector(18 downto 0);
  signal slice4_y_net: std_logic_vector(18 downto 0);

begin
  concat_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 38,
      new_msb => 56,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 57,
      new_msb => 75,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_norm0"

entity bus_norm0_entity_91c78e7339 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(75 downto 0); 
    dout: out std_logic_vector(79 downto 0)
  );
end bus_norm0_entity_91c78e7339;

architecture structural of bus_norm0_entity_91c78e7339 is
  signal ce_1_sg_x70: std_logic;
  signal clk_1_sg_x70: std_logic;
  signal concat_y_net_x1: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(79 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);

begin
  ce_1_sg_x70 <= ce_1;
  clk_1_sg_x70 <= clk_1;
  concat_y_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  bussify_e7f6ba03f8: entity work.bussify_entity_e7f6ba03f8
    port map (
      in1 => conv1_dout_net_x0,
      in2 => conv2_dout_net_x0,
      in3 => conv3_dout_net_x0,
      in4 => conv4_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  conv1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      clr => '0',
      din => reinterpret4_output_port_net_x0,
      en => "1",
      dout => conv1_dout_net_x0
    );

  conv2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      clr => '0',
      din => reinterpret3_output_port_net_x0,
      en => "1",
      dout => conv2_dout_net_x0
    );

  conv3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      clr => '0',
      din => reinterpret2_output_port_net_x0,
      en => "1",
      dout => conv3_dout_net_x0
    );

  conv4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      clr => '0',
      din => reinterpret1_output_port_net_x0,
      en => "1",
      dout => conv4_dout_net_x0
    );

  debus_6999505c6e: entity work.debus_entity_6999505c6e
    port map (
      bus_in => concat_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_norm1/conv1"

entity conv1_entity_33df48a456 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(18 downto 0); 
    out_x0: out std_logic_vector(19 downto 0)
  );
end conv1_entity_33df48a456;

architecture structural of conv1_entity_33df48a456 is
  signal adder_s_net_x4: std_logic_vector(19 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x71: std_logic;
  signal clk_1_sg_x71: std_logic;
  signal concat_y_net: std_logic_vector(19 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(19 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(18 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x71 <= ce_1;
  clk_1_sg_x71 <= clk_1;
  reinterpret4_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x4;

  adder: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 20,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 21,
      core_name0 => "addsb_11_0_9a456b1d0df5df75",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 21,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 18,
      s_width => 20
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      clr => '0',
      en => "1",
      s => adder_s_net_x4
    );

  almost_half: entity work.constant_b366689086
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 19,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_504cae28bd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_b1e9d7c303
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_norm1/debus"

entity debus_entity_b4caf9c821 is
  port (
    bus_in: in std_logic_vector(75 downto 0); 
    lsb_out1: out std_logic_vector(18 downto 0); 
    msb_out4: out std_logic_vector(18 downto 0); 
    out2: out std_logic_vector(18 downto 0); 
    out3: out std_logic_vector(18 downto 0)
  );
end debus_entity_b4caf9c821;

architecture structural of debus_entity_b4caf9c821 is
  signal concatenate_y_net_x0: std_logic_vector(75 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(18 downto 0);
  signal slice2_y_net: std_logic_vector(18 downto 0);
  signal slice3_y_net: std_logic_vector(18 downto 0);
  signal slice4_y_net: std_logic_vector(18 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x1;
  msb_out4 <= reinterpret4_output_port_net_x1;
  out2 <= reinterpret2_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;

  reinterpret1: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 38,
      new_msb => 56,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 57,
      new_msb => 75,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_norm1"

entity bus_norm1_entity_8de4ebb209 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(75 downto 0); 
    dout: out std_logic_vector(79 downto 0)
  );
end bus_norm1_entity_8de4ebb209;

architecture structural of bus_norm1_entity_8de4ebb209 is
  signal adder_s_net_x4: std_logic_vector(19 downto 0);
  signal adder_s_net_x5: std_logic_vector(19 downto 0);
  signal adder_s_net_x6: std_logic_vector(19 downto 0);
  signal adder_s_net_x7: std_logic_vector(19 downto 0);
  signal ce_1_sg_x75: std_logic;
  signal clk_1_sg_x75: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  ce_1_sg_x75 <= ce_1;
  clk_1_sg_x75 <= clk_1;
  concatenate_y_net_x2 <= din;
  dout <= concatenate_y_net_x3;

  bussify_97777fad09: entity work.bussify_entity_e7f6ba03f8
    port map (
      in1 => adder_s_net_x4,
      in2 => adder_s_net_x5,
      in3 => adder_s_net_x6,
      in4 => adder_s_net_x7,
      bus_out => concatenate_y_net_x3
    );

  conv1_33df48a456: entity work.conv1_entity_33df48a456
    port map (
      ce_1 => ce_1_sg_x75,
      clk_1 => clk_1_sg_x75,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x4
    );

  conv2_e8e012cf4c: entity work.conv1_entity_33df48a456
    port map (
      ce_1 => ce_1_sg_x75,
      clk_1 => clk_1_sg_x75,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x5
    );

  conv3_9910532c16: entity work.conv1_entity_33df48a456
    port map (
      ce_1 => ce_1_sg_x75,
      clk_1 => clk_1_sg_x75,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x6
    );

  conv4_f996a51060: entity work.conv1_entity_33df48a456
    port map (
      ce_1 => ce_1_sg_x75,
      clk_1 => clk_1_sg_x75,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x7
    );

  debus_b4caf9c821: entity work.debus_entity_b4caf9c821
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_relational/a_debus"

entity a_debus_entity_6a37884c38 is
  port (
    bus_in: in std_logic_vector(3 downto 0); 
    msb_lsb_out1: out std_logic_vector(3 downto 0)
  );
end a_debus_entity_6a37884c38;

architecture structural of a_debus_entity_6a37884c38 is
  signal constant_op_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal slice1_y_net: std_logic_vector(3 downto 0);

begin
  constant_op_net_x0 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x0;

  reinterpret1: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 4,
      y_width => 4
    )
    port map (
      x => constant_op_net_x0,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_relational/bussify"

entity bussify_entity_0478673500 is
  port (
    in1: in std_logic; 
    bus_out: out std_logic
  );
end bussify_entity_0478673500;

architecture structural of bussify_entity_0478673500 is
  signal reinterpret1_output_port_net_x0: std_logic;
  signal relational1_op_net_x0: std_logic;

begin
  relational1_op_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x0;

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational1_op_net_x0,
      output_port(0) => reinterpret1_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_relational"

entity bus_relational_entity_887e6cafc5 is
  port (
    a: in std_logic_vector(3 downto 0); 
    b: in std_logic_vector(3 downto 0); 
    a_b: out std_logic
  );
end bus_relational_entity_887e6cafc5;

architecture structural of bus_relational_entity_887e6cafc5 is
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic;
  signal reinterpret_out_output_port_net_x1: std_logic_vector(3 downto 0);
  signal relational1_op_net_x0: std_logic;

begin
  constant_op_net_x1 <= a;
  reinterpret_out_output_port_net_x1 <= b;
  a_b <= reinterpret1_output_port_net_x3;

  a_debus_6a37884c38: entity work.a_debus_entity_6a37884c38
    port map (
      bus_in => constant_op_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  b_debus_a8f4311986: entity work.a_debus_entity_6a37884c38
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x1
    );

  bussify_0478673500: entity work.bussify_entity_0478673500
    port map (
      in1 => relational1_op_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  relational1: entity work.relational_d930162434
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_scale/bussify"

entity bussify_entity_ce5b4ef964 is
  port (
    in1: in std_logic_vector(18 downto 0); 
    in2: in std_logic_vector(18 downto 0); 
    in3: in std_logic_vector(18 downto 0); 
    in4: in std_logic_vector(18 downto 0); 
    bus_out: out std_logic_vector(75 downto 0)
  );
end bussify_entity_ce5b4ef964;

architecture structural of bussify_entity_ce5b4ef964 is
  signal concatenate_y_net_x3: std_logic_vector(75 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(18 downto 0);
  signal scale1_op_net_x0: std_logic_vector(18 downto 0);
  signal scale2_op_net_x0: std_logic_vector(18 downto 0);
  signal scale3_op_net_x0: std_logic_vector(18 downto 0);
  signal scale4_op_net_x0: std_logic_vector(18 downto 0);

begin
  scale1_op_net_x0 <= in1;
  scale2_op_net_x0 <= in2;
  scale3_op_net_x0 <= in3;
  scale4_op_net_x0 <= in4;
  bus_out <= concatenate_y_net_x3;

  concatenate: entity work.concat_2aea51ccde
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x3
    );

  reinterpret1: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale1_op_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale2_op_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale3_op_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale4_op_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_scale"

entity bus_scale_entity_0ce9e83edc is
  port (
    din: in std_logic_vector(75 downto 0); 
    dout: out std_logic_vector(75 downto 0)
  );
end bus_scale_entity_0ce9e83edc;

architecture structural of bus_scale_entity_0ce9e83edc is
  signal concat_y_net_x3: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(75 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);
  signal scale1_op_net_x0: std_logic_vector(18 downto 0);
  signal scale2_op_net_x0: std_logic_vector(18 downto 0);
  signal scale3_op_net_x0: std_logic_vector(18 downto 0);
  signal scale4_op_net_x0: std_logic_vector(18 downto 0);

begin
  concat_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;

  bussify_ce5b4ef964: entity work.bussify_entity_ce5b4ef964
    port map (
      in1 => scale1_op_net_x0,
      in2 => scale2_op_net_x0,
      in3 => scale3_op_net_x0,
      in4 => scale4_op_net_x0,
      bus_out => concatenate_y_net_x4
    );

  debus_1f4ef2a683: entity work.debus_entity_6999505c6e
    port map (
      bus_in => concat_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  scale1: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => scale1_op_net_x0
    );

  scale2: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => scale2_op_net_x0
    );

  scale3: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret2_output_port_net_x0,
      op => scale3_op_net_x0
    );

  scale4: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret1_output_port_net_x0,
      op => scale4_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/bus_sub"

entity bus_sub_entity_0e9459bdda is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(37 downto 0)
  );
end bus_sub_entity_0e9459bdda;

architecture structural of bus_sub_entity_0e9459bdda is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x76: std_logic;
  signal clk_1_sg_x76: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(37 downto 0);
  signal dmux0_q_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);

begin
  reinterpret1_output_port_net_x5 <= a;
  dmux0_q_net_x3 <= b;
  ce_1_sg_x76 <= ce_1;
  clk_1_sg_x76 <= clk_1;
  dout <= concatenate_y_net_x1;

  a_debus_175d222684: entity work.a_debus_entity_bf77508fb5
    port map (
      bus_in => reinterpret1_output_port_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  addsub1: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_ac5f379d93c57734",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x76,
      clk => clk_1_sg_x76,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  addsub2: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_ac5f379d93c57734",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x76,
      clk => clk_1_sg_x76,
      clr => '0',
      en => "1",
      s => addsub2_s_net_x0
    );

  b_debus_51fabbe548: entity work.a_debus_entity_bf77508fb5
    port map (
      bus_in => dmux0_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  op_bussify_dfc1dca43b: entity work.op_bussify_entity_fddd2d0f40
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/munge/join"

entity join_entity_a0b0a2fdf8 is
  port (
    in1: in std_logic_vector(1 downto 0); 
    in2: in std_logic_vector(1 downto 0); 
    bus_out: out std_logic_vector(3 downto 0)
  );
end join_entity_a0b0a2fdf8;

architecture structural of join_entity_a0b0a2fdf8 is
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(1 downto 0);

begin
  reinterpret2_output_port_net_x1 <= in1;
  reinterpret1_output_port_net_x1 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_bd20dd351d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/munge/split"

entity split_entity_923ced9d7c is
  port (
    bus_in: in std_logic_vector(3 downto 0); 
    lsb_out1: out std_logic_vector(1 downto 0); 
    msb_out2: out std_logic_vector(1 downto 0)
  );
end split_entity_923ced9d7c;

architecture structural of split_entity_923ced9d7c is
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(3 downto 0);
  signal slice1_y_net: std_logic_vector(1 downto 0);
  signal slice2_y_net: std_logic_vector(1 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out2 <= reinterpret2_output_port_net_x2;

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/munge"

entity munge_entity_c2eb754908 is
  port (
    din: in std_logic_vector(3 downto 0); 
    dout: out std_logic_vector(3 downto 0)
  );
end munge_entity_c2eb754908;

architecture structural of munge_entity_c2eb754908 is
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(3 downto 0);

begin
  concatenate_y_net_x6 <= din;
  dout <= reinterpret_out_output_port_net_x2;

  join_a0b0a2fdf8: entity work.join_entity_a0b0a2fdf8
    port map (
      in1 => reinterpret2_output_port_net_x2,
      in2 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x6,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x2
    );

  split_923ced9d7c: entity work.split_entity_923ced9d7c
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/mux/d_bussify"

entity d_bussify_entity_777dde2e60 is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(79 downto 0)
  );
end d_bussify_entity_777dde2e60;

architecture structural of d_bussify_entity_777dde2e60 is
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal mux0_y_net_x0: std_logic_vector(19 downto 0);
  signal mux1_y_net_x0: std_logic_vector(19 downto 0);
  signal mux2_y_net_x0: std_logic_vector(19 downto 0);
  signal mux3_y_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux1_y_net_x0 <= in2;
  mux2_y_net_x0 <= in3;
  mux3_y_net_x0 <= in4;
  bus_out <= concatenate_y_net_x4;

  concatenate: entity work.concat_f86ebb6084
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x4
    );

  reinterpret1: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux3_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/mux/expand0"

entity expand0_entity_4270fc979f is
  port (
    bus_in: in std_logic_vector(79 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out4: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0)
  );
end expand0_entity_4270fc979f;

architecture structural of expand0_entity_4270fc979f is
  signal concatenate_y_net_x2: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);

begin
  concatenate_y_net_x2 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/mux/sel_expand"

entity sel_expand_entity_9d71ebeaba is
  port (
    bus_in: in std_logic_vector(3 downto 0); 
    lsb_out1: out std_logic; 
    msb_out4: out std_logic; 
    out2: out std_logic; 
    out3: out std_logic
  );
end sel_expand_entity_9d71ebeaba;

architecture structural of sel_expand_entity_9d71ebeaba is
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic;
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice4_y_net: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice1_y_net,
      output_port(0) => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice2_y_net,
      output_port(0) => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice3_y_net,
      output_port(0) => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice4_y_net,
      output_port(0) => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/mux"

entity mux_entity_81cd61368e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(79 downto 0); 
    d1: in std_logic_vector(79 downto 0); 
    sel: in std_logic_vector(3 downto 0); 
    out_x0: out std_logic_vector(79 downto 0)
  );
end mux_entity_81cd61368e;

architecture structural of mux_entity_81cd61368e is
  signal ce_1_sg_x77: std_logic;
  signal clk_1_sg_x77: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(79 downto 0);
  signal mux0_y_net_x0: std_logic_vector(19 downto 0);
  signal mux1_y_net_x0: std_logic_vector(19 downto 0);
  signal mux2_y_net_x0: std_logic_vector(19 downto 0);
  signal mux3_y_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic;

begin
  ce_1_sg_x77 <= ce_1;
  clk_1_sg_x77 <= clk_1;
  concatenate_y_net_x6 <= d0;
  concatenate_y_net_x7 <= d1;
  concatenate_y_net_x8 <= sel;
  out_x0 <= concatenate_y_net_x9;

  d_bussify_777dde2e60: entity work.d_bussify_entity_777dde2e60
    port map (
      in1 => mux0_y_net_x0,
      in2 => mux1_y_net_x0,
      in3 => mux2_y_net_x0,
      in4 => mux3_y_net_x0,
      bus_out => concatenate_y_net_x9
    );

  expand0_4270fc979f: entity work.expand0_entity_4270fc979f
    port map (
      bus_in => concatenate_y_net_x6,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  expand1_f825d5be90: entity work.expand0_entity_4270fc979f
    port map (
      bus_in => concatenate_y_net_x7,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  mux0: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x77,
      clk => clk_1_sg_x77,
      clr => '0',
      d0 => reinterpret4_output_port_net_x0,
      d1 => reinterpret4_output_port_net_x1,
      sel(0) => reinterpret4_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x77,
      clk => clk_1_sg_x77,
      clr => '0',
      d0 => reinterpret3_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x1,
      sel(0) => reinterpret3_output_port_net_x2,
      y => mux1_y_net_x0
    );

  mux2: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x77,
      clk => clk_1_sg_x77,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x77,
      clk => clk_1_sg_x77,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux3_y_net_x0
    );

  sel_expand_9d71ebeaba: entity work.sel_expand_entity_9d71ebeaba
    port map (
      bus_in => concatenate_y_net_x8,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct/shift_replicate"

entity shift_replicate_entity_9141b1bb8a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(3 downto 0)
  );
end shift_replicate_entity_9141b1bb8a;

architecture structural of shift_replicate_entity_9141b1bb8a is
  signal ce_1_sg_x78: std_logic;
  signal clk_1_sg_x78: std_logic;
  signal concatenate_y_net_x10: std_logic_vector(3 downto 0);
  signal din0_0_q_net_x0: std_logic;
  signal din0_1_q_net_x0: std_logic;
  signal din0_2_q_net_x0: std_logic;
  signal din0_3_q_net_x0: std_logic;
  signal slice0_y_net_x0: std_logic;

begin
  ce_1_sg_x78 <= ce_1;
  clk_1_sg_x78 <= clk_1;
  slice0_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x10;

  bussify_1065fcedea: entity work.of_bussify_entity_fe2802e566
    port map (
      in1 => din0_0_q_net_x0,
      in2 => din0_1_q_net_x0,
      in3 => din0_2_q_net_x0,
      in4 => din0_3_q_net_x0,
      bus_out => concatenate_y_net_x10
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x78,
      clk => clk_1_sg_x78,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net_x0
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x78,
      clk => clk_1_sg_x78,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_1_q_net_x0
    );

  din0_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x78,
      clk => clk_1_sg_x78,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_2_q_net_x0
    );

  din0_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x78,
      clk => clk_1_sg_x78,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/butterfly_direct"

entity butterfly_direct_entity_657f4166d6 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_657f4166d6;

architecture structural of butterfly_direct_entity_657f4166d6 is
  signal ce_1_sg_x79: std_logic;
  signal clk_1_sg_x79: std_logic;
  signal concat_y_net_x3: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(37 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x4: std_logic_vector(35 downto 0);
  signal mux_y_net_x0: std_logic;
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x6 <= a;
  dmux0_q_net_x4 <= b;
  ce_1_sg_x79 <= ce_1;
  clk_1_sg_x79 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x0 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x7;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x8;
  sync_out <= delay0_q_net_x0;

  bus_add_4767fca661: entity work.bus_add_entity_4767fca661
    port map (
      a => reinterpret1_output_port_net_x6,
      b => dmux0_q_net_x4,
      ce_1 => ce_1_sg_x79,
      clk_1 => clk_1_sg_x79,
      dout => concatenate_y_net_x1
    );

  bus_convert_7409b9461f: entity work.bus_convert_entity_7409b9461f
    port map (
      ce_1 => ce_1_sg_x79,
      clk_1 => clk_1_sg_x79,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_bc75ac6922: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_91c78e7339: entity work.bus_norm0_entity_91c78e7339
    port map (
      ce_1 => ce_1_sg_x79,
      clk_1 => clk_1_sg_x79,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_8de4ebb209: entity work.bus_norm1_entity_8de4ebb209
    port map (
      ce_1 => ce_1_sg_x79,
      clk_1 => clk_1_sg_x79,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_887e6cafc5: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x8
    );

  bus_scale_0ce9e83edc: entity work.bus_scale_entity_0ce9e83edc
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_0e9459bdda: entity work.bus_sub_entity_0e9459bdda
    port map (
      a => reinterpret1_output_port_net_x6,
      b => dmux0_q_net_x4,
      ce_1 => ce_1_sg_x79,
      clk_1 => clk_1_sg_x79,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_4822199898
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x1,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x79,
      clk => clk_1_sg_x79,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => delay0_q_net_x0
    );

  munge_c2eb754908: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_81cd61368e: entity work.mux_entity_81cd61368e
    port map (
      ce_1 => ce_1_sg_x79,
      clk_1 => clk_1_sg_x79,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_9141b1bb8a: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x79,
      clk_1 => clk_1_sg_x79,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/delay0/debus_addr"

entity debus_addr_entity_1f13b6eebb is
  port (
    bus_in: in std_logic_vector(7 downto 0); 
    msb_lsb_out1: out std_logic_vector(7 downto 0)
  );
end debus_addr_entity_1f13b6eebb;

architecture structural of debus_addr_entity_1f13b6eebb is
  signal reinterpret1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(7 downto 0);
  signal slice1_y_net: std_logic_vector(7 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 8,
      y_width => 8
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/delay0/debus_din"

entity debus_din_entity_5e9f234dee is
  port (
    bus_in: in std_logic_vector(35 downto 0); 
    msb_lsb_out1: out std_logic_vector(35 downto 0)
  );
end debus_din_entity_5e9f234dee;

architecture structural of debus_din_entity_5e9f234dee is
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);

begin
  ddin_q_net_x0 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x0;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 36,
      y_width => 36
    )
    port map (
      x => ddin_q_net_x0,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/delay0/debus_we"

entity debus_we_entity_e05f42feb5 is
  port (
    bus_in: in std_logic; 
    msb_lsb_out1: out std_logic
  );
end debus_we_entity_e05f42feb5;

architecture structural of debus_we_entity_e05f42feb5 is
  signal reinterpret1_output_port_net_x0: std_logic;
  signal slice1_y_net_x0: std_logic;

begin
  reinterpret1_output_port_net_x0 <= bus_in;
  msb_lsb_out1 <= slice1_y_net_x0;

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => reinterpret1_output_port_net_x0,
      y(0) => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/delay0/din_bussify"

entity din_bussify_entity_e7e03fab4e is
  port (
    in1: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(35 downto 0)
  );
end din_bussify_entity_e7e03fab4e;

architecture structural of din_bussify_entity_e7e03fab4e is
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  bram0_data_out_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x0;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => bram0_data_out_net_x0,
      output_port => reinterpret1_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/delay0/rep_addr/bussify"

entity bussify_entity_a41968e20a is
  port (
    in1: in std_logic_vector(7 downto 0); 
    bus_out: out std_logic_vector(7 downto 0)
  );
end bussify_entity_a41968e20a;

architecture structural of bussify_entity_a41968e20a is
  signal din0_0_q_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(7 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/delay0/rep_addr"

entity rep_addr_entity_4a6e1c122f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(7 downto 0); 
    out_x0: out std_logic_vector(7 downto 0)
  );
end rep_addr_entity_4a6e1c122f;

architecture structural of rep_addr_entity_4a6e1c122f is
  signal addr0_op_net_x0: std_logic_vector(7 downto 0);
  signal ce_1_sg_x80: std_logic;
  signal clk_1_sg_x80: std_logic;
  signal din0_0_q_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x80 <= ce_1;
  clk_1_sg_x80 <= clk_1;
  addr0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_a41968e20a: entity work.bussify_entity_a41968e20a
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x80,
      clk => clk_1_sg_x80,
      d => addr0_op_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/delay0/rep_we"

entity rep_we_entity_d654f5a305 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end rep_we_entity_d654f5a305;

architecture structural of rep_we_entity_d654f5a305 is
  signal ce_1_sg_x81: std_logic;
  signal clk_1_sg_x81: std_logic;
  signal din0_0_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic;
  signal we0_op_net_x0: std_logic;

begin
  ce_1_sg_x81 <= ce_1;
  clk_1_sg_x81 <= clk_1;
  we0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x2;

  bussify_d2a9db3f18: entity work.bussify_entity_0478673500
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x2
    );

  din0_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x81,
      clk => clk_1_sg_x81,
      clr => '0',
      d(0) => we0_op_net_x0,
      q(0) => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/delay0"

entity delay0_entity_4e9c813227 is
  port (
    addr: in std_logic_vector(7 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_4e9c813227;

architecture structural of delay0_entity_4e9c813227 is
  signal addr0_op_net_x1: std_logic_vector(7 downto 0);
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x82: std_logic;
  signal clk_1_sg_x82: std_logic;
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal we0_op_net_x1: std_logic;

begin
  addr0_op_net_x1 <= addr;
  ce_1_sg_x82 <= ce_1;
  clk_1_sg_x82 <= clk_1;
  reinterpret1_output_port_net_x5 <= din;
  we0_op_net_x1 <= we;
  dout <= reinterpret1_output_port_net_x6;

  bram0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 8,
      c_width => 36,
      core_name0 => "bmg_72_7c09cebf9f55b760",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x82,
      clk => clk_1_sg_x82,
      data_in => reinterpret1_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  ddin: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x82,
      clk => clk_1_sg_x82,
      clr => '0',
      d => reinterpret1_output_port_net_x5,
      q => ddin_q_net_x0
    );

  debus_addr_1f13b6eebb: entity work.debus_addr_entity_1f13b6eebb
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_din_5e9f234dee: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => ddin_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  debus_we_e05f42feb5: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  din_bussify_e7e03fab4e: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => bram0_data_out_net_x0,
      bus_out => reinterpret1_output_port_net_x6
    );

  rep_addr_4a6e1c122f: entity work.rep_addr_entity_4a6e1c122f
    port map (
      ce_1 => ce_1_sg_x82,
      clk_1 => clk_1_sg_x82,
      in_x0 => addr0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  rep_we_d654f5a305: entity work.rep_we_entity_d654f5a305
    port map (
      ce_1 => ce_1_sg_x82,
      clk_1 => clk_1_sg_x82,
      in_x0 => we0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1/sync_delay"

entity sync_delay_entity_4ebbf87830 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_4ebbf87830;

architecture structural of sync_delay_entity_4ebbf87830 is
  signal ce_1_sg_x86: std_logic;
  signal clk_1_sg_x86: std_logic;
  signal constant1_op_net: std_logic_vector(8 downto 0);
  signal constant2_op_net: std_logic_vector(8 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(8 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x1: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x86 <= ce_1;
  clk_1_sg_x86 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x1;

  constant1: entity work.constant_fd85eb7067
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_4a391b9a0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_b4ec9de7d1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_a3c82ea7e31257cc",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x86,
      clk => clk_1_sg_x86,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x1
    );

  relational: entity work.relational_6c3ee657fa
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_78eac2928d
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_1"

entity fft_stage_1_entity_78d32969e0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_1_entity_78d32969e0;

architecture structural of fft_stage_1_entity_78d32969e0 is
  signal addr0_op_net_x1: std_logic_vector(7 downto 0);
  signal addr1_op_net_x1: std_logic_vector(7 downto 0);
  signal ce_1_sg_x87: std_logic;
  signal clk_1_sg_x87: std_logic;
  signal constant_op_net_x0: std_logic;
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal delay12_q_net_x0: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din1_q_net: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x4: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal dsync2_q_net: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic;
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic;
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;
  signal we0_op_net_x1: std_logic;
  signal we1_op_net_x1: std_logic;

begin
  ce_1_sg_x87 <= ce_1;
  clk_1_sg_x87 <= clk_1;
  reinterpret1_output_port_net_x0 <= in1;
  reinterpret1_output_port_net_x10 <= in2;
  constant_op_net_x0 <= of_in;
  reint1_output_port_net_x0 <= shift;
  delay12_q_net_x0 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x2;
  out2 <= reinterpret1_output_port_net_x11;
  sync_out <= delay0_q_net_x1;

  addr0: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_6a79e2c90664744f",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr0_op_net_x1
    );

  addr1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_6a79e2c90664744f",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr1_op_net_x1
    );

  butterfly_direct_657f4166d6: entity work.butterfly_direct_entity_657f4166d6
    port map (
      a => reinterpret1_output_port_net_x9,
      b => dmux0_q_net_x4,
      ce_1 => ce_1_sg_x87,
      clk_1 => clk_1_sg_x87,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x1,
      a_bw => reinterpret1_output_port_net_x11,
      a_bw_x0 => reinterpret2_output_port_net_x2,
      of_x0 => reinterpret1_output_port_net_x8,
      sync_out => delay0_q_net_x1
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      en => "1",
      rst(0) => dsync2_q_net,
      op => counter_op_net
    );

  delay0_4e9c813227: entity work.delay0_entity_4e9c813227
    port map (
      addr => addr0_op_net_x1,
      ce_1 => ce_1_sg_x87,
      clk_1 => clk_1_sg_x87,
      din => reinterpret1_output_port_net_x10,
      we => we0_op_net_x1,
      dout => reinterpret1_output_port_net_x6
    );

  delay1_823c0a98b4: entity work.delay0_entity_4e9c813227
    port map (
      addr => addr1_op_net_x1,
      ce_1 => ce_1_sg_x87,
      clk_1 => clk_1_sg_x87,
      din => mux1_y_net_x0,
      we => we1_op_net_x1,
      dout => reinterpret1_output_port_net_x9
    );

  din0: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => din0_q_net
    );

  din1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d => din0_q_net,
      q => din1_q_net
    );

  dmux0: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x4
    );

  dsync0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d(0) => delay12_q_net_x0,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d(0) => dsync2_q_net,
      q(0) => dsync1_q_net_x0
    );

  dsync2: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync2_q_net
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x8,
      d1(0) => constant_op_net_x0,
      y(0) => logical1_y_net_x0
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d0 => reinterpret1_output_port_net_x6,
      d1 => din1_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      d0 => din1_q_net,
      d1 => reinterpret1_output_port_net_x6,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_4ebbf87830: entity work.sync_delay_entity_4ebbf87830
    port map (
      ce_1 => ce_1_sg_x87,
      clk_1 => clk_1_sg_x87,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x1
    );

  we0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we0_op_net_x1
    );

  we1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we1_op_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/butterfly_direct/twiddle/bus_create"

entity bus_create_entity_75d19a8d19 is
  port (
    in1: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(35 downto 0)
  );
end bus_create_entity_75d19a8d19;

architecture structural of bus_create_entity_75d19a8d19 is
  signal concatenate_y_net_x0: std_logic_vector(35 downto 0);
  signal mux0_y_net_x0: std_logic_vector(17 downto 0);
  signal mux1_y_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux1_y_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/butterfly_direct/twiddle/bus_expand"

entity bus_expand_entity_1d9a063174 is
  port (
    bus_in: in std_logic_vector(35 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out2: out std_logic_vector(17 downto 0)
  );
end bus_expand_entity_1d9a063174;

architecture structural of bus_expand_entity_1d9a063174 is
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);

begin
  reinterpret_out_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/butterfly_direct/twiddle/munge_in"

entity munge_in_entity_529919d792 is
  port (
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end munge_in_entity_529919d792;

architecture structural of munge_in_entity_529919d792 is
  signal concatenate_y_net_x0: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  dmux0_q_net_x0 <= din;
  dout <= reinterpret_out_output_port_net_x1;

  join_d495bfed94: entity work.bus_create_entity_75d19a8d19
    port map (
      in1 => reinterpret2_output_port_net_x2,
      in2 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => dmux0_q_net_x0,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x1
    );

  split_b352221e64: entity work.bus_expand_entity_1d9a063174
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/butterfly_direct/twiddle/negate/bussify"

entity bussify_entity_9aca29ce8b is
  port (
    in1: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(17 downto 0)
  );
end bussify_entity_9aca29ce8b;

architecture structural of bussify_entity_9aca29ce8b is
  signal neg1_op_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);

begin
  neg1_op_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x0;

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => neg1_op_net_x0,
      output_port => reinterpret1_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/butterfly_direct/twiddle/negate/debus"

entity debus_entity_8ef40c3e57 is
  port (
    bus_in: in std_logic_vector(17 downto 0); 
    msb_lsb_out1: out std_logic_vector(17 downto 0)
  );
end debus_entity_8ef40c3e57;

architecture structural of debus_entity_8ef40c3e57 is
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);

begin
  reinterpret2_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 18,
      y_width => 18
    )
    port map (
      x => reinterpret2_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/butterfly_direct/twiddle/negate"

entity negate_entity_6d4d2da192 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(17 downto 0); 
    dout: out std_logic_vector(17 downto 0)
  );
end negate_entity_6d4d2da192;

architecture structural of negate_entity_6d4d2da192 is
  signal ce_1_sg_x107: std_logic;
  signal clk_1_sg_x107: std_logic;
  signal neg1_op_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x107 <= ce_1;
  clk_1_sg_x107 <= clk_1;
  reinterpret2_output_port_net_x2 <= din;
  dout <= reinterpret1_output_port_net_x2;

  bussify_9aca29ce8b: entity work.bussify_entity_9aca29ce8b
    port map (
      in1 => neg1_op_net_x0,
      bus_out => reinterpret1_output_port_net_x2
    );

  debus_8ef40c3e57: entity work.debus_entity_8ef40c3e57
    port map (
      bus_in => reinterpret2_output_port_net_x2,
      msb_lsb_out1 => reinterpret1_output_port_net_x1
    );

  neg1: entity work.negate_155cd8ddf7
    port map (
      ce => ce_1_sg_x107,
      clk => clk_1_sg_x107,
      clr => '0',
      ip => reinterpret1_output_port_net_x1,
      op => neg1_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/butterfly_direct/twiddle"

entity twiddle_entity_c41bf9e709 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_c41bf9e709;

architecture structural of twiddle_entity_c41bf9e709 is
  signal ce_1_sg_x108: std_logic;
  signal clk_1_sg_x108: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay0_q_net_x4: std_logic_vector(35 downto 0);
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic_vector(17 downto 0);
  signal delay4_q_net: std_logic_vector(17 downto 0);
  signal delay5_q_net: std_logic_vector(17 downto 0);
  signal delay6_q_net: std_logic_vector(17 downto 0);
  signal delay7_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal mux0_y_net_x0: std_logic_vector(17 downto 0);
  signal mux1_y_net_x0: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x5: std_logic_vector(35 downto 0);
  signal slice_y_net: std_logic;

begin
  reinterpret1_output_port_net_x1 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x108 <= ce_1;
  clk_1_sg_x108 <= clk_1;
  mux_y_net_x0 <= sync_in;
  ao <= delay0_q_net_x4;
  bwo <= reinterpret_out_output_port_net_x5;
  sync_out <= delay8_q_net_x0;

  bus_create_75d19a8d19: entity work.bus_create_entity_75d19a8d19
    port map (
      in1 => mux0_y_net_x0,
      in2 => mux1_y_net_x0,
      bus_out => concatenate_y_net_x2
    );

  bus_expand_1d9a063174: entity work.bus_expand_entity_1d9a063174
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  counter: entity work.counter_f979a97db6
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      rst(0) => delay7_q_net,
      op => counter_op_net
    );

  delay0: entity work.delay_dbbe492743
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d => reinterpret1_output_port_net_x1,
      q => delay0_q_net_x4
    );

  delay2: entity work.delay_43bd805056
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d(0) => slice_y_net,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_c462a80bee
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d => delay6_q_net,
      q => delay3_q_net
    );

  delay4: entity work.delay_c462a80bee
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d => reinterpret1_output_port_net_x2,
      q => delay4_q_net
    );

  delay5: entity work.delay_328e8ebbb5
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d => reinterpret2_output_port_net_x2,
      q => delay5_q_net
    );

  delay6: entity work.delay_328e8ebbb5
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => delay6_q_net
    );

  delay7: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => delay7_q_net
    );

  delay8: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d(0) => delay7_q_net,
      q(0) => delay8_q_net_x0
    );

  munge_in_529919d792: entity work.munge_in_entity_529919d792
    port map (
      din => dmux0_q_net_x1,
      dout => reinterpret_out_output_port_net_x1
    );

  munge_out_b1d3f18155: entity work.munge_in_entity_529919d792
    port map (
      din => concatenate_y_net_x2,
      dout => reinterpret_out_output_port_net_x5
    );

  mux0: entity work.mux_621a1c5abf
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d0 => delay5_q_net,
      d1 => delay6_q_net,
      sel(0) => slice_y_net,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_181e58d842
    port map (
      ce => ce_1_sg_x108,
      clk => clk_1_sg_x108,
      clr => '0',
      d0 => delay3_q_net,
      d1 => delay4_q_net,
      sel(0) => delay2_q_net,
      y => mux1_y_net_x0
    );

  negate_6d4d2da192: entity work.negate_entity_6d4d2da192
    port map (
      ce_1 => ce_1_sg_x108,
      clk_1 => clk_1_sg_x108,
      din => reinterpret2_output_port_net_x2,
      dout => reinterpret1_output_port_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/butterfly_direct"

entity butterfly_direct_entity_04af6a28ea is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_04af6a28ea;

architecture structural of butterfly_direct_entity_04af6a28ea is
  signal ce_1_sg_x109: std_logic;
  signal clk_1_sg_x109: std_logic;
  signal concat_y_net_x3: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(37 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x4: std_logic_vector(35 downto 0);
  signal delay8_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal reinterpret_out_output_port_net_x5: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x2 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x109 <= ce_1;
  clk_1_sg_x109 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x1 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x4;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x5;
  sync_out <= delay0_q_net_x0;

  bus_add_98d450105f: entity work.bus_add_entity_4767fca661
    port map (
      a => delay0_q_net_x4,
      b => reinterpret_out_output_port_net_x5,
      ce_1 => ce_1_sg_x109,
      clk_1 => clk_1_sg_x109,
      dout => concatenate_y_net_x1
    );

  bus_convert_7771532542: entity work.bus_convert_entity_7409b9461f
    port map (
      ce_1 => ce_1_sg_x109,
      clk_1 => clk_1_sg_x109,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_e29214259b: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x4,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_9124f07e72: entity work.bus_norm0_entity_91c78e7339
    port map (
      ce_1 => ce_1_sg_x109,
      clk_1 => clk_1_sg_x109,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_ce2d4206fb: entity work.bus_norm1_entity_8de4ebb209
    port map (
      ce_1 => ce_1_sg_x109,
      clk_1 => clk_1_sg_x109,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_e2577737a1: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x5
    );

  bus_scale_5d3a73ad61: entity work.bus_scale_entity_0ce9e83edc
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_052d42d41a: entity work.bus_sub_entity_0e9459bdda
    port map (
      a => delay0_q_net_x4,
      b => reinterpret_out_output_port_net_x5,
      ce_1 => ce_1_sg_x109,
      clk_1 => clk_1_sg_x109,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_4822199898
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x1,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x109,
      clk => clk_1_sg_x109,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => delay0_q_net_x0
    );

  munge_8b341f5f8f: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_3762fa143d: entity work.mux_entity_81cd61368e
    port map (
      ce_1 => ce_1_sg_x109,
      clk_1 => clk_1_sg_x109,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_1ddfbc6ba4: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x109,
      clk_1 => clk_1_sg_x109,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_c41bf9e709: entity work.twiddle_entity_c41bf9e709
    port map (
      ai => reinterpret1_output_port_net_x2,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x109,
      clk_1 => clk_1_sg_x109,
      sync_in => mux_y_net_x1,
      ao => delay0_q_net_x4,
      bwo => reinterpret_out_output_port_net_x5,
      sync_out => delay8_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/delay0/debus_addr"

entity debus_addr_entity_4e5ee9afbf is
  port (
    bus_in: in std_logic_vector(6 downto 0); 
    msb_lsb_out1: out std_logic_vector(6 downto 0)
  );
end debus_addr_entity_4e5ee9afbf;

architecture structural of debus_addr_entity_4e5ee9afbf is
  signal reinterpret1_output_port_net_x1: std_logic_vector(6 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(6 downto 0);
  signal slice1_y_net: std_logic_vector(6 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_a750fd4d0b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 7,
      y_width => 7
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/delay0/rep_addr/bussify"

entity bussify_entity_d8ca0be860 is
  port (
    in1: in std_logic_vector(6 downto 0); 
    bus_out: out std_logic_vector(6 downto 0)
  );
end bussify_entity_d8ca0be860;

architecture structural of bussify_entity_d8ca0be860 is
  signal din0_0_q_net_x0: std_logic_vector(6 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(6 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_a750fd4d0b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/delay0/rep_addr"

entity rep_addr_entity_106d22a3ef is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(6 downto 0); 
    out_x0: out std_logic_vector(6 downto 0)
  );
end rep_addr_entity_106d22a3ef;

architecture structural of rep_addr_entity_106d22a3ef is
  signal addr0_op_net_x0: std_logic_vector(6 downto 0);
  signal ce_1_sg_x110: std_logic;
  signal clk_1_sg_x110: std_logic;
  signal din0_0_q_net_x0: std_logic_vector(6 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(6 downto 0);

begin
  ce_1_sg_x110 <= ce_1;
  clk_1_sg_x110 <= clk_1;
  addr0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_d8ca0be860: entity work.bussify_entity_d8ca0be860
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x110,
      clk => clk_1_sg_x110,
      d => addr0_op_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/delay0"

entity delay0_entity_f330dd7374 is
  port (
    addr: in std_logic_vector(6 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_f330dd7374;

architecture structural of delay0_entity_f330dd7374 is
  signal addr0_op_net_x1: std_logic_vector(6 downto 0);
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x112: std_logic;
  signal clk_1_sg_x112: std_logic;
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(6 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(6 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal we0_op_net_x1: std_logic;

begin
  addr0_op_net_x1 <= addr;
  ce_1_sg_x112 <= ce_1;
  clk_1_sg_x112 <= clk_1;
  reinterpret1_output_port_net_x12 <= din;
  we0_op_net_x1 <= we;
  dout <= reinterpret1_output_port_net_x5;

  bram0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 7,
      c_width => 36,
      core_name0 => "bmg_72_799be638bda88734",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x112,
      clk => clk_1_sg_x112,
      data_in => reinterpret1_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  ddin: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x112,
      clk => clk_1_sg_x112,
      clr => '0',
      d => reinterpret1_output_port_net_x12,
      q => ddin_q_net_x0
    );

  debus_addr_4e5ee9afbf: entity work.debus_addr_entity_4e5ee9afbf
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_din_12e5175567: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => ddin_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  debus_we_ae4e22a05f: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  din_bussify_904c85d185: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => bram0_data_out_net_x0,
      bus_out => reinterpret1_output_port_net_x5
    );

  rep_addr_106d22a3ef: entity work.rep_addr_entity_106d22a3ef
    port map (
      ce_1 => ce_1_sg_x112,
      clk_1 => clk_1_sg_x112,
      in_x0 => addr0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  rep_we_b6bb02bc55: entity work.rep_we_entity_d654f5a305
    port map (
      ce_1 => ce_1_sg_x112,
      clk_1 => clk_1_sg_x112,
      in_x0 => we0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2/sync_delay"

entity sync_delay_entity_ab804e5baf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_ab804e5baf;

architecture structural of sync_delay_entity_ab804e5baf is
  signal ce_1_sg_x116: std_logic;
  signal clk_1_sg_x116: std_logic;
  signal constant1_op_net: std_logic_vector(7 downto 0);
  signal constant2_op_net: std_logic_vector(7 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(7 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x2: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x116 <= ce_1;
  clk_1_sg_x116 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x2;

  constant1: entity work.constant_91ef1678ca
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_e8aae5d3bb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_b437b02512
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_62790f857e3f8294",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x2
    );

  relational: entity work.relational_54048c8b02
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_16235eb2bf
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_2"

entity fft_stage_2_entity_d4ca9e250d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_2_entity_d4ca9e250d;

architecture structural of fft_stage_2_entity_d4ca9e250d is
  signal addr0_op_net_x1: std_logic_vector(6 downto 0);
  signal addr1_op_net_x1: std_logic_vector(6 downto 0);
  signal ce_1_sg_x117: std_logic;
  signal clk_1_sg_x117: std_logic;
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay0_q_net_x3: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din1_q_net: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal dsync2_q_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x14: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic;
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;
  signal we0_op_net_x1: std_logic;
  signal we1_op_net_x1: std_logic;

begin
  ce_1_sg_x117 <= ce_1;
  clk_1_sg_x117 <= clk_1;
  reinterpret2_output_port_net_x3 <= in1;
  reinterpret1_output_port_net_x14 <= in2;
  logical1_y_net_x1 <= of_in;
  reint1_output_port_net_x1 <= shift;
  delay0_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x4;
  out2 <= reinterpret1_output_port_net_x7;
  sync_out <= delay0_q_net_x3;

  addr0: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_54ae29da2816c092",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr0_op_net_x1
    );

  addr1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_54ae29da2816c092",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr1_op_net_x1
    );

  butterfly_direct_04af6a28ea: entity work.butterfly_direct_entity_04af6a28ea
    port map (
      a => reinterpret1_output_port_net_x6,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x2,
      a_bw => reinterpret1_output_port_net_x7,
      a_bw_x0 => reinterpret2_output_port_net_x4,
      of_x0 => reinterpret1_output_port_net_x5,
      sync_out => delay0_q_net_x3
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_6a79e2c90664744f",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      en => "1",
      rst(0) => dsync2_q_net,
      op => counter_op_net
    );

  delay0_f330dd7374: entity work.delay0_entity_f330dd7374
    port map (
      addr => addr0_op_net_x1,
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      din => reinterpret1_output_port_net_x14,
      we => we0_op_net_x1,
      dout => reinterpret1_output_port_net_x13
    );

  delay1_4fa3926e65: entity work.delay0_entity_f330dd7374
    port map (
      addr => addr1_op_net_x1,
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      din => mux1_y_net_x0,
      we => we1_op_net_x1,
      dout => reinterpret1_output_port_net_x6
    );

  din0: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d => reinterpret2_output_port_net_x3,
      q => din0_q_net
    );

  din1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d => din0_q_net,
      q => din1_q_net
    );

  dmux0: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dsync0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d(0) => delay0_q_net_x2,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d(0) => dsync2_q_net,
      q(0) => dsync1_q_net_x0
    );

  dsync2: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync2_q_net
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x5,
      d1(0) => logical1_y_net_x1,
      y(0) => logical1_y_net_x2
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d0 => reinterpret1_output_port_net_x13,
      d1 => din1_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d0 => din1_q_net,
      d1 => reinterpret1_output_port_net_x13,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x1,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_ab804e5baf: entity work.sync_delay_entity_ab804e5baf
    port map (
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  we0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we0_op_net_x1
    );

  we1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we1_op_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_add/b_debus"

entity b_debus_entity_e29545b07e is
  port (
    bus_in: in std_logic_vector(37 downto 0); 
    lsb_out1: out std_logic_vector(18 downto 0); 
    msb_out2: out std_logic_vector(18 downto 0)
  );
end b_debus_entity_e29545b07e;

architecture structural of b_debus_entity_e29545b07e is
  signal concatenate_y_net_x0: std_logic_vector(37 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(18 downto 0);
  signal slice2_y_net: std_logic_vector(18 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 38,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 38,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_add/op_bussify"

entity op_bussify_entity_1b33d614c1 is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(39 downto 0)
  );
end op_bussify_entity_1b33d614c1;

architecture structural of op_bussify_entity_1b33d614c1 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(39 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);

begin
  addsub1_s_net_x0 <= in1;
  addsub2_s_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_9e724c4b50
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub2_s_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_add"

entity bus_add_entity_6a0ce06054 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(37 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(39 downto 0)
  );
end bus_add_entity_6a0ce06054;

architecture structural of bus_add_entity_6a0ce06054 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x118: std_logic;
  signal clk_1_sg_x118: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x3 <= a;
  concatenate_y_net_x2 <= b;
  ce_1_sg_x118 <= ce_1;
  clk_1_sg_x118 <= clk_1;
  dout <= concatenate_y_net_x3;

  a_debus_37456dd026: entity work.a_debus_entity_bf77508fb5
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  addsub1: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 20,
      core_name0 => "addsb_11_0_9e23784d6681db0a",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 20,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 20
    )
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x118,
      clk => clk_1_sg_x118,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  addsub2: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 20,
      core_name0 => "addsb_11_0_9e23784d6681db0a",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 20,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 20
    )
    port map (
      a => reinterpret1_output_port_net_x2,
      b => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x118,
      clk => clk_1_sg_x118,
      clr => '0',
      en => "1",
      s => addsub2_s_net_x0
    );

  b_debus_e29545b07e: entity work.b_debus_entity_e29545b07e
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  op_bussify_1b33d614c1: entity work.op_bussify_entity_1b33d614c1
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      bus_out => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_convert/conv1/convert"

entity convert_entity_b0eb06104d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(20 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end convert_entity_b0eb06104d;

architecture structural of convert_entity_b0eb06104d is
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x119: std_logic;
  signal clk_1_sg_x119: std_logic;
  signal concat_y_net: std_logic_vector(21 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(21 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(20 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x119 <= ce_1;
  clk_1_sg_x119 <= clk_1;
  reinterpret4_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x4;

  adder: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 22,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 23,
      core_name0 => "addsb_11_0_8f722494c49be5b5",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 23,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 18
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x119,
      clk => clk_1_sg_x119,
      clr => '0',
      en => "1",
      s => adder_s_net_x4
    );

  almost_half: entity work.constant_b366689086
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_e6bc20c81b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_c84451c80b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_b1e9d7c303
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_convert/conv1"

entity conv1_entity_1cba996f95 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(20 downto 0); 
    dout: out std_logic_vector(17 downto 0); 
    of_x0: out std_logic
  );
end conv1_entity_1cba996f95;

architecture structural of conv1_entity_1cba996f95 is
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x120: std_logic;
  signal clk_1_sg_x120: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal invert3_op_net: std_logic;
  signal reinterpret4_output_port_net_x1: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;

begin
  ce_1_sg_x120 <= ce_1;
  clk_1_sg_x120 <= clk_1;
  reinterpret4_output_port_net_x1 <= din;
  dout <= adder_s_net_x5;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_fe87bb6ae4
    port map (
      ce => ce_1_sg_x120,
      clk => clk_1_sg_x120,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      d2(0) => invert3_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_fe87bb6ae4
    port map (
      ce => ce_1_sg_x120,
      clk => clk_1_sg_x120,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      d2(0) => slice3_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_b0eb06104d: entity work.convert_entity_b0eb06104d
    port map (
      ce_1 => ce_1_sg_x120,
      clk_1 => clk_1_sg_x120,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x5
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x120,
      clk => clk_1_sg_x120,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x120,
      clk => clk_1_sg_x120,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  invert3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x120,
      clk => clk_1_sg_x120,
      clr => '0',
      ip(0) => slice3_y_net,
      op(0) => invert3_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x1,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x1,
      y(0) => slice3_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_convert/debus"

entity debus_entity_2b4e3ffb67 is
  port (
    bus_in: in std_logic_vector(83 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out4: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0)
  );
end debus_entity_2b4e3ffb67;

architecture structural of debus_entity_2b4e3ffb67 is
  signal concatenate_y_net_x0: std_logic_vector(83 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out4 <= reinterpret4_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;

  reinterpret1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_convert"

entity bus_convert_entity_5667cece5a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(83 downto 0); 
    dout: out std_logic_vector(71 downto 0); 
    overflow: out std_logic_vector(3 downto 0)
  );
end bus_convert_entity_5667cece5a;

architecture structural of bus_convert_entity_5667cece5a is
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal adder_s_net_x7: std_logic_vector(17 downto 0);
  signal adder_s_net_x8: std_logic_vector(17 downto 0);
  signal and_y_net_x4: std_logic;
  signal and_y_net_x5: std_logic;
  signal and_y_net_x6: std_logic;
  signal and_y_net_x7: std_logic;
  signal ce_1_sg_x127: std_logic;
  signal clk_1_sg_x127: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);

begin
  ce_1_sg_x127 <= ce_1;
  clk_1_sg_x127 <= clk_1;
  concatenate_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;
  overflow <= concatenate_y_net_x5;

  bussify_9965936f0a: entity work.bussify_entity_11b23fca0f
    port map (
      in1 => adder_s_net_x5,
      in2 => adder_s_net_x6,
      in3 => adder_s_net_x7,
      in4 => adder_s_net_x8,
      bus_out => concatenate_y_net_x4
    );

  conv1_1cba996f95: entity work.conv1_entity_1cba996f95
    port map (
      ce_1 => ce_1_sg_x127,
      clk_1 => clk_1_sg_x127,
      din => reinterpret4_output_port_net_x2,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x4
    );

  conv2_11efca7165: entity work.conv1_entity_1cba996f95
    port map (
      ce_1 => ce_1_sg_x127,
      clk_1 => clk_1_sg_x127,
      din => reinterpret3_output_port_net_x2,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x5
    );

  conv3_89ffab07d8: entity work.conv1_entity_1cba996f95
    port map (
      ce_1 => ce_1_sg_x127,
      clk_1 => clk_1_sg_x127,
      din => reinterpret2_output_port_net_x2,
      dout => adder_s_net_x7,
      of_x0 => and_y_net_x6
    );

  conv4_b694a48f9d: entity work.conv1_entity_1cba996f95
    port map (
      ce_1 => ce_1_sg_x127,
      clk_1 => clk_1_sg_x127,
      din => reinterpret1_output_port_net_x2,
      dout => adder_s_net_x8,
      of_x0 => and_y_net_x7
    );

  debus_2b4e3ffb67: entity work.debus_entity_2b4e3ffb67
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

  of_bussify_6476b24e44: entity work.of_bussify_entity_fe2802e566
    port map (
      in1 => and_y_net_x4,
      in2 => and_y_net_x5,
      in3 => and_y_net_x6,
      in4 => and_y_net_x7,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_norm0/bussify"

entity bussify_entity_30412835c0 is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(83 downto 0)
  );
end bussify_entity_30412835c0;

architecture structural of bussify_entity_30412835c0 is
  signal concatenate_y_net_x0: std_logic_vector(83 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);

begin
  conv1_dout_net_x0 <= in1;
  conv2_dout_net_x0 <= in2;
  conv3_dout_net_x0 <= in3;
  conv4_dout_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_356a264444
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv1_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv2_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv3_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv4_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_norm0/debus"

entity debus_entity_1e2bf1f385 is
  port (
    bus_in: in std_logic_vector(79 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out4: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0)
  );
end debus_entity_1e2bf1f385;

architecture structural of debus_entity_1e2bf1f385 is
  signal concat_y_net_x0: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);

begin
  concat_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_norm0"

entity bus_norm0_entity_f230e61519 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(79 downto 0); 
    dout: out std_logic_vector(83 downto 0)
  );
end bus_norm0_entity_f230e61519;

architecture structural of bus_norm0_entity_f230e61519 is
  signal ce_1_sg_x128: std_logic;
  signal clk_1_sg_x128: std_logic;
  signal concat_y_net_x1: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(83 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x128 <= ce_1;
  clk_1_sg_x128 <= clk_1;
  concat_y_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  bussify_30412835c0: entity work.bussify_entity_30412835c0
    port map (
      in1 => conv1_dout_net_x0,
      in2 => conv2_dout_net_x0,
      in3 => conv3_dout_net_x0,
      in4 => conv4_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  conv1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      clr => '0',
      din => reinterpret4_output_port_net_x0,
      en => "1",
      dout => conv1_dout_net_x0
    );

  conv2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      clr => '0',
      din => reinterpret3_output_port_net_x0,
      en => "1",
      dout => conv2_dout_net_x0
    );

  conv3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      clr => '0',
      din => reinterpret2_output_port_net_x0,
      en => "1",
      dout => conv3_dout_net_x0
    );

  conv4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      clr => '0',
      din => reinterpret1_output_port_net_x0,
      en => "1",
      dout => conv4_dout_net_x0
    );

  debus_1e2bf1f385: entity work.debus_entity_1e2bf1f385
    port map (
      bus_in => concat_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_norm1/conv1"

entity conv1_entity_891e05b198 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(19 downto 0); 
    out_x0: out std_logic_vector(20 downto 0)
  );
end conv1_entity_891e05b198;

architecture structural of conv1_entity_891e05b198 is
  signal adder_s_net_x4: std_logic_vector(20 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x129: std_logic;
  signal clk_1_sg_x129: std_logic;
  signal concat_y_net: std_logic_vector(20 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(20 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(19 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x129 <= ce_1;
  clk_1_sg_x129 <= clk_1;
  reinterpret4_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x4;

  adder: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 21,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 22,
      core_name0 => "addsb_11_0_a271e222f664f5cc",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 22,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 18,
      s_width => 21
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x129,
      clk => clk_1_sg_x129,
      clr => '0',
      en => "1",
      s => adder_s_net_x4
    );

  almost_half: entity work.constant_b366689086
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret4_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_c615d93998
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_b1e9d7c303
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_norm1"

entity bus_norm1_entity_21ef0b3243 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(79 downto 0); 
    dout: out std_logic_vector(83 downto 0)
  );
end bus_norm1_entity_21ef0b3243;

architecture structural of bus_norm1_entity_21ef0b3243 is
  signal adder_s_net_x4: std_logic_vector(20 downto 0);
  signal adder_s_net_x5: std_logic_vector(20 downto 0);
  signal adder_s_net_x6: std_logic_vector(20 downto 0);
  signal adder_s_net_x7: std_logic_vector(20 downto 0);
  signal ce_1_sg_x133: std_logic;
  signal clk_1_sg_x133: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(83 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x133 <= ce_1;
  clk_1_sg_x133 <= clk_1;
  concatenate_y_net_x2 <= din;
  dout <= concatenate_y_net_x3;

  bussify_2f180a9aeb: entity work.bussify_entity_30412835c0
    port map (
      in1 => adder_s_net_x4,
      in2 => adder_s_net_x5,
      in3 => adder_s_net_x6,
      in4 => adder_s_net_x7,
      bus_out => concatenate_y_net_x3
    );

  conv1_891e05b198: entity work.conv1_entity_891e05b198
    port map (
      ce_1 => ce_1_sg_x133,
      clk_1 => clk_1_sg_x133,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x4
    );

  conv2_1c8d79be99: entity work.conv1_entity_891e05b198
    port map (
      ce_1 => ce_1_sg_x133,
      clk_1 => clk_1_sg_x133,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x5
    );

  conv3_3125a055f5: entity work.conv1_entity_891e05b198
    port map (
      ce_1 => ce_1_sg_x133,
      clk_1 => clk_1_sg_x133,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x6
    );

  conv4_c710736f57: entity work.conv1_entity_891e05b198
    port map (
      ce_1 => ce_1_sg_x133,
      clk_1 => clk_1_sg_x133,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x7
    );

  debus_c148b9dccc: entity work.debus_entity_45804ad8a2
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_scale"

entity bus_scale_entity_0129abca9b is
  port (
    din: in std_logic_vector(79 downto 0); 
    dout: out std_logic_vector(79 downto 0)
  );
end bus_scale_entity_0129abca9b;

architecture structural of bus_scale_entity_0129abca9b is
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal scale1_op_net_x0: std_logic_vector(19 downto 0);
  signal scale2_op_net_x0: std_logic_vector(19 downto 0);
  signal scale3_op_net_x0: std_logic_vector(19 downto 0);
  signal scale4_op_net_x0: std_logic_vector(19 downto 0);

begin
  concat_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;

  bussify_0e7bd851d5: entity work.bussify_entity_e7f6ba03f8
    port map (
      in1 => scale1_op_net_x0,
      in2 => scale2_op_net_x0,
      in3 => scale3_op_net_x0,
      in4 => scale4_op_net_x0,
      bus_out => concatenate_y_net_x4
    );

  debus_301a62b927: entity work.debus_entity_1e2bf1f385
    port map (
      bus_in => concat_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  scale1: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => scale1_op_net_x0
    );

  scale2: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => scale2_op_net_x0
    );

  scale3: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret2_output_port_net_x0,
      op => scale3_op_net_x0
    );

  scale4: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret1_output_port_net_x0,
      op => scale4_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/bus_sub"

entity bus_sub_entity_edf18c6fe0 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(37 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(39 downto 0)
  );
end bus_sub_entity_edf18c6fe0;

architecture structural of bus_sub_entity_edf18c6fe0 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x134: std_logic;
  signal clk_1_sg_x134: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(39 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x5 <= a;
  concatenate_y_net_x4 <= b;
  ce_1_sg_x134 <= ce_1;
  clk_1_sg_x134 <= clk_1;
  dout <= concatenate_y_net_x5;

  a_debus_c7c0e04c2a: entity work.a_debus_entity_bf77508fb5
    port map (
      bus_in => reinterpret1_output_port_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  addsub1: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 20,
      core_name0 => "addsb_11_0_1ac592e103dd6b2d",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 20,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 20
    )
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  addsub2: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 20,
      core_name0 => "addsb_11_0_1ac592e103dd6b2d",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 20,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 20
    )
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      clr => '0',
      en => "1",
      s => addsub2_s_net_x0
    );

  b_debus_81e1ca6aa1: entity work.b_debus_entity_e29545b07e
    port map (
      bus_in => concatenate_y_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  op_bussify_5ad425e8aa: entity work.op_bussify_entity_1b33d614c1
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/mux/d_bussify"

entity d_bussify_entity_20d142e1df is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(83 downto 0)
  );
end d_bussify_entity_20d142e1df;

architecture structural of d_bussify_entity_20d142e1df is
  signal concatenate_y_net_x4: std_logic_vector(83 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux1_y_net_x0 <= in2;
  mux2_y_net_x0 <= in3;
  mux3_y_net_x0 <= in4;
  bus_out <= concatenate_y_net_x4;

  concatenate: entity work.concat_356a264444
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x4
    );

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux3_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/mux/expand0"

entity expand0_entity_9ae716e1b8 is
  port (
    bus_in: in std_logic_vector(83 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out4: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0)
  );
end expand0_entity_9ae716e1b8;

architecture structural of expand0_entity_9ae716e1b8 is
  signal concatenate_y_net_x2: std_logic_vector(83 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x2 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/mux"

entity mux_entity_164cb2e572 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(83 downto 0); 
    d1: in std_logic_vector(83 downto 0); 
    sel: in std_logic_vector(3 downto 0); 
    out_x0: out std_logic_vector(83 downto 0)
  );
end mux_entity_164cb2e572;

architecture structural of mux_entity_164cb2e572 is
  signal ce_1_sg_x135: std_logic;
  signal clk_1_sg_x135: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(83 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic;

begin
  ce_1_sg_x135 <= ce_1;
  clk_1_sg_x135 <= clk_1;
  concatenate_y_net_x6 <= d0;
  concatenate_y_net_x7 <= d1;
  concatenate_y_net_x8 <= sel;
  out_x0 <= concatenate_y_net_x9;

  d_bussify_20d142e1df: entity work.d_bussify_entity_20d142e1df
    port map (
      in1 => mux0_y_net_x0,
      in2 => mux1_y_net_x0,
      in3 => mux2_y_net_x0,
      in4 => mux3_y_net_x0,
      bus_out => concatenate_y_net_x9
    );

  expand0_9ae716e1b8: entity work.expand0_entity_9ae716e1b8
    port map (
      bus_in => concatenate_y_net_x6,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  expand1_8db61ede80: entity work.expand0_entity_9ae716e1b8
    port map (
      bus_in => concatenate_y_net_x7,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  mux0: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      clr => '0',
      d0 => reinterpret4_output_port_net_x0,
      d1 => reinterpret4_output_port_net_x1,
      sel(0) => reinterpret4_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      clr => '0',
      d0 => reinterpret3_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x1,
      sel(0) => reinterpret3_output_port_net_x2,
      y => mux1_y_net_x0
    );

  mux2: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux3_y_net_x0
    );

  sel_expand_904de4faaa: entity work.sel_expand_entity_9d71ebeaba
    port map (
      bus_in => concatenate_y_net_x8,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_convert/conv1"

entity conv1_entity_991024a798 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(36 downto 0); 
    out_x0: out std_logic_vector(18 downto 0)
  );
end conv1_entity_991024a798;

architecture structural of conv1_entity_991024a798 is
  signal adder_s_net_x2: std_logic_vector(18 downto 0);
  signal almost_half_op_net: std_logic_vector(34 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x137: std_logic;
  signal clk_1_sg_x137: std_logic;
  signal concat_y_net: std_logic_vector(37 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(37 downto 0);
  signal force2_output_port_net: std_logic_vector(34 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(36 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(36 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x137 <= ce_1;
  clk_1_sg_x137 <= clk_1;
  reinterpret2_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x2;

  adder: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 35,
      a_width => 38,
      b_arith => xlUnsigned,
      b_bin_pt => 35,
      b_width => 35,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 39,
      core_name0 => "addsb_11_0_09e321e99dbff748",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 39,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      en => "1",
      s => adder_s_net_x2
    );

  almost_half: entity work.constant_abbc1a37f3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 17,
      x_width => 37,
      y_width => 1
    )
    port map (
      x => reinterpret2_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_83820b2faf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_620dd01637
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_ec14c62a89
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_db4c53ade5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_b1e9d7c303
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_convert/debus"

entity debus_entity_fc5440beb5 is
  port (
    bus_in: in std_logic_vector(73 downto 0); 
    lsb_out1: out std_logic_vector(36 downto 0); 
    msb_out2: out std_logic_vector(36 downto 0)
  );
end debus_entity_fc5440beb5;

architecture structural of debus_entity_fc5440beb5 is
  signal reinterpret1_output_port_net_x1: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);
  signal slice1_y_net: std_logic_vector(36 downto 0);
  signal slice2_y_net: std_logic_vector(36 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out2 <= reinterpret2_output_port_net_x1;

  reinterpret1: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 36,
      x_width => 74,
      y_width => 37
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 37,
      new_msb => 73,
      x_width => 74,
      y_width => 37
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_convert"

entity bus_convert_entity_d16c506498 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(73 downto 0); 
    misci: in std_logic_vector(36 downto 0); 
    dout: out std_logic_vector(37 downto 0); 
    misco: out std_logic_vector(36 downto 0)
  );
end bus_convert_entity_d16c506498;

architecture structural of bus_convert_entity_d16c506498 is
  signal adder_s_net_x2: std_logic_vector(18 downto 0);
  signal adder_s_net_x3: std_logic_vector(18 downto 0);
  signal ce_1_sg_x139: std_logic;
  signal clk_1_sg_x139: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(37 downto 0);
  signal dmisc_q_net_x1: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(73 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);

begin
  ce_1_sg_x139 <= ce_1;
  clk_1_sg_x139 <= clk_1;
  reinterpret1_output_port_net_x3 <= din;
  dmisc_q_net_x1 <= misci;
  dout <= concatenate_y_net_x6;
  misco <= dmisc_q_net_x2;

  bussify_bc4f408364: entity work.op_bussify_entity_fddd2d0f40
    port map (
      in1 => adder_s_net_x2,
      in2 => adder_s_net_x3,
      bus_out => concatenate_y_net_x6
    );

  conv1_991024a798: entity work.conv1_entity_991024a798
    port map (
      ce_1 => ce_1_sg_x139,
      clk_1 => clk_1_sg_x139,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x2
    );

  conv2_82b9479fdc: entity work.conv1_entity_991024a798
    port map (
      ce_1 => ce_1_sg_x139,
      clk_1 => clk_1_sg_x139,
      in_x0 => reinterpret1_output_port_net_x2,
      out_x0 => adder_s_net_x3
    );

  debus_fc5440beb5: entity work.debus_entity_fc5440beb5
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  dmisc: entity work.delay_8e134646d3
    port map (
      ce => ce_1_sg_x139,
      clk => clk_1_sg_x139,
      clr => '0',
      d => dmisc_q_net_x1,
      q => dmisc_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_create"

entity bus_create_entity_be2599d89f is
  port (
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic; 
    in3: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(72 downto 0)
  );
end bus_create_entity_be2599d89f;

architecture structural of bus_create_entity_be2599d89f is
  signal concatenate_y_net_x0: std_logic_vector(72 downto 0);
  signal dmux0_q_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x0: std_logic;
  signal reinterpret1_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic_vector(35 downto 0);

begin
  dmux0_q_net_x0 <= in1;
  mux_y_net_x0 <= in2;
  reinterpret1_output_port_net_x1 <= in3;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b28df1ab2e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => dmux0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => mux_y_net_x0,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_expand"

entity bus_expand_entity_80976a8778 is
  port (
    bus_in: in std_logic_vector(72 downto 0); 
    lsb_out1: out std_logic_vector(36 downto 0); 
    msb_out2: out std_logic_vector(35 downto 0)
  );
end bus_expand_entity_80976a8778;

architecture structural of bus_expand_entity_80976a8778 is
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(36 downto 0);
  signal slice2_y_net: std_logic_vector(35 downto 0);

begin
  delay1_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_892b735f0d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 36,
      x_width => 73,
      y_width => 37
    )
    port map (
      x => delay1_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 37,
      new_msb => 72,
      x_width => 73,
      y_width => 36
    )
    port map (
      x => delay1_q_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_expand1"

entity bus_expand1_entity_d3e88f3964 is
  port (
    bus_in: in std_logic_vector(36 downto 0); 
    lsb_out1: out std_logic_vector(35 downto 0); 
    msb_out2: out std_logic
  );
end bus_expand1_entity_d3e88f3964;

architecture structural of bus_expand1_entity_d3e88f3964 is
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);
  signal slice2_y_net_x0: std_logic;

begin
  dmisc_q_net_x3 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x6;
  msb_out2 <= slice2_y_net_x0;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x6
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 37,
      y_width => 36
    )
    port map (
      x => dmisc_q_net_x3,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 36,
      x_width => 37,
      y_width => 1
    )
    port map (
      x => dmisc_q_net_x3,
      y(0) => slice2_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_mult/a*b_bussify"

entity a_b_bussify_entity_71dd029c76 is
  port (
    in1: in std_logic_vector(73 downto 0); 
    bus_out: out std_logic_vector(73 downto 0)
  );
end a_b_bussify_entity_71dd029c76;

architecture structural of a_b_bussify_entity_71dd029c76 is
  signal concat_y_net_x0: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(73 downto 0);

begin
  concat_y_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x4;

  reinterpret1: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x0,
      output_port => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_mult/mult1/a_expand"

entity a_expand_entity_668866a5ac is
  port (
    bus_in: in std_logic_vector(71 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out4: out std_logic_vector(17 downto 0); 
    out2: out std_logic_vector(17 downto 0); 
    out3: out std_logic_vector(17 downto 0)
  );
end a_expand_entity_668866a5ac;

architecture structural of a_expand_entity_668866a5ac is
  signal concatenate_y_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);
  signal slice3_y_net: std_logic_vector(17 downto 0);
  signal slice4_y_net: std_logic_vector(17 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 53,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 54,
      new_msb => 71,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_mult/mult1/a_replicate/bussify"

entity bussify_entity_d9a6b81124 is
  port (
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(71 downto 0)
  );
end bussify_entity_d9a6b81124;

architecture structural of bussify_entity_d9a6b81124 is
  signal concatenate_y_net_x1: std_logic_vector(71 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(35 downto 0);
  signal din0_1_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(35 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  din0_1_q_net_x0 <= in2;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_c3ccc04d1a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_1_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_mult/mult1/a_replicate"

entity a_replicate_entity_5a04bf0c6b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(35 downto 0); 
    out_x0: out std_logic_vector(71 downto 0)
  );
end a_replicate_entity_5a04bf0c6b;

architecture structural of a_replicate_entity_5a04bf0c6b is
  signal ce_1_sg_x140: std_logic;
  signal clk_1_sg_x140: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(71 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(35 downto 0);
  signal din0_1_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x140 <= ce_1;
  clk_1_sg_x140 <= clk_1;
  reinterpret1_output_port_net_x3 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_d9a6b81124: entity work.bussify_entity_d9a6b81124
    port map (
      in1 => din0_0_q_net_x0,
      in2 => din0_1_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x140,
      clk => clk_1_sg_x140,
      d => reinterpret1_output_port_net_x3,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x140,
      clk => clk_1_sg_x140,
      d => reinterpret1_output_port_net_x3,
      en => '1',
      rst => '1',
      q => din0_1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_mult/mult1/ri_to_c"

entity ri_to_c_entity_e808517350 is
  port (
    im: in std_logic_vector(36 downto 0); 
    re: in std_logic_vector(36 downto 0); 
    c: out std_logic_vector(73 downto 0)
  );
end ri_to_c_entity_e808517350;

architecture structural of ri_to_c_entity_e808517350 is
  signal concat_y_net_x1: std_logic_vector(73 downto 0);
  signal convert_im_dout_net_x0: std_logic_vector(36 downto 0);
  signal convert_re_dout_net_x0: std_logic_vector(36 downto 0);
  signal force_im_output_port_net: std_logic_vector(36 downto 0);
  signal force_re_output_port_net: std_logic_vector(36 downto 0);

begin
  convert_im_dout_net_x0 <= im;
  convert_re_dout_net_x0 <= re;
  c <= concat_y_net_x1;

  concat: entity work.concat_56d57d2c92
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x1
    );

  force_im: entity work.reinterpret_db4c53ade5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert_im_dout_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_db4c53ade5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert_re_dout_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_mult/mult1"

entity mult1_entity_940b1da532 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ab: out std_logic_vector(73 downto 0)
  );
end mult1_entity_940b1da532;

architecture structural of mult1_entity_940b1da532 is
  signal addsub_im_s_net: std_logic_vector(36 downto 0);
  signal addsub_re_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x142: std_logic;
  signal clk_1_sg_x142: std_logic;
  signal concat_y_net_x2: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(71 downto 0);
  signal convert_im_dout_net_x0: std_logic_vector(36 downto 0);
  signal convert_re_dout_net_x0: std_logic_vector(36 downto 0);
  signal imim_p_net: std_logic_vector(35 downto 0);
  signal imre_p_net: std_logic_vector(35 downto 0);
  signal reim_p_net: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(17 downto 0);
  signal rere_p_net: std_logic_vector(35 downto 0);

begin
  reinterpret1_output_port_net_x6 <= a;
  reinterpret1_output_port_net_x7 <= b;
  ce_1_sg_x142 <= ce_1;
  clk_1_sg_x142 <= clk_1;
  ab <= concat_y_net_x2;

  a_expand_668866a5ac: entity work.a_expand_entity_668866a5ac
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  a_replicate_5a04bf0c6b: entity work.a_replicate_entity_5a04bf0c6b
    port map (
      ce_1 => ce_1_sg_x142,
      clk_1 => clk_1_sg_x142,
      in_x0 => reinterpret1_output_port_net_x6,
      out_x0 => concatenate_y_net_x2
    );

  addsub_im: entity work.addsub_4ded11ba54
    port map (
      a => imre_p_net,
      b => reim_p_net,
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      clr => '0',
      s => addsub_im_s_net
    );

  addsub_re: entity work.addsub_8dd4a43ef5
    port map (
      a => rere_p_net,
      b => imim_p_net,
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      clr => '0',
      s => addsub_re_s_net
    );

  b_expand_fc08601a89: entity work.a_expand_entity_668866a5ac
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  b_replicate_87bc7965f9: entity work.a_replicate_entity_5a04bf0c6b
    port map (
      ce_1 => ce_1_sg_x142,
      clk_1 => clk_1_sg_x142,
      in_x0 => reinterpret1_output_port_net_x7,
      out_x0 => concatenate_y_net_x3
    );

  convert_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 34,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 34,
      dout_width => 37,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      clr => '0',
      din => addsub_im_s_net,
      en => "1",
      dout => convert_im_dout_net_x0
    );

  convert_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 34,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 34,
      dout_width => 37,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      clr => '0',
      din => addsub_re_s_net,
      en => "1",
      dout => convert_re_dout_net_x0
    );

  imim: entity work.mult_f295e5f0f2
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      clr => '0',
      p => imim_p_net
    );

  imre: entity work.mult_f295e5f0f2
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      clr => '0',
      p => imre_p_net
    );

  reim: entity work.mult_f295e5f0f2
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret1_output_port_net_x5,
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      clr => '0',
      p => reim_p_net
    );

  rere: entity work.mult_f295e5f0f2
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      clr => '0',
      p => rere_p_net
    );

  ri_to_c_e808517350: entity work.ri_to_c_entity_e808517350
    port map (
      im => convert_im_dout_net_x0,
      re => convert_re_dout_net_x0,
      c => concat_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_mult/repa"

entity repa_entity_534ad08dcd is
  port (
    in_x0: in std_logic_vector(35 downto 0); 
    out_x0: out std_logic_vector(35 downto 0)
  );
end repa_entity_534ad08dcd;

architecture structural of repa_entity_534ad08dcd is
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  concat_y_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_cbbace6f47: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => concat_y_net_x1,
      bus_out => reinterpret1_output_port_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/bus_mult"

entity bus_mult_entity_99e641fc1a is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(36 downto 0); 
    a_b: out std_logic_vector(73 downto 0); 
    misco: out std_logic_vector(36 downto 0)
  );
end bus_mult_entity_99e641fc1a;

architecture structural of bus_mult_entity_99e641fc1a is
  signal ce_1_sg_x143: std_logic;
  signal clk_1_sg_x143: std_logic;
  signal concat_y_net_x2: std_logic_vector(73 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  concat_y_net_x3 <= a;
  reinterpret2_output_port_net_x3 <= b;
  ce_1_sg_x143 <= ce_1;
  clk_1_sg_x143 <= clk_1;
  reinterpret1_output_port_net_x9 <= misci;
  a_b <= reinterpret1_output_port_net_x10;
  misco <= dmisc_q_net_x2;

  a_b_bussify_71dd029c76: entity work.a_b_bussify_entity_71dd029c76
    port map (
      in1 => concat_y_net_x2,
      bus_out => reinterpret1_output_port_net_x10
    );

  a_debus_46fbbea5da: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x6
    );

  b_debus_460d746105: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => reinterpret1_output_port_net_x8,
      msb_lsb_out1 => reinterpret1_output_port_net_x7
    );

  dmisc: entity work.delay_2d0f74b2c1
    port map (
      ce => ce_1_sg_x143,
      clk => clk_1_sg_x143,
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => dmisc_q_net_x2
    );

  mult1_940b1da532: entity work.mult1_entity_940b1da532
    port map (
      a => reinterpret1_output_port_net_x6,
      b => reinterpret1_output_port_net_x7,
      ce_1 => ce_1_sg_x143,
      clk_1 => clk_1_sg_x143,
      ab => concat_y_net_x2
    );

  repa_534ad08dcd: entity work.repa_entity_534ad08dcd
    port map (
      in_x0 => concat_y_net_x3,
      out_x0 => reinterpret1_output_port_net_x3
    );

  repb_73bac2e6e5: entity work.repa_entity_534ad08dcd
    port map (
      in_x0 => reinterpret2_output_port_net_x3,
      out_x0 => reinterpret1_output_port_net_x8
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_a8626f0d65 is
  port (
    in_x0: in std_logic_vector(1 downto 0); 
    out_x0: out std_logic_vector(1 downto 0)
  );
end bit_reverse_entity_a8626f0d65;

architecture structural of bit_reverse_entity_a8626f0d65 is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(1 downto 0);
  signal slice_y_net_x0: std_logic_vector(1 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  concat: entity work.concat_e6f5ee726b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_5c4dc4f778 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(1 downto 0); 
    add: out std_logic_vector(1 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_5c4dc4f778;

architecture structural of add_convert0_entity_5c4dc4f778 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(1 downto 0);
  signal ce_1_sg_x144: std_logic;
  signal clk_1_sg_x144: std_logic;
  signal concat_y_net: std_logic_vector(2 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(1 downto 0);
  signal delay13_q_net: std_logic_vector(1 downto 0);
  signal delay14_q_net: std_logic_vector(1 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(2 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic;
  signal new_add_y_net: std_logic_vector(1 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x144 <= ce_1;
  clk_1_sg_x144 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x144,
      clk => clk_1_sg_x144,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_6160d7387c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1(0) => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 2,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 2,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x144,
      clk => clk_1_sg_x144,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_fcebea29b9
    port map (
      ce => ce_1_sg_x144,
      clk => clk_1_sg_x144,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_4ce33ca7e7
    port map (
      ce => ce_1_sg_x144,
      clk => clk_1_sg_x144,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x144,
      clk => clk_1_sg_x144,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_4a9a9a25a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => fluff_y_net,
      y(0) => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 3,
      y_width => 2
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 2,
      x_width => 3,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_32af6ac1fb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(1 downto 0); 
    add: out std_logic_vector(1 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_32af6ac1fb;

architecture structural of add_convert1_entity_32af6ac1fb is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(1 downto 0);
  signal ce_1_sg_x145: std_logic;
  signal clk_1_sg_x145: std_logic;
  signal concat_y_net: std_logic_vector(2 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(1 downto 0);
  signal delay13_q_net: std_logic_vector(1 downto 0);
  signal delay14_q_net: std_logic_vector(1 downto 0);
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(2 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic;
  signal new_add_y_net: std_logic_vector(1 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x145 <= ce_1;
  clk_1_sg_x145 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  add <= convert2_dout_net_x0;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x145,
      clk => clk_1_sg_x145,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_6160d7387c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1(0) => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 2,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 2,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x145,
      clk => clk_1_sg_x145,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay1: entity work.delay_3ffe3e5660
    port map (
      ce => ce_1_sg_x145,
      clk => clk_1_sg_x145,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay13: entity work.delay_fcebea29b9
    port map (
      ce => ce_1_sg_x145,
      clk => clk_1_sg_x145,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_4ce33ca7e7
    port map (
      ce => ce_1_sg_x145,
      clk => clk_1_sg_x145,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x145,
      clk => clk_1_sg_x145,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_4a9a9a25a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => fluff_y_net,
      y(0) => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 3,
      y_width => 2
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 2,
      x_width => 3,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin/invert0"

entity invert0_entity_bffa0fbbf2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    negate_x0: in std_logic; 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert0_entity_bffa0fbbf2;

architecture structural of invert0_entity_bffa0fbbf2 is
  signal ce_1_sg_x146: std_logic;
  signal clk_1_sg_x146: std_logic;
  signal delay10_q_net_x0: std_logic;
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal lookup_douta_net_x0: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x146 <= ce_1;
  clk_1_sg_x146 <= clk_1;
  lookup_douta_net_x0 <= in_x0;
  delay10_q_net_x0 <= negate_x0;
  out_x0 <= mux_y_net_x0;

  delay20: entity work.delay_b6092ad150
    port map (
      ce => ce_1_sg_x146,
      clk => clk_1_sg_x146,
      clr => '0',
      d => lookup_douta_net_x0,
      q => delay20_q_net
    );

  delay21: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x146,
      clk => clk_1_sg_x146,
      clr => '0',
      d(0) => delay10_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x146,
      clk => clk_1_sg_x146,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_206b7f76d8
    port map (
      ce => ce_1_sg_x146,
      clk => clk_1_sg_x146,
      clr => '0',
      ip => lookup_douta_net_x0,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin/invert1"

entity invert1_entity_7db6e4373c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    misci: in std_logic_vector(72 downto 0); 
    negate_x0: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert1_entity_7db6e4373c;

architecture structural of invert1_entity_7db6e4373c is
  signal ce_1_sg_x147: std_logic;
  signal clk_1_sg_x147: std_logic;
  signal delay1_q_net_x1: std_logic_vector(72 downto 0);
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal lookup_doutb_net_x0: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x147 <= ce_1;
  clk_1_sg_x147 <= clk_1;
  lookup_doutb_net_x0 <= in_x0;
  delay_q_net_x0 <= misci;
  delay8_q_net_x0 <= negate_x0;
  misco <= delay1_q_net_x1;
  out_x0 <= mux_y_net_x0;

  delay1: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x147,
      clk => clk_1_sg_x147,
      clr => '0',
      d => delay_q_net_x0,
      q => delay1_q_net_x1
    );

  delay20: entity work.delay_b6092ad150
    port map (
      ce => ce_1_sg_x147,
      clk => clk_1_sg_x147,
      clr => '0',
      d => lookup_doutb_net_x0,
      q => delay20_q_net
    );

  delay21: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x147,
      clk => clk_1_sg_x147,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x147,
      clk => clk_1_sg_x147,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_206b7f76d8
    port map (
      ce => ce_1_sg_x147,
      clk => clk_1_sg_x147,
      clr => '0',
      ip => lookup_doutb_net_x0,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_ff94cb6096 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(1 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_ff94cb6096;

architecture structural of cosin_entity_ff94cb6096 is
  signal assert_dout_net_x1: std_logic_vector(1 downto 0);
  signal ce_1_sg_x148: std_logic;
  signal clk_1_sg_x148: std_logic;
  signal concat_y_net_x1: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic_vector(17 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(1 downto 0);
  signal convert2_dout_net_x1: std_logic_vector(1 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal lookup_douta_net_x0: std_logic_vector(17 downto 0);
  signal lookup_doutb_net_x0: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x148 <= ce_1;
  clk_1_sg_x148 <= clk_1;
  concatenate_y_net_x2 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_5c4dc4f778: entity work.add_convert0_entity_5c4dc4f778
    port map (
      ce_1 => ce_1_sg_x148,
      clk_1 => clk_1_sg_x148,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_32af6ac1fb: entity work.add_convert1_entity_32af6ac1fb
    port map (
      ce_1 => ce_1_sg_x148,
      clk_1 => clk_1_sg_x148,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 2,
      dout_width => 2
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  constant2: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_95b0f967bc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x148,
      clk => clk_1_sg_x148,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x148,
      clk => clk_1_sg_x148,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x148,
      clk => clk_1_sg_x148,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_bffa0fbbf2: entity work.invert0_entity_bffa0fbbf2
    port map (
      ce_1 => ce_1_sg_x148,
      clk_1 => clk_1_sg_x148,
      in_x0 => lookup_douta_net_x0,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_7db6e4373c: entity work.invert1_entity_7db6e4373c
    port map (
      ce_1 => ce_1_sg_x148,
      clk_1 => clk_1_sg_x148,
      in_x0 => lookup_doutb_net_x0,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  lookup: entity work.xldpram_dist_blast_0209_dds305
    generic map (
      addr_width => 2,
      c_address_width => 4,
      c_width => 18,
      core_name0 => "dmg_72_3e09d2589ef3d23d",
      latency => 3
    )
    port map (
      a_ce => ce_1_sg_x148,
      a_clk => clk_1_sg_x148,
      addra => convert2_dout_net_x0,
      addrb => convert2_dout_net_x1,
      b_ce => ce_1_sg_x148,
      b_clk => clk_1_sg_x148,
      dina => constant_op_net,
      ena => "1",
      enb => "1",
      wea(0) => constant2_op_net,
      douta => lookup_douta_net_x0,
      doutb => lookup_doutb_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/ri_to_c"

entity ri_to_c_entity_59e96c1799 is
  port (
    im: in std_logic_vector(17 downto 0); 
    re: in std_logic_vector(17 downto 0); 
    c: out std_logic_vector(35 downto 0)
  );
end ri_to_c_entity_59e96c1799;

architecture structural of ri_to_c_entity_59e96c1799 is
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal force_im_output_port_net: std_logic_vector(17 downto 0);
  signal force_re_output_port_net: std_logic_vector(17 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);

begin
  mux_y_net_x5 <= im;
  mux_y_net_x4 <= re;
  c <= concat_y_net_x4;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x4
    );

  force_im: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux_y_net_x5,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux_y_net_x4,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_95510c8444 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_95510c8444;

architecture structural of coeff_gen_entity_95510c8444 is
  signal ce_1_sg_x149: std_logic;
  signal clk_1_sg_x149: std_logic;
  signal concat_y_net_x1: std_logic_vector(1 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x149 <= ce_1;
  clk_1_sg_x149 <= clk_1;
  concatenate_y_net_x3 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  bit_reverse_a8626f0d65: entity work.bit_reverse_entity_a8626f0d65
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_ff94cb6096: entity work.cosin_entity_ff94cb6096
    port map (
      ce_1 => ce_1_sg_x149,
      clk_1 => clk_1_sg_x149,
      misci => concatenate_y_net_x3,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_f979a97db6
    port map (
      ce => ce_1_sg_x149,
      clk => clk_1_sg_x149,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_59e96c1799: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 7,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct/twiddle"

entity twiddle_entity_ae5fcdd7de is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_ae5fcdd7de;

architecture structural of twiddle_entity_ae5fcdd7de is
  signal ce_1_sg_x150: std_logic;
  signal clk_1_sg_x150: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x150 <= ce_1;
  clk_1_sg_x150 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_d16c506498: entity work.bus_convert_entity_d16c506498
    port map (
      ce_1 => ce_1_sg_x150,
      clk_1 => clk_1_sg_x150,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_be2599d89f: entity work.bus_create_entity_be2599d89f
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_d3e88f3964: entity work.bus_expand1_entity_d3e88f3964
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_80976a8778: entity work.bus_expand_entity_80976a8778
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_99e641fc1a: entity work.bus_mult_entity_99e641fc1a
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x150,
      clk_1 => clk_1_sg_x150,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_95510c8444: entity work.coeff_gen_entity_95510c8444
    port map (
      ce_1 => ce_1_sg_x150,
      clk_1 => clk_1_sg_x150,
      misci => concatenate_y_net_x3,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/butterfly_direct"

entity butterfly_direct_entity_575bbeba13 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_575bbeba13;

architecture structural of butterfly_direct_entity_575bbeba13 is
  signal ce_1_sg_x151: std_logic;
  signal clk_1_sg_x151: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x4 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x151 <= ce_1;
  clk_1_sg_x151 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x5;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x6;
  sync_out <= delay0_q_net_x0;

  bus_add_6a0ce06054: entity work.bus_add_entity_6a0ce06054
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      dout => concatenate_y_net_x3
    );

  bus_convert_5667cece5a: entity work.bus_convert_entity_5667cece5a
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_7008376692: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_f230e61519: entity work.bus_norm0_entity_f230e61519
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_21ef0b3243: entity work.bus_norm1_entity_21ef0b3243
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_ad9c545cf1: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x6
    );

  bus_scale_0129abca9b: entity work.bus_scale_entity_0129abca9b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_edf18c6fe0: entity work.bus_sub_entity_edf18c6fe0
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x151,
      clk => clk_1_sg_x151,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_441a015fc8: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_164cb2e572: entity work.mux_entity_164cb2e572
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_44b89d80a6: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_ae5fcdd7de: entity work.twiddle_entity_ae5fcdd7de
    port map (
      ai => reinterpret1_output_port_net_x4,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/delay0/debus_addr"

entity debus_addr_entity_7acd9b22ba is
  port (
    bus_in: in std_logic_vector(5 downto 0); 
    msb_lsb_out1: out std_logic_vector(5 downto 0)
  );
end debus_addr_entity_7acd9b22ba;

architecture structural of debus_addr_entity_7acd9b22ba is
  signal reinterpret1_output_port_net_x1: std_logic_vector(5 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(5 downto 0);
  signal slice1_y_net: std_logic_vector(5 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_2bd09900a1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 6,
      y_width => 6
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/delay0/rep_addr/bussify"

entity bussify_entity_ca885bddcd is
  port (
    in1: in std_logic_vector(5 downto 0); 
    bus_out: out std_logic_vector(5 downto 0)
  );
end bussify_entity_ca885bddcd;

architecture structural of bussify_entity_ca885bddcd is
  signal din0_0_q_net_x0: std_logic_vector(5 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(5 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_2bd09900a1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/delay0/rep_addr"

entity rep_addr_entity_ee7184eba3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(5 downto 0); 
    out_x0: out std_logic_vector(5 downto 0)
  );
end rep_addr_entity_ee7184eba3;

architecture structural of rep_addr_entity_ee7184eba3 is
  signal addr0_op_net_x0: std_logic_vector(5 downto 0);
  signal ce_1_sg_x152: std_logic;
  signal clk_1_sg_x152: std_logic;
  signal din0_0_q_net_x0: std_logic_vector(5 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(5 downto 0);

begin
  ce_1_sg_x152 <= ce_1;
  clk_1_sg_x152 <= clk_1;
  addr0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_ca885bddcd: entity work.bussify_entity_ca885bddcd
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 6
    )
    port map (
      ce => ce_1_sg_x152,
      clk => clk_1_sg_x152,
      d => addr0_op_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/delay0"

entity delay0_entity_3ad8ac2405 is
  port (
    addr: in std_logic_vector(5 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_3ad8ac2405;

architecture structural of delay0_entity_3ad8ac2405 is
  signal addr0_op_net_x1: std_logic_vector(5 downto 0);
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x154: std_logic;
  signal clk_1_sg_x154: std_logic;
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(5 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(5 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal we0_op_net_x1: std_logic;

begin
  addr0_op_net_x1 <= addr;
  ce_1_sg_x154 <= ce_1;
  clk_1_sg_x154 <= clk_1;
  reinterpret1_output_port_net_x9 <= din;
  we0_op_net_x1 <= we;
  dout <= reinterpret1_output_port_net_x10;

  bram0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_3171752a0f4cf103",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x154,
      clk => clk_1_sg_x154,
      data_in => reinterpret1_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  ddin: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x154,
      clk => clk_1_sg_x154,
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => ddin_q_net_x0
    );

  debus_addr_7acd9b22ba: entity work.debus_addr_entity_7acd9b22ba
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_din_4db5096df1: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => ddin_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  debus_we_f765edac1a: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  din_bussify_3ce9f956e9: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => bram0_data_out_net_x0,
      bus_out => reinterpret1_output_port_net_x10
    );

  rep_addr_ee7184eba3: entity work.rep_addr_entity_ee7184eba3
    port map (
      ce_1 => ce_1_sg_x154,
      clk_1 => clk_1_sg_x154,
      in_x0 => addr0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  rep_we_2b953ccb55: entity work.rep_we_entity_d654f5a305
    port map (
      ce_1 => ce_1_sg_x154,
      clk_1 => clk_1_sg_x154,
      in_x0 => we0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3/sync_delay"

entity sync_delay_entity_15be004b30 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_15be004b30;

architecture structural of sync_delay_entity_15be004b30 is
  signal ce_1_sg_x158: std_logic;
  signal clk_1_sg_x158: std_logic;
  signal constant1_op_net: std_logic_vector(6 downto 0);
  signal constant2_op_net: std_logic_vector(6 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(6 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x158 <= ce_1;
  clk_1_sg_x158 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_7244cd602b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_7b07120b87
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_180df391de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_212a63dac06ff05f",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_9a3978c602
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_23065a6aa3
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_3"

entity fft_stage_3_entity_0af81251ad is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_3_entity_0af81251ad;

architecture structural of fft_stage_3_entity_0af81251ad is
  signal addr0_op_net_x1: std_logic_vector(5 downto 0);
  signal addr1_op_net_x1: std_logic_vector(5 downto 0);
  signal ce_1_sg_x159: std_logic;
  signal clk_1_sg_x159: std_logic;
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal delay0_q_net_x4: std_logic;
  signal delay0_q_net_x5: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din1_q_net: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal dsync2_q_net: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reint1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;
  signal we0_op_net_x1: std_logic;
  signal we1_op_net_x1: std_logic;

begin
  ce_1_sg_x159 <= ce_1;
  clk_1_sg_x159 <= clk_1;
  reinterpret2_output_port_net_x5 <= in1;
  reinterpret1_output_port_net_x11 <= in2;
  logical1_y_net_x3 <= of_in;
  reint1_output_port_net_x2 <= shift;
  delay0_q_net_x4 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x6;
  out2 <= reinterpret1_output_port_net_x8;
  sync_out <= delay0_q_net_x5;

  addr0: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_66aa4524955422eb",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr0_op_net_x1
    );

  addr1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_66aa4524955422eb",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr1_op_net_x1
    );

  butterfly_direct_575bbeba13: entity work.butterfly_direct_entity_575bbeba13
    port map (
      a => reinterpret1_output_port_net_x7,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x159,
      clk_1 => clk_1_sg_x159,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x8,
      a_bw_x0 => reinterpret2_output_port_net_x6,
      of_x0 => reinterpret1_output_port_net_x6,
      sync_out => delay0_q_net_x5
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_54ae29da2816c092",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      en => "1",
      rst(0) => dsync2_q_net,
      op => counter_op_net
    );

  delay0_3ad8ac2405: entity work.delay0_entity_3ad8ac2405
    port map (
      addr => addr0_op_net_x1,
      ce_1 => ce_1_sg_x159,
      clk_1 => clk_1_sg_x159,
      din => reinterpret1_output_port_net_x11,
      we => we0_op_net_x1,
      dout => reinterpret1_output_port_net_x10
    );

  delay1_74c9a70750: entity work.delay0_entity_3ad8ac2405
    port map (
      addr => addr1_op_net_x1,
      ce_1 => ce_1_sg_x159,
      clk_1 => clk_1_sg_x159,
      din => mux1_y_net_x0,
      we => we1_op_net_x1,
      dout => reinterpret1_output_port_net_x7
    );

  din0: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d => reinterpret2_output_port_net_x5,
      q => din0_q_net
    );

  din1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d => din0_q_net,
      q => din1_q_net
    );

  dmux0: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dsync0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d(0) => delay0_q_net_x4,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d(0) => dsync2_q_net,
      q(0) => dsync1_q_net_x0
    );

  dsync2: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync2_q_net
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x6,
      d1(0) => logical1_y_net_x3,
      y(0) => logical1_y_net_x0
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d0 => reinterpret1_output_port_net_x10,
      d1 => din1_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      d0 => din1_q_net,
      d1 => reinterpret1_output_port_net_x10,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x2,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_15be004b30: entity work.sync_delay_entity_15be004b30
    port map (
      ce_1 => ce_1_sg_x159,
      clk_1 => clk_1_sg_x159,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

  we0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we0_op_net_x1
    );

  we1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we1_op_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_d85094c94e is
  port (
    in_x0: in std_logic_vector(2 downto 0); 
    out_x0: out std_logic_vector(2 downto 0)
  );
end bit_reverse_entity_d85094c94e;

architecture structural of bit_reverse_entity_d85094c94e is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(2 downto 0);
  signal slice_y_net_x0: std_logic_vector(2 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  concat: entity work.concat_452c4d3410
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_47713e93dd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(2 downto 0); 
    add: out std_logic_vector(2 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_47713e93dd;

architecture structural of add_convert0_entity_47713e93dd is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(2 downto 0);
  signal ce_1_sg_x186: std_logic;
  signal clk_1_sg_x186: std_logic;
  signal concat_y_net: std_logic_vector(3 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(2 downto 0);
  signal delay13_q_net: std_logic_vector(2 downto 0);
  signal delay14_q_net: std_logic_vector(2 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(3 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(1 downto 0);
  signal new_add_y_net: std_logic_vector(2 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x186 <= ce_1;
  clk_1_sg_x186 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x186,
      clk => clk_1_sg_x186,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_bd20dd351d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 3,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 3,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x186,
      clk => clk_1_sg_x186,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_6edcd04662
    port map (
      ce => ce_1_sg_x186,
      clk => clk_1_sg_x186,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_54d5af2115
    port map (
      ce => ce_1_sg_x186,
      clk => clk_1_sg_x186,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x186,
      clk => clk_1_sg_x186,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_949f038a6d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 2,
      x_width => 4,
      y_width => 3
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_327068453e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(2 downto 0); 
    add: out std_logic_vector(2 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_327068453e;

architecture structural of add_convert1_entity_327068453e is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(2 downto 0);
  signal ce_1_sg_x187: std_logic;
  signal clk_1_sg_x187: std_logic;
  signal concat_y_net: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(2 downto 0);
  signal delay13_q_net: std_logic_vector(2 downto 0);
  signal delay14_q_net: std_logic_vector(2 downto 0);
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(3 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(1 downto 0);
  signal new_add_y_net: std_logic_vector(2 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x187 <= ce_1;
  clk_1_sg_x187 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  add <= convert2_dout_net_x0;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x187,
      clk => clk_1_sg_x187,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_bd20dd351d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 3,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 3,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x187,
      clk => clk_1_sg_x187,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay1: entity work.delay_3ffe3e5660
    port map (
      ce => ce_1_sg_x187,
      clk => clk_1_sg_x187,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay13: entity work.delay_6edcd04662
    port map (
      ce => ce_1_sg_x187,
      clk => clk_1_sg_x187,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_54d5af2115
    port map (
      ce => ce_1_sg_x187,
      clk => clk_1_sg_x187,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x187,
      clk => clk_1_sg_x187,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_949f038a6d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 2,
      x_width => 4,
      y_width => 3
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_44b56340f4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(2 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_44b56340f4;

architecture structural of cosin_entity_44b56340f4 is
  signal assert_dout_net_x1: std_logic_vector(2 downto 0);
  signal ce_1_sg_x190: std_logic;
  signal clk_1_sg_x190: std_logic;
  signal concat_y_net_x1: std_logic_vector(2 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic_vector(17 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(2 downto 0);
  signal convert2_dout_net_x1: std_logic_vector(2 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal lookup_douta_net_x0: std_logic_vector(17 downto 0);
  signal lookup_doutb_net_x0: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x190 <= ce_1;
  clk_1_sg_x190 <= clk_1;
  concatenate_y_net_x2 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_47713e93dd: entity work.add_convert0_entity_47713e93dd
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_327068453e: entity work.add_convert1_entity_327068453e
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 3,
      dout_width => 3
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  constant2: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_95b0f967bc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x190,
      clk => clk_1_sg_x190,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x190,
      clk => clk_1_sg_x190,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x190,
      clk => clk_1_sg_x190,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_df9c75bb68: entity work.invert0_entity_bffa0fbbf2
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in_x0 => lookup_douta_net_x0,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_ebd3ecd1f9: entity work.invert1_entity_7db6e4373c
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in_x0 => lookup_doutb_net_x0,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  lookup: entity work.xldpram_dist_blast_0209_dds305
    generic map (
      addr_width => 3,
      c_address_width => 4,
      c_width => 18,
      core_name0 => "dmg_72_469cac73f6852527",
      latency => 3
    )
    port map (
      a_ce => ce_1_sg_x190,
      a_clk => clk_1_sg_x190,
      addra => convert2_dout_net_x0,
      addrb => convert2_dout_net_x1,
      b_ce => ce_1_sg_x190,
      b_clk => clk_1_sg_x190,
      dina => constant_op_net,
      ena => "1",
      enb => "1",
      wea(0) => constant2_op_net,
      douta => lookup_douta_net_x0,
      doutb => lookup_doutb_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_cb4ca3b38d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_cb4ca3b38d;

architecture structural of coeff_gen_entity_cb4ca3b38d is
  signal ce_1_sg_x191: std_logic;
  signal clk_1_sg_x191: std_logic;
  signal concat_y_net_x1: std_logic_vector(2 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(2 downto 0);

begin
  ce_1_sg_x191 <= ce_1;
  clk_1_sg_x191 <= clk_1;
  concatenate_y_net_x3 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  bit_reverse_d85094c94e: entity work.bit_reverse_entity_d85094c94e
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_44b56340f4: entity work.cosin_entity_44b56340f4
    port map (
      ce_1 => ce_1_sg_x191,
      clk_1 => clk_1_sg_x191,
      misci => concatenate_y_net_x3,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_f979a97db6
    port map (
      ce => ce_1_sg_x191,
      clk => clk_1_sg_x191,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_f469ad3b22: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 7,
      x_width => 8,
      y_width => 3
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/butterfly_direct/twiddle"

entity twiddle_entity_97adb67e05 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_97adb67e05;

architecture structural of twiddle_entity_97adb67e05 is
  signal ce_1_sg_x192: std_logic;
  signal clk_1_sg_x192: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x192 <= ce_1;
  clk_1_sg_x192 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_203b669e03: entity work.bus_convert_entity_d16c506498
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_46b28dd44e: entity work.bus_create_entity_be2599d89f
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_549da5a167: entity work.bus_expand1_entity_d3e88f3964
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_46e70dd000: entity work.bus_expand_entity_80976a8778
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_2738727d56: entity work.bus_mult_entity_99e641fc1a
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_cb4ca3b38d: entity work.coeff_gen_entity_cb4ca3b38d
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      misci => concatenate_y_net_x3,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/butterfly_direct"

entity butterfly_direct_entity_fcc8f19a98 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_fcc8f19a98;

architecture structural of butterfly_direct_entity_fcc8f19a98 is
  signal ce_1_sg_x193: std_logic;
  signal clk_1_sg_x193: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x4 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x193 <= ce_1;
  clk_1_sg_x193 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x5;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x6;
  sync_out <= delay0_q_net_x0;

  bus_add_378ed9540f: entity work.bus_add_entity_6a0ce06054
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x193,
      clk_1 => clk_1_sg_x193,
      dout => concatenate_y_net_x3
    );

  bus_convert_3fc8541c66: entity work.bus_convert_entity_5667cece5a
    port map (
      ce_1 => ce_1_sg_x193,
      clk_1 => clk_1_sg_x193,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_fdb993a628: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_01c419783f: entity work.bus_norm0_entity_f230e61519
    port map (
      ce_1 => ce_1_sg_x193,
      clk_1 => clk_1_sg_x193,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_e9f1bed804: entity work.bus_norm1_entity_21ef0b3243
    port map (
      ce_1 => ce_1_sg_x193,
      clk_1 => clk_1_sg_x193,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_073ce659e9: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x6
    );

  bus_scale_2f045b8a11: entity work.bus_scale_entity_0129abca9b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_4cc9edc3ca: entity work.bus_sub_entity_edf18c6fe0
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x193,
      clk_1 => clk_1_sg_x193,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_333e8151e5: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_d1a0dfa67f: entity work.mux_entity_164cb2e572
    port map (
      ce_1 => ce_1_sg_x193,
      clk_1 => clk_1_sg_x193,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_9b7896315d: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x193,
      clk_1 => clk_1_sg_x193,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_97adb67e05: entity work.twiddle_entity_97adb67e05
    port map (
      ai => reinterpret1_output_port_net_x4,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x193,
      clk_1 => clk_1_sg_x193,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/delay0/debus_addr"

entity debus_addr_entity_54727bb654 is
  port (
    bus_in: in std_logic_vector(4 downto 0); 
    msb_lsb_out1: out std_logic_vector(4 downto 0)
  );
end debus_addr_entity_54727bb654;

architecture structural of debus_addr_entity_54727bb654 is
  signal reinterpret1_output_port_net_x1: std_logic_vector(4 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(4 downto 0);
  signal slice1_y_net: std_logic_vector(4 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_696c37f787
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 5,
      y_width => 5
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/delay0/rep_addr/bussify"

entity bussify_entity_d825c75cf5 is
  port (
    in1: in std_logic_vector(4 downto 0); 
    bus_out: out std_logic_vector(4 downto 0)
  );
end bussify_entity_d825c75cf5;

architecture structural of bussify_entity_d825c75cf5 is
  signal din0_0_q_net_x0: std_logic_vector(4 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(4 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_696c37f787
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/delay0/rep_addr"

entity rep_addr_entity_920838da77 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(4 downto 0); 
    out_x0: out std_logic_vector(4 downto 0)
  );
end rep_addr_entity_920838da77;

architecture structural of rep_addr_entity_920838da77 is
  signal addr0_op_net_x0: std_logic_vector(4 downto 0);
  signal ce_1_sg_x194: std_logic;
  signal clk_1_sg_x194: std_logic;
  signal din0_0_q_net_x0: std_logic_vector(4 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(4 downto 0);

begin
  ce_1_sg_x194 <= ce_1;
  clk_1_sg_x194 <= clk_1;
  addr0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_d825c75cf5: entity work.bussify_entity_d825c75cf5
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 5
    )
    port map (
      ce => ce_1_sg_x194,
      clk => clk_1_sg_x194,
      d => addr0_op_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/delay0"

entity delay0_entity_85e00c3ec3 is
  port (
    addr: in std_logic_vector(4 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_85e00c3ec3;

architecture structural of delay0_entity_85e00c3ec3 is
  signal addr0_op_net_x1: std_logic_vector(4 downto 0);
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x196: std_logic;
  signal clk_1_sg_x196: std_logic;
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(4 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(4 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal we0_op_net_x1: std_logic;

begin
  addr0_op_net_x1 <= addr;
  ce_1_sg_x196 <= ce_1;
  clk_1_sg_x196 <= clk_1;
  reinterpret1_output_port_net_x9 <= din;
  we0_op_net_x1 <= we;
  dout <= reinterpret1_output_port_net_x10;

  bram0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 5,
      c_width => 36,
      core_name0 => "bmg_72_e4dfaca742cb7129",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x196,
      clk => clk_1_sg_x196,
      data_in => reinterpret1_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  ddin: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x196,
      clk => clk_1_sg_x196,
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => ddin_q_net_x0
    );

  debus_addr_54727bb654: entity work.debus_addr_entity_54727bb654
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_din_7102faaf32: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => ddin_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  debus_we_7d1cbe096f: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  din_bussify_4e60f260f0: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => bram0_data_out_net_x0,
      bus_out => reinterpret1_output_port_net_x10
    );

  rep_addr_920838da77: entity work.rep_addr_entity_920838da77
    port map (
      ce_1 => ce_1_sg_x196,
      clk_1 => clk_1_sg_x196,
      in_x0 => addr0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  rep_we_3ae5dc6629: entity work.rep_we_entity_d654f5a305
    port map (
      ce_1 => ce_1_sg_x196,
      clk_1 => clk_1_sg_x196,
      in_x0 => we0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4/sync_delay"

entity sync_delay_entity_c5145c3b33 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_c5145c3b33;

architecture structural of sync_delay_entity_c5145c3b33 is
  signal ce_1_sg_x200: std_logic;
  signal clk_1_sg_x200: std_logic;
  signal constant1_op_net: std_logic_vector(5 downto 0);
  signal constant2_op_net: std_logic_vector(5 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(5 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x200 <= ce_1;
  clk_1_sg_x200 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_7ea0f2fff7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_961b61f8a1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a267c870be
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_91eea2a2e392c322",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x200,
      clk => clk_1_sg_x200,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_931d61fb72
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_fe487ce1c7
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_4"

entity fft_stage_4_entity_17fc9ab803 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_4_entity_17fc9ab803;

architecture structural of fft_stage_4_entity_17fc9ab803 is
  signal addr0_op_net_x1: std_logic_vector(4 downto 0);
  signal addr1_op_net_x1: std_logic_vector(4 downto 0);
  signal ce_1_sg_x201: std_logic;
  signal clk_1_sg_x201: std_logic;
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal delay0_q_net_x6: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din1_q_net: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal dsync2_q_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reint1_output_port_net_x3: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;
  signal we0_op_net_x1: std_logic;
  signal we1_op_net_x1: std_logic;

begin
  ce_1_sg_x201 <= ce_1;
  clk_1_sg_x201 <= clk_1;
  reinterpret2_output_port_net_x7 <= in1;
  reinterpret1_output_port_net_x11 <= in2;
  logical1_y_net_x1 <= of_in;
  reint1_output_port_net_x3 <= shift;
  delay0_q_net_x6 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x2;
  out2 <= reinterpret1_output_port_net_x8;
  sync_out <= delay0_q_net_x1;

  addr0: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_479ebaa7cafdbad9",
      op_arith => xlUnsigned,
      op_width => 5
    )
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr0_op_net_x1
    );

  addr1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_479ebaa7cafdbad9",
      op_arith => xlUnsigned,
      op_width => 5
    )
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr1_op_net_x1
    );

  butterfly_direct_fcc8f19a98: entity work.butterfly_direct_entity_fcc8f19a98
    port map (
      a => reinterpret1_output_port_net_x7,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x201,
      clk_1 => clk_1_sg_x201,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x8,
      a_bw_x0 => reinterpret2_output_port_net_x2,
      of_x0 => reinterpret1_output_port_net_x6,
      sync_out => delay0_q_net_x1
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_66aa4524955422eb",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      en => "1",
      rst(0) => dsync2_q_net,
      op => counter_op_net
    );

  delay0_85e00c3ec3: entity work.delay0_entity_85e00c3ec3
    port map (
      addr => addr0_op_net_x1,
      ce_1 => ce_1_sg_x201,
      clk_1 => clk_1_sg_x201,
      din => reinterpret1_output_port_net_x11,
      we => we0_op_net_x1,
      dout => reinterpret1_output_port_net_x10
    );

  delay1_f201560b1b: entity work.delay0_entity_85e00c3ec3
    port map (
      addr => addr1_op_net_x1,
      ce_1 => ce_1_sg_x201,
      clk_1 => clk_1_sg_x201,
      din => mux1_y_net_x0,
      we => we1_op_net_x1,
      dout => reinterpret1_output_port_net_x7
    );

  din0: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d => reinterpret2_output_port_net_x7,
      q => din0_q_net
    );

  din1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d => din0_q_net,
      q => din1_q_net
    );

  dmux0: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dsync0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d(0) => delay0_q_net_x6,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d(0) => dsync2_q_net,
      q(0) => dsync1_q_net_x0
    );

  dsync2: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync2_q_net
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x6,
      d1(0) => logical1_y_net_x1,
      y(0) => logical1_y_net_x2
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d0 => reinterpret1_output_port_net_x10,
      d1 => din1_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x201,
      clk => clk_1_sg_x201,
      clr => '0',
      d0 => din1_q_net,
      d1 => reinterpret1_output_port_net_x10,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x3,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_c5145c3b33: entity work.sync_delay_entity_c5145c3b33
    port map (
      ce_1 => ce_1_sg_x201,
      clk_1 => clk_1_sg_x201,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

  we0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we0_op_net_x1
    );

  we1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we1_op_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_300c77019d is
  port (
    in_x0: in std_logic_vector(3 downto 0); 
    out_x0: out std_logic_vector(3 downto 0)
  );
end bit_reverse_entity_300c77019d;

architecture structural of bit_reverse_entity_300c77019d is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(3 downto 0);
  signal slice_y_net_x0: std_logic_vector(3 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  concat: entity work.concat_a0c7cd7a34
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_f0699125c8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(3 downto 0); 
    add: out std_logic_vector(3 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_f0699125c8;

architecture structural of add_convert0_entity_f0699125c8 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(3 downto 0);
  signal ce_1_sg_x228: std_logic;
  signal clk_1_sg_x228: std_logic;
  signal concat_y_net: std_logic_vector(4 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(3 downto 0);
  signal delay13_q_net: std_logic_vector(3 downto 0);
  signal delay14_q_net: std_logic_vector(3 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(4 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(2 downto 0);
  signal new_add_y_net: std_logic_vector(3 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x228 <= ce_1;
  clk_1_sg_x228 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_8f12c32de0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 4,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 4,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_4f82bd00e5
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_4ca77626c8
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_cf540617d5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 2,
      x_width => 5,
      y_width => 3
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 5,
      y_width => 4
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 4,
      x_width => 5,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_73affe343c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(3 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_73affe343c;

architecture structural of add_convert1_entity_73affe343c is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(3 downto 0);
  signal ce_1_sg_x229: std_logic;
  signal clk_1_sg_x229: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(72 downto 0);
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(4 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x229 <= ce_1;
  clk_1_sg_x229 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x229,
      clk => clk_1_sg_x229,
      clr => '0',
      s => addsub5_s_net
    );

  delay1: entity work.delay_3ffe3e5660
    port map (
      ce => ce_1_sg_x229,
      clk => clk_1_sg_x229,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x229,
      clk => clk_1_sg_x229,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_cf540617d5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 4,
      x_width => 5,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_e4b1c02094 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(3 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_e4b1c02094;

architecture structural of cosin_entity_e4b1c02094 is
  signal assert_dout_net_x1: std_logic_vector(3 downto 0);
  signal ce_1_sg_x232: std_logic;
  signal clk_1_sg_x232: std_logic;
  signal concat_y_net_x1: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(3 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x232 <= ce_1;
  clk_1_sg_x232 <= clk_1;
  concatenate_y_net_x2 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_f0699125c8: entity work.add_convert0_entity_f0699125c8
    port map (
      ce_1 => ce_1_sg_x232,
      clk_1 => clk_1_sg_x232,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_73affe343c: entity work.add_convert1_entity_73affe343c
    port map (
      ce_1 => ce_1_sg_x232,
      clk_1 => clk_1_sg_x232,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 4,
      dout_width => 4
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_54f670a6af: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x232,
      clk => clk_1_sg_x232,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x232,
      clk => clk_1_sg_x232,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x232,
      clk => clk_1_sg_x232,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_1290b23d21: entity work.invert0_entity_bffa0fbbf2
    port map (
      ce_1 => ce_1_sg_x232,
      clk_1 => clk_1_sg_x232,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_6c271ea1db: entity work.invert1_entity_7db6e4373c
    port map (
      ce_1 => ce_1_sg_x232,
      clk_1 => clk_1_sg_x232,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 4,
      c_width => 36,
      core_name0 => "bmg_72_eaf53c5f13361cdc",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x232,
      clk => clk_1_sg_x232,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_84e6e74f3d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_84e6e74f3d;

architecture structural of coeff_gen_entity_84e6e74f3d is
  signal ce_1_sg_x233: std_logic;
  signal clk_1_sg_x233: std_logic;
  signal concat_y_net_x1: std_logic_vector(3 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(3 downto 0);

begin
  ce_1_sg_x233 <= ce_1;
  clk_1_sg_x233 <= clk_1;
  concatenate_y_net_x3 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  bit_reverse_300c77019d: entity work.bit_reverse_entity_300c77019d
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_e4b1c02094: entity work.cosin_entity_e4b1c02094
    port map (
      ce_1 => ce_1_sg_x233,
      clk_1 => clk_1_sg_x233,
      misci => concatenate_y_net_x3,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_f979a97db6
    port map (
      ce => ce_1_sg_x233,
      clk => clk_1_sg_x233,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_b5daf99338: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 7,
      x_width => 8,
      y_width => 4
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/butterfly_direct/twiddle"

entity twiddle_entity_be541281bb is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_be541281bb;

architecture structural of twiddle_entity_be541281bb is
  signal ce_1_sg_x234: std_logic;
  signal clk_1_sg_x234: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x234 <= ce_1;
  clk_1_sg_x234 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_4dccfed838: entity work.bus_convert_entity_d16c506498
    port map (
      ce_1 => ce_1_sg_x234,
      clk_1 => clk_1_sg_x234,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_1fd802aec2: entity work.bus_create_entity_be2599d89f
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_6015c7afa5: entity work.bus_expand1_entity_d3e88f3964
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_c0788c4368: entity work.bus_expand_entity_80976a8778
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_f2cdc137bb: entity work.bus_mult_entity_99e641fc1a
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x234,
      clk_1 => clk_1_sg_x234,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_84e6e74f3d: entity work.coeff_gen_entity_84e6e74f3d
    port map (
      ce_1 => ce_1_sg_x234,
      clk_1 => clk_1_sg_x234,
      misci => concatenate_y_net_x3,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/butterfly_direct"

entity butterfly_direct_entity_14c976f46c is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_14c976f46c;

architecture structural of butterfly_direct_entity_14c976f46c is
  signal ce_1_sg_x235: std_logic;
  signal clk_1_sg_x235: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x4 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x235 <= ce_1;
  clk_1_sg_x235 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x5;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x6;
  sync_out <= delay0_q_net_x0;

  bus_add_a141a3521a: entity work.bus_add_entity_6a0ce06054
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x235,
      clk_1 => clk_1_sg_x235,
      dout => concatenate_y_net_x3
    );

  bus_convert_f472b1816e: entity work.bus_convert_entity_5667cece5a
    port map (
      ce_1 => ce_1_sg_x235,
      clk_1 => clk_1_sg_x235,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_14b18da105: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_fa2565cc75: entity work.bus_norm0_entity_f230e61519
    port map (
      ce_1 => ce_1_sg_x235,
      clk_1 => clk_1_sg_x235,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_5bbefdd91d: entity work.bus_norm1_entity_21ef0b3243
    port map (
      ce_1 => ce_1_sg_x235,
      clk_1 => clk_1_sg_x235,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_9a228bcc68: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x6
    );

  bus_scale_3081001095: entity work.bus_scale_entity_0129abca9b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_4f57619257: entity work.bus_sub_entity_edf18c6fe0
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x235,
      clk_1 => clk_1_sg_x235,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x235,
      clk => clk_1_sg_x235,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_9e94fed5c3: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_6ebb494018: entity work.mux_entity_164cb2e572
    port map (
      ce_1 => ce_1_sg_x235,
      clk_1 => clk_1_sg_x235,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_22a3e432fa: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x235,
      clk_1 => clk_1_sg_x235,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_be541281bb: entity work.twiddle_entity_be541281bb
    port map (
      ai => reinterpret1_output_port_net_x4,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x235,
      clk_1 => clk_1_sg_x235,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/delay0/rep_addr/bussify"

entity bussify_entity_a4b4979f40 is
  port (
    in1: in std_logic_vector(3 downto 0); 
    bus_out: out std_logic_vector(3 downto 0)
  );
end bussify_entity_a4b4979f40;

architecture structural of bussify_entity_a4b4979f40 is
  signal din0_0_q_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(3 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/delay0/rep_addr"

entity rep_addr_entity_d90660300f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(3 downto 0); 
    out_x0: out std_logic_vector(3 downto 0)
  );
end rep_addr_entity_d90660300f;

architecture structural of rep_addr_entity_d90660300f is
  signal addr0_op_net_x0: std_logic_vector(3 downto 0);
  signal ce_1_sg_x236: std_logic;
  signal clk_1_sg_x236: std_logic;
  signal din0_0_q_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(3 downto 0);

begin
  ce_1_sg_x236 <= ce_1;
  clk_1_sg_x236 <= clk_1;
  addr0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_a4b4979f40: entity work.bussify_entity_a4b4979f40
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 4
    )
    port map (
      ce => ce_1_sg_x236,
      clk => clk_1_sg_x236,
      d => addr0_op_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/delay0"

entity delay0_entity_4feadad951 is
  port (
    addr: in std_logic_vector(3 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_4feadad951;

architecture structural of delay0_entity_4feadad951 is
  signal addr0_op_net_x1: std_logic_vector(3 downto 0);
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x238: std_logic;
  signal clk_1_sg_x238: std_logic;
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal we0_op_net_x1: std_logic;

begin
  addr0_op_net_x1 <= addr;
  ce_1_sg_x238 <= ce_1;
  clk_1_sg_x238 <= clk_1;
  reinterpret1_output_port_net_x9 <= din;
  we0_op_net_x1 <= we;
  dout <= reinterpret1_output_port_net_x10;

  bram0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 4,
      c_width => 36,
      core_name0 => "bmg_72_60b34418964c6fd5",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      data_in => reinterpret1_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  ddin: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => ddin_q_net_x0
    );

  debus_addr_c6869e9e48: entity work.a_debus_entity_6a37884c38
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_din_909ff05219: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => ddin_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  debus_we_1849121b72: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  din_bussify_2c2c096d6c: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => bram0_data_out_net_x0,
      bus_out => reinterpret1_output_port_net_x10
    );

  rep_addr_d90660300f: entity work.rep_addr_entity_d90660300f
    port map (
      ce_1 => ce_1_sg_x238,
      clk_1 => clk_1_sg_x238,
      in_x0 => addr0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  rep_we_e200447672: entity work.rep_we_entity_d654f5a305
    port map (
      ce_1 => ce_1_sg_x238,
      clk_1 => clk_1_sg_x238,
      in_x0 => we0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5/sync_delay"

entity sync_delay_entity_7501f87df2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_7501f87df2;

architecture structural of sync_delay_entity_7501f87df2 is
  signal ce_1_sg_x242: std_logic;
  signal clk_1_sg_x242: std_logic;
  signal constant1_op_net: std_logic_vector(4 downto 0);
  signal constant2_op_net: std_logic_vector(4 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(4 downto 0);
  signal counter_op_net: std_logic_vector(4 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x242 <= ce_1;
  clk_1_sg_x242 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_fe72737ca0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_ef0e2e5fc6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_582a3706dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_9cc231de7950d305",
      op_arith => xlUnsigned,
      op_width => 5
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_9ece3c8c4e
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_dc5bc996c9
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_5"

entity fft_stage_5_entity_a6b30fa038 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_5_entity_a6b30fa038;

architecture structural of fft_stage_5_entity_a6b30fa038 is
  signal addr0_op_net_x1: std_logic_vector(3 downto 0);
  signal addr1_op_net_x1: std_logic_vector(3 downto 0);
  signal ce_1_sg_x243: std_logic;
  signal clk_1_sg_x243: std_logic;
  signal counter_op_net: std_logic_vector(4 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay0_q_net_x3: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din1_q_net: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal dsync2_q_net: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reint1_output_port_net_x4: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;
  signal we0_op_net_x1: std_logic;
  signal we1_op_net_x1: std_logic;

begin
  ce_1_sg_x243 <= ce_1;
  clk_1_sg_x243 <= clk_1;
  reinterpret2_output_port_net_x3 <= in1;
  reinterpret1_output_port_net_x11 <= in2;
  logical1_y_net_x3 <= of_in;
  reint1_output_port_net_x4 <= shift;
  delay0_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x4;
  out2 <= reinterpret1_output_port_net_x8;
  sync_out <= delay0_q_net_x3;

  addr0: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_601fed0ddd9eff6a",
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr0_op_net_x1
    );

  addr1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_601fed0ddd9eff6a",
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr1_op_net_x1
    );

  butterfly_direct_14c976f46c: entity work.butterfly_direct_entity_14c976f46c
    port map (
      a => reinterpret1_output_port_net_x7,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x243,
      clk_1 => clk_1_sg_x243,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x8,
      a_bw_x0 => reinterpret2_output_port_net_x4,
      of_x0 => reinterpret1_output_port_net_x6,
      sync_out => delay0_q_net_x3
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_479ebaa7cafdbad9",
      op_arith => xlUnsigned,
      op_width => 5
    )
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      en => "1",
      rst(0) => dsync2_q_net,
      op => counter_op_net
    );

  delay0_4feadad951: entity work.delay0_entity_4feadad951
    port map (
      addr => addr0_op_net_x1,
      ce_1 => ce_1_sg_x243,
      clk_1 => clk_1_sg_x243,
      din => reinterpret1_output_port_net_x11,
      we => we0_op_net_x1,
      dout => reinterpret1_output_port_net_x10
    );

  delay1_f4e539e1ff: entity work.delay0_entity_4feadad951
    port map (
      addr => addr1_op_net_x1,
      ce_1 => ce_1_sg_x243,
      clk_1 => clk_1_sg_x243,
      din => mux1_y_net_x0,
      we => we1_op_net_x1,
      dout => reinterpret1_output_port_net_x7
    );

  din0: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d => reinterpret2_output_port_net_x3,
      q => din0_q_net
    );

  din1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d => din0_q_net,
      q => din1_q_net
    );

  dmux0: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dsync0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d(0) => delay0_q_net_x2,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d(0) => dsync2_q_net,
      q(0) => dsync1_q_net_x0
    );

  dsync2: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync2_q_net
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x6,
      d1(0) => logical1_y_net_x3,
      y(0) => logical1_y_net_x0
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d0 => reinterpret1_output_port_net_x10,
      d1 => din1_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d0 => din1_q_net,
      d1 => reinterpret1_output_port_net_x10,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x4,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_7501f87df2: entity work.sync_delay_entity_7501f87df2
    port map (
      ce_1 => ce_1_sg_x243,
      clk_1 => clk_1_sg_x243,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

  we0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we0_op_net_x1
    );

  we1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we1_op_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_9f9d5075cd is
  port (
    in_x0: in std_logic_vector(4 downto 0); 
    out_x0: out std_logic_vector(4 downto 0)
  );
end bit_reverse_entity_9f9d5075cd;

architecture structural of bit_reverse_entity_9f9d5075cd is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(4 downto 0);
  signal slice_y_net_x0: std_logic_vector(4 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  concat: entity work.concat_2b3acb49f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_f2c6707f4c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(4 downto 0); 
    add: out std_logic_vector(4 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_f2c6707f4c;

architecture structural of add_convert0_entity_f2c6707f4c is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(4 downto 0);
  signal ce_1_sg_x270: std_logic;
  signal clk_1_sg_x270: std_logic;
  signal concat_y_net: std_logic_vector(5 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(4 downto 0);
  signal delay13_q_net: std_logic_vector(4 downto 0);
  signal delay14_q_net: std_logic_vector(4 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(5 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(3 downto 0);
  signal new_add_y_net: std_logic_vector(4 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x270 <= ce_1;
  clk_1_sg_x270 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x270,
      clk => clk_1_sg_x270,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_ae3f02567e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 5,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 5,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x270,
      clk => clk_1_sg_x270,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_38f665f8aa
    port map (
      ce => ce_1_sg_x270,
      clk => clk_1_sg_x270,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_b096bcf164
    port map (
      ce => ce_1_sg_x270,
      clk => clk_1_sg_x270,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x270,
      clk => clk_1_sg_x270,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_ac785d9b37
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 6,
      y_width => 4
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 6,
      y_width => 5
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 5,
      x_width => 6,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_add300a92e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(4 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_add300a92e;

architecture structural of add_convert1_entity_add300a92e is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(4 downto 0);
  signal ce_1_sg_x271: std_logic;
  signal clk_1_sg_x271: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(72 downto 0);
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(5 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x271 <= ce_1;
  clk_1_sg_x271 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x271,
      clk => clk_1_sg_x271,
      clr => '0',
      s => addsub5_s_net
    );

  delay1: entity work.delay_3ffe3e5660
    port map (
      ce => ce_1_sg_x271,
      clk => clk_1_sg_x271,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x271,
      clk => clk_1_sg_x271,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_ac785d9b37
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 5,
      x_width => 6,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_7f7a290170 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(4 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_7f7a290170;

architecture structural of cosin_entity_7f7a290170 is
  signal assert_dout_net_x1: std_logic_vector(4 downto 0);
  signal ce_1_sg_x274: std_logic;
  signal clk_1_sg_x274: std_logic;
  signal concat_y_net_x1: std_logic_vector(4 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(4 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x274 <= ce_1;
  clk_1_sg_x274 <= clk_1;
  concatenate_y_net_x2 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_f2c6707f4c: entity work.add_convert0_entity_f2c6707f4c
    port map (
      ce_1 => ce_1_sg_x274,
      clk_1 => clk_1_sg_x274,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_add300a92e: entity work.add_convert1_entity_add300a92e
    port map (
      ce_1 => ce_1_sg_x274,
      clk_1 => clk_1_sg_x274,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 5,
      dout_width => 5
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_5e52758432: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x274,
      clk => clk_1_sg_x274,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x274,
      clk => clk_1_sg_x274,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x274,
      clk => clk_1_sg_x274,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_b2e3bc22c4: entity work.invert0_entity_bffa0fbbf2
    port map (
      ce_1 => ce_1_sg_x274,
      clk_1 => clk_1_sg_x274,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_51c2f32aaf: entity work.invert1_entity_7db6e4373c
    port map (
      ce_1 => ce_1_sg_x274,
      clk_1 => clk_1_sg_x274,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 5,
      c_width => 36,
      core_name0 => "bmg_72_5aa6ffbd97b0a029",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x274,
      clk => clk_1_sg_x274,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_27320ee008 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_27320ee008;

architecture structural of coeff_gen_entity_27320ee008 is
  signal ce_1_sg_x275: std_logic;
  signal clk_1_sg_x275: std_logic;
  signal concat_y_net_x1: std_logic_vector(4 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(4 downto 0);

begin
  ce_1_sg_x275 <= ce_1;
  clk_1_sg_x275 <= clk_1;
  concatenate_y_net_x3 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  bit_reverse_9f9d5075cd: entity work.bit_reverse_entity_9f9d5075cd
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_7f7a290170: entity work.cosin_entity_7f7a290170
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      misci => concatenate_y_net_x3,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_f979a97db6
    port map (
      ce => ce_1_sg_x275,
      clk => clk_1_sg_x275,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_39f763f667: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 7,
      x_width => 8,
      y_width => 5
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/butterfly_direct/twiddle"

entity twiddle_entity_910482d041 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_910482d041;

architecture structural of twiddle_entity_910482d041 is
  signal ce_1_sg_x276: std_logic;
  signal clk_1_sg_x276: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x276 <= ce_1;
  clk_1_sg_x276 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_c67063cee6: entity work.bus_convert_entity_d16c506498
    port map (
      ce_1 => ce_1_sg_x276,
      clk_1 => clk_1_sg_x276,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_dd9ae500a3: entity work.bus_create_entity_be2599d89f
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_660aeda61c: entity work.bus_expand1_entity_d3e88f3964
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_31c5983fe4: entity work.bus_expand_entity_80976a8778
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_4d71fdb6ac: entity work.bus_mult_entity_99e641fc1a
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x276,
      clk_1 => clk_1_sg_x276,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_27320ee008: entity work.coeff_gen_entity_27320ee008
    port map (
      ce_1 => ce_1_sg_x276,
      clk_1 => clk_1_sg_x276,
      misci => concatenate_y_net_x3,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/butterfly_direct"

entity butterfly_direct_entity_10b466e99f is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_10b466e99f;

architecture structural of butterfly_direct_entity_10b466e99f is
  signal ce_1_sg_x277: std_logic;
  signal clk_1_sg_x277: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x4 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x277 <= ce_1;
  clk_1_sg_x277 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x5;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x6;
  sync_out <= delay0_q_net_x0;

  bus_add_7bde73bf63: entity work.bus_add_entity_6a0ce06054
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x277,
      clk_1 => clk_1_sg_x277,
      dout => concatenate_y_net_x3
    );

  bus_convert_cb228a1406: entity work.bus_convert_entity_5667cece5a
    port map (
      ce_1 => ce_1_sg_x277,
      clk_1 => clk_1_sg_x277,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_f629203da2: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_ca78e39546: entity work.bus_norm0_entity_f230e61519
    port map (
      ce_1 => ce_1_sg_x277,
      clk_1 => clk_1_sg_x277,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_d75a1b6ab2: entity work.bus_norm1_entity_21ef0b3243
    port map (
      ce_1 => ce_1_sg_x277,
      clk_1 => clk_1_sg_x277,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_7935a698ea: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x6
    );

  bus_scale_2576ecf4e8: entity work.bus_scale_entity_0129abca9b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_d42c50e13d: entity work.bus_sub_entity_edf18c6fe0
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x277,
      clk_1 => clk_1_sg_x277,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_53096fb9eb: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_deef7a1f75: entity work.mux_entity_164cb2e572
    port map (
      ce_1 => ce_1_sg_x277,
      clk_1 => clk_1_sg_x277,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_f9bbf2b797: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x277,
      clk_1 => clk_1_sg_x277,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_910482d041: entity work.twiddle_entity_910482d041
    port map (
      ai => reinterpret1_output_port_net_x4,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x277,
      clk_1 => clk_1_sg_x277,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/delay0/debus_addr"

entity debus_addr_entity_210b93ea07 is
  port (
    bus_in: in std_logic_vector(2 downto 0); 
    msb_lsb_out1: out std_logic_vector(2 downto 0)
  );
end debus_addr_entity_210b93ea07;

architecture structural of debus_addr_entity_210b93ea07 is
  signal reinterpret1_output_port_net_x1: std_logic_vector(2 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(2 downto 0);
  signal slice1_y_net: std_logic_vector(2 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_c4fa12acb5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 2,
      x_width => 3,
      y_width => 3
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/delay0/rep_addr/bussify"

entity bussify_entity_2091592d66 is
  port (
    in1: in std_logic_vector(2 downto 0); 
    bus_out: out std_logic_vector(2 downto 0)
  );
end bussify_entity_2091592d66;

architecture structural of bussify_entity_2091592d66 is
  signal din0_0_q_net_x0: std_logic_vector(2 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(2 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_c4fa12acb5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/delay0/rep_addr"

entity rep_addr_entity_c6f734f44c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(2 downto 0); 
    out_x0: out std_logic_vector(2 downto 0)
  );
end rep_addr_entity_c6f734f44c;

architecture structural of rep_addr_entity_c6f734f44c is
  signal addr0_op_net_x0: std_logic_vector(2 downto 0);
  signal ce_1_sg_x278: std_logic;
  signal clk_1_sg_x278: std_logic;
  signal din0_0_q_net_x0: std_logic_vector(2 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(2 downto 0);

begin
  ce_1_sg_x278 <= ce_1;
  clk_1_sg_x278 <= clk_1;
  addr0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_2091592d66: entity work.bussify_entity_2091592d66
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      d => addr0_op_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/delay0"

entity delay0_entity_c37097b93b is
  port (
    addr: in std_logic_vector(2 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_c37097b93b;

architecture structural of delay0_entity_c37097b93b is
  signal addr0_op_net_x1: std_logic_vector(2 downto 0);
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x280: std_logic;
  signal clk_1_sg_x280: std_logic;
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(2 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(2 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal we0_op_net_x1: std_logic;

begin
  addr0_op_net_x1 <= addr;
  ce_1_sg_x280 <= ce_1;
  clk_1_sg_x280 <= clk_1;
  reinterpret1_output_port_net_x9 <= din;
  we0_op_net_x1 <= we;
  dout <= reinterpret1_output_port_net_x10;

  bram0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 3,
      c_width => 36,
      core_name0 => "bmg_72_648cfb7b6fc9d60b",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x280,
      clk => clk_1_sg_x280,
      data_in => reinterpret1_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  ddin: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x280,
      clk => clk_1_sg_x280,
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => ddin_q_net_x0
    );

  debus_addr_210b93ea07: entity work.debus_addr_entity_210b93ea07
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_din_5b71c94d83: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => ddin_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  debus_we_002d804b70: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  din_bussify_ca11bcedba: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => bram0_data_out_net_x0,
      bus_out => reinterpret1_output_port_net_x10
    );

  rep_addr_c6f734f44c: entity work.rep_addr_entity_c6f734f44c
    port map (
      ce_1 => ce_1_sg_x280,
      clk_1 => clk_1_sg_x280,
      in_x0 => addr0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  rep_we_125cbf6a11: entity work.rep_we_entity_d654f5a305
    port map (
      ce_1 => ce_1_sg_x280,
      clk_1 => clk_1_sg_x280,
      in_x0 => we0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6/sync_delay"

entity sync_delay_entity_2ec45f70d1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_2ec45f70d1;

architecture structural of sync_delay_entity_2ec45f70d1 is
  signal ce_1_sg_x284: std_logic;
  signal clk_1_sg_x284: std_logic;
  signal constant1_op_net: std_logic_vector(3 downto 0);
  signal constant2_op_net: std_logic_vector(3 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(3 downto 0);
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x284 <= ce_1;
  clk_1_sg_x284 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_145086465d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_67ad97ca70
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_38515b972a28063c",
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x284,
      clk => clk_1_sg_x284,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_4d3cfceaf4
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_d930162434
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_6"

entity fft_stage_6_entity_e9d7569f38 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_6_entity_e9d7569f38;

architecture structural of fft_stage_6_entity_e9d7569f38 is
  signal addr0_op_net_x1: std_logic_vector(2 downto 0);
  signal addr1_op_net_x1: std_logic_vector(2 downto 0);
  signal ce_1_sg_x285: std_logic;
  signal clk_1_sg_x285: std_logic;
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal delay0_q_net_x4: std_logic;
  signal delay0_q_net_x5: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din1_q_net: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal dsync2_q_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reint1_output_port_net_x5: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;
  signal we0_op_net_x1: std_logic;
  signal we1_op_net_x1: std_logic;

begin
  ce_1_sg_x285 <= ce_1;
  clk_1_sg_x285 <= clk_1;
  reinterpret2_output_port_net_x5 <= in1;
  reinterpret1_output_port_net_x11 <= in2;
  logical1_y_net_x1 <= of_in;
  reint1_output_port_net_x5 <= shift;
  delay0_q_net_x4 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x6;
  out2 <= reinterpret1_output_port_net_x8;
  sync_out <= delay0_q_net_x5;

  addr0: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_7cc6334313a1dd18",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr0_op_net_x1
    );

  addr1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_7cc6334313a1dd18",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr1_op_net_x1
    );

  butterfly_direct_10b466e99f: entity work.butterfly_direct_entity_10b466e99f
    port map (
      a => reinterpret1_output_port_net_x7,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x285,
      clk_1 => clk_1_sg_x285,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x8,
      a_bw_x0 => reinterpret2_output_port_net_x6,
      of_x0 => reinterpret1_output_port_net_x6,
      sync_out => delay0_q_net_x5
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_601fed0ddd9eff6a",
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      en => "1",
      rst(0) => dsync2_q_net,
      op => counter_op_net
    );

  delay0_c37097b93b: entity work.delay0_entity_c37097b93b
    port map (
      addr => addr0_op_net_x1,
      ce_1 => ce_1_sg_x285,
      clk_1 => clk_1_sg_x285,
      din => reinterpret1_output_port_net_x11,
      we => we0_op_net_x1,
      dout => reinterpret1_output_port_net_x10
    );

  delay1_7baa22a745: entity work.delay0_entity_c37097b93b
    port map (
      addr => addr1_op_net_x1,
      ce_1 => ce_1_sg_x285,
      clk_1 => clk_1_sg_x285,
      din => mux1_y_net_x0,
      we => we1_op_net_x1,
      dout => reinterpret1_output_port_net_x7
    );

  din0: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d => reinterpret2_output_port_net_x5,
      q => din0_q_net
    );

  din1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d => din0_q_net,
      q => din1_q_net
    );

  dmux0: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dsync0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d(0) => delay0_q_net_x4,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d(0) => dsync2_q_net,
      q(0) => dsync1_q_net_x0
    );

  dsync2: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync2_q_net
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x6,
      d1(0) => logical1_y_net_x1,
      y(0) => logical1_y_net_x2
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d0 => reinterpret1_output_port_net_x10,
      d1 => din1_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x285,
      clk => clk_1_sg_x285,
      clr => '0',
      d0 => din1_q_net,
      d1 => reinterpret1_output_port_net_x10,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x5,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_2ec45f70d1: entity work.sync_delay_entity_2ec45f70d1
    port map (
      ce_1 => ce_1_sg_x285,
      clk_1 => clk_1_sg_x285,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

  we0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we0_op_net_x1
    );

  we1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we1_op_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_7799c9b07c is
  port (
    in_x0: in std_logic_vector(5 downto 0); 
    out_x0: out std_logic_vector(5 downto 0)
  );
end bit_reverse_entity_7799c9b07c;

architecture structural of bit_reverse_entity_7799c9b07c is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal bit5_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(5 downto 0);
  signal slice_y_net_x0: std_logic_vector(5 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  bit5: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit5_y_net
    );

  concat: entity work.concat_2dc093ca7a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      in5(0) => bit5_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_742c33e486 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(5 downto 0); 
    add: out std_logic_vector(5 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_742c33e486;

architecture structural of add_convert0_entity_742c33e486 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(5 downto 0);
  signal ce_1_sg_x312: std_logic;
  signal clk_1_sg_x312: std_logic;
  signal concat_y_net: std_logic_vector(6 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(5 downto 0);
  signal delay13_q_net: std_logic_vector(5 downto 0);
  signal delay14_q_net: std_logic_vector(5 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(6 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(4 downto 0);
  signal new_add_y_net: std_logic_vector(5 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x312 <= ce_1;
  clk_1_sg_x312 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_75261c7c53
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 6,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 6,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_da3bb0b159
    port map (
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_0b18d34058
    port map (
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_c6a9b6687e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 7,
      y_width => 5
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 7,
      y_width => 6
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 6,
      x_width => 7,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_49975de6d6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(5 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_49975de6d6;

architecture structural of add_convert1_entity_49975de6d6 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(5 downto 0);
  signal ce_1_sg_x313: std_logic;
  signal clk_1_sg_x313: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(72 downto 0);
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(6 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x313 <= ce_1;
  clk_1_sg_x313 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x313,
      clk => clk_1_sg_x313,
      clr => '0',
      s => addsub5_s_net
    );

  delay1: entity work.delay_3ffe3e5660
    port map (
      ce => ce_1_sg_x313,
      clk => clk_1_sg_x313,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x313,
      clk => clk_1_sg_x313,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_c6a9b6687e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 6,
      x_width => 7,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_71cfdc8b5a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(5 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_71cfdc8b5a;

architecture structural of cosin_entity_71cfdc8b5a is
  signal assert_dout_net_x1: std_logic_vector(5 downto 0);
  signal ce_1_sg_x316: std_logic;
  signal clk_1_sg_x316: std_logic;
  signal concat_y_net_x1: std_logic_vector(5 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(5 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x316 <= ce_1;
  clk_1_sg_x316 <= clk_1;
  concatenate_y_net_x2 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_742c33e486: entity work.add_convert0_entity_742c33e486
    port map (
      ce_1 => ce_1_sg_x316,
      clk_1 => clk_1_sg_x316,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_49975de6d6: entity work.add_convert1_entity_49975de6d6
    port map (
      ce_1 => ce_1_sg_x316,
      clk_1 => clk_1_sg_x316,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 6,
      dout_width => 6
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_8a87c09bbb: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x316,
      clk => clk_1_sg_x316,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x316,
      clk => clk_1_sg_x316,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x316,
      clk => clk_1_sg_x316,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_4481a9ef4c: entity work.invert0_entity_bffa0fbbf2
    port map (
      ce_1 => ce_1_sg_x316,
      clk_1 => clk_1_sg_x316,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_7f8924c505: entity work.invert1_entity_7db6e4373c
    port map (
      ce_1 => ce_1_sg_x316,
      clk_1 => clk_1_sg_x316,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_f17ff8bc64ca31f6",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x316,
      clk => clk_1_sg_x316,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_7221d7d8bf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_7221d7d8bf;

architecture structural of coeff_gen_entity_7221d7d8bf is
  signal ce_1_sg_x317: std_logic;
  signal clk_1_sg_x317: std_logic;
  signal concat_y_net_x1: std_logic_vector(5 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(5 downto 0);

begin
  ce_1_sg_x317 <= ce_1;
  clk_1_sg_x317 <= clk_1;
  concatenate_y_net_x3 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  bit_reverse_7799c9b07c: entity work.bit_reverse_entity_7799c9b07c
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_71cfdc8b5a: entity work.cosin_entity_71cfdc8b5a
    port map (
      ce_1 => ce_1_sg_x317,
      clk_1 => clk_1_sg_x317,
      misci => concatenate_y_net_x3,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_f979a97db6
    port map (
      ce => ce_1_sg_x317,
      clk => clk_1_sg_x317,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_141b0e43a7: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 7,
      x_width => 8,
      y_width => 6
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/butterfly_direct/twiddle"

entity twiddle_entity_f49445a934 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_f49445a934;

architecture structural of twiddle_entity_f49445a934 is
  signal ce_1_sg_x318: std_logic;
  signal clk_1_sg_x318: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x318 <= ce_1;
  clk_1_sg_x318 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_e16f1760bb: entity work.bus_convert_entity_d16c506498
    port map (
      ce_1 => ce_1_sg_x318,
      clk_1 => clk_1_sg_x318,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_b927ecb03a: entity work.bus_create_entity_be2599d89f
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_3638f3ffa0: entity work.bus_expand1_entity_d3e88f3964
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_b47294af30: entity work.bus_expand_entity_80976a8778
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_d551f7be17: entity work.bus_mult_entity_99e641fc1a
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x318,
      clk_1 => clk_1_sg_x318,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_7221d7d8bf: entity work.coeff_gen_entity_7221d7d8bf
    port map (
      ce_1 => ce_1_sg_x318,
      clk_1 => clk_1_sg_x318,
      misci => concatenate_y_net_x3,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/butterfly_direct"

entity butterfly_direct_entity_14168ecef8 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_14168ecef8;

architecture structural of butterfly_direct_entity_14168ecef8 is
  signal ce_1_sg_x319: std_logic;
  signal clk_1_sg_x319: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x4 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x319 <= ce_1;
  clk_1_sg_x319 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x5;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x6;
  sync_out <= delay0_q_net_x0;

  bus_add_7d60354d5d: entity work.bus_add_entity_6a0ce06054
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x319,
      clk_1 => clk_1_sg_x319,
      dout => concatenate_y_net_x3
    );

  bus_convert_fe42c4c796: entity work.bus_convert_entity_5667cece5a
    port map (
      ce_1 => ce_1_sg_x319,
      clk_1 => clk_1_sg_x319,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_317bed0817: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_44938a7dc3: entity work.bus_norm0_entity_f230e61519
    port map (
      ce_1 => ce_1_sg_x319,
      clk_1 => clk_1_sg_x319,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_821f33798e: entity work.bus_norm1_entity_21ef0b3243
    port map (
      ce_1 => ce_1_sg_x319,
      clk_1 => clk_1_sg_x319,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_ba73741a9a: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x6
    );

  bus_scale_ec1a105946: entity work.bus_scale_entity_0129abca9b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_d63f8d234d: entity work.bus_sub_entity_edf18c6fe0
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x319,
      clk_1 => clk_1_sg_x319,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x319,
      clk => clk_1_sg_x319,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_c655a245f9: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_6ffd19d688: entity work.mux_entity_164cb2e572
    port map (
      ce_1 => ce_1_sg_x319,
      clk_1 => clk_1_sg_x319,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_2849bcdd7c: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x319,
      clk_1 => clk_1_sg_x319,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_f49445a934: entity work.twiddle_entity_f49445a934
    port map (
      ai => reinterpret1_output_port_net_x4,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x319,
      clk_1 => clk_1_sg_x319,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/delay0"

entity delay0_entity_235cabad55 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_235cabad55;

architecture structural of delay0_entity_235cabad55 is
  signal ce_1_sg_x320: std_logic;
  signal clk_1_sg_x320: std_logic;
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x320 <= ce_1;
  clk_1_sg_x320 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= reinterpret1_output_port_net_x2;

  del1: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x320,
      clk => clk_1_sg_x320,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del1_q_net_x0
    );

  din_expand_0a3a98be37: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => din2_q_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  dout_compress_ca015cb92e: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => del1_q_net_x0,
      bus_out => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7/sync_delay"

entity sync_delay_entity_4f23709b00 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_4f23709b00;

architecture structural of sync_delay_entity_4f23709b00 is
  signal ce_1_sg_x322: std_logic;
  signal clk_1_sg_x322: std_logic;
  signal constant1_op_net: std_logic_vector(2 downto 0);
  signal constant2_op_net: std_logic_vector(2 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(2 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x322 <= ce_1;
  clk_1_sg_x322 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_469094441c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a1c496ea88
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_ab6ac2cd2e5738fd",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x322,
      clk => clk_1_sg_x322,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_8fc7f5539b
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_47b317dab6
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_7"

entity fft_stage_7_entity_db28b77198 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_7_entity_db28b77198;

architecture structural of fft_stage_7_entity_db28b77198 is
  signal ce_1_sg_x323: std_logic;
  signal clk_1_sg_x323: std_logic;
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal delay0_q_net_x6: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reint1_output_port_net_x6: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x323 <= ce_1;
  clk_1_sg_x323 <= clk_1;
  reinterpret2_output_port_net_x7 <= in1;
  reinterpret1_output_port_net_x9 <= in2;
  logical1_y_net_x3 <= of_in;
  reint1_output_port_net_x6 <= shift;
  delay0_q_net_x6 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x2;
  out2 <= reinterpret1_output_port_net_x10;
  sync_out <= delay0_q_net_x1;

  butterfly_direct_14168ecef8: entity work.butterfly_direct_entity_14168ecef8
    port map (
      a => reinterpret1_output_port_net_x7,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x323,
      clk_1 => clk_1_sg_x323,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x10,
      a_bw_x0 => reinterpret2_output_port_net_x2,
      of_x0 => reinterpret1_output_port_net_x6,
      sync_out => delay0_q_net_x1
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_7cc6334313a1dd18",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x323,
      clk => clk_1_sg_x323,
      clr => '0',
      en => "1",
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_235cabad55: entity work.delay0_entity_235cabad55
    port map (
      ce_1 => ce_1_sg_x323,
      clk_1 => clk_1_sg_x323,
      din => din2_q_net_x1,
      dout => reinterpret1_output_port_net_x2
    );

  delay1_f5b592f6a2: entity work.delay0_entity_235cabad55
    port map (
      ce_1 => ce_1_sg_x323,
      clk_1 => clk_1_sg_x323,
      din => dmux1_q_net_x1,
      dout => reinterpret1_output_port_net_x7
    );

  din0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x7,
      q => din0_q_net
    );

  din2: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x6,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x323,
      clk => clk_1_sg_x323,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x323,
      clk => clk_1_sg_x323,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x6,
      d1(0) => logical1_y_net_x3,
      y(0) => logical1_y_net_x0
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x323,
      clk => clk_1_sg_x323,
      clr => '0',
      d0 => reinterpret1_output_port_net_x2,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x323,
      clk => clk_1_sg_x323,
      clr => '0',
      d0 => din0_q_net,
      d1 => reinterpret1_output_port_net_x2,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x6,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_4f23709b00: entity work.sync_delay_entity_4f23709b00
    port map (
      ce_1 => ce_1_sg_x323,
      clk_1 => clk_1_sg_x323,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_e6ba48763a is
  port (
    in_x0: in std_logic_vector(6 downto 0); 
    out_x0: out std_logic_vector(6 downto 0)
  );
end bit_reverse_entity_e6ba48763a;

architecture structural of bit_reverse_entity_e6ba48763a is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal bit5_y_net: std_logic;
  signal bit6_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(6 downto 0);
  signal slice_y_net_x0: std_logic_vector(6 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  bit5: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit5_y_net
    );

  bit6: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit6_y_net
    );

  concat: entity work.concat_eb5f1ca7f9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      in5(0) => bit5_y_net,
      in6(0) => bit6_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_e6c9e0ce03 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(6 downto 0); 
    add: out std_logic_vector(6 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_e6c9e0ce03;

architecture structural of add_convert0_entity_e6c9e0ce03 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(6 downto 0);
  signal ce_1_sg_x350: std_logic;
  signal clk_1_sg_x350: std_logic;
  signal concat_y_net: std_logic_vector(7 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(6 downto 0);
  signal delay13_q_net: std_logic_vector(6 downto 0);
  signal delay14_q_net: std_logic_vector(6 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(7 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(5 downto 0);
  signal new_add_y_net: std_logic_vector(6 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x350 <= ce_1;
  clk_1_sg_x350 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x350,
      clk => clk_1_sg_x350,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_dc245eb1d2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 7,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 7,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x350,
      clk => clk_1_sg_x350,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_8a9e828e57
    port map (
      ce => ce_1_sg_x350,
      clk => clk_1_sg_x350,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_9066adfc41
    port map (
      ce => ce_1_sg_x350,
      clk => clk_1_sg_x350,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x350,
      clk => clk_1_sg_x350,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 8,
      y_width => 6
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 7,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_063cf31348 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(6 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_063cf31348;

architecture structural of add_convert1_entity_063cf31348 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(6 downto 0);
  signal ce_1_sg_x351: std_logic;
  signal clk_1_sg_x351: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(72 downto 0);
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(7 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x351 <= ce_1;
  clk_1_sg_x351 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x351,
      clk => clk_1_sg_x351,
      clr => '0',
      s => addsub5_s_net
    );

  delay1: entity work.delay_3ffe3e5660
    port map (
      ce => ce_1_sg_x351,
      clk => clk_1_sg_x351,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x351,
      clk => clk_1_sg_x351,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 7,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_faeb28dcfe is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(6 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_faeb28dcfe;

architecture structural of cosin_entity_faeb28dcfe is
  signal assert_dout_net_x1: std_logic_vector(6 downto 0);
  signal ce_1_sg_x354: std_logic;
  signal clk_1_sg_x354: std_logic;
  signal concat_y_net_x1: std_logic_vector(6 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(6 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x354 <= ce_1;
  clk_1_sg_x354 <= clk_1;
  concatenate_y_net_x2 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_e6c9e0ce03: entity work.add_convert0_entity_e6c9e0ce03
    port map (
      ce_1 => ce_1_sg_x354,
      clk_1 => clk_1_sg_x354,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_063cf31348: entity work.add_convert1_entity_063cf31348
    port map (
      ce_1 => ce_1_sg_x354,
      clk_1 => clk_1_sg_x354,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 7,
      dout_width => 7
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_9f629575a4: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x354,
      clk => clk_1_sg_x354,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x354,
      clk => clk_1_sg_x354,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x354,
      clk => clk_1_sg_x354,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_43b4145ab6: entity work.invert0_entity_bffa0fbbf2
    port map (
      ce_1 => ce_1_sg_x354,
      clk_1 => clk_1_sg_x354,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_803a5048da: entity work.invert1_entity_7db6e4373c
    port map (
      ce_1 => ce_1_sg_x354,
      clk_1 => clk_1_sg_x354,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 7,
      c_width => 36,
      core_name0 => "bmg_72_0201af75eef6e019",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x354,
      clk => clk_1_sg_x354,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_ec7f4bebaa is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_ec7f4bebaa;

architecture structural of coeff_gen_entity_ec7f4bebaa is
  signal ce_1_sg_x355: std_logic;
  signal clk_1_sg_x355: std_logic;
  signal concat_y_net_x1: std_logic_vector(6 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(6 downto 0);

begin
  ce_1_sg_x355 <= ce_1;
  clk_1_sg_x355 <= clk_1;
  concatenate_y_net_x3 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  bit_reverse_e6ba48763a: entity work.bit_reverse_entity_e6ba48763a
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_faeb28dcfe: entity work.cosin_entity_faeb28dcfe
    port map (
      ce_1 => ce_1_sg_x355,
      clk_1 => clk_1_sg_x355,
      misci => concatenate_y_net_x3,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_f979a97db6
    port map (
      ce => ce_1_sg_x355,
      clk => clk_1_sg_x355,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_eab2c293ff: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 7,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/butterfly_direct/twiddle"

entity twiddle_entity_04eb971662 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_04eb971662;

architecture structural of twiddle_entity_04eb971662 is
  signal ce_1_sg_x356: std_logic;
  signal clk_1_sg_x356: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x356 <= ce_1;
  clk_1_sg_x356 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_c6cd952268: entity work.bus_convert_entity_d16c506498
    port map (
      ce_1 => ce_1_sg_x356,
      clk_1 => clk_1_sg_x356,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_15ec5e9e18: entity work.bus_create_entity_be2599d89f
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_95132d6017: entity work.bus_expand1_entity_d3e88f3964
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_c9808c374f: entity work.bus_expand_entity_80976a8778
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_5b1cfb9b66: entity work.bus_mult_entity_99e641fc1a
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x356,
      clk_1 => clk_1_sg_x356,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_ec7f4bebaa: entity work.coeff_gen_entity_ec7f4bebaa
    port map (
      ce_1 => ce_1_sg_x356,
      clk_1 => clk_1_sg_x356,
      misci => concatenate_y_net_x3,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/butterfly_direct"

entity butterfly_direct_entity_8b4aa7551b is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_8b4aa7551b;

architecture structural of butterfly_direct_entity_8b4aa7551b is
  signal ce_1_sg_x357: std_logic;
  signal clk_1_sg_x357: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x4 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x357 <= ce_1;
  clk_1_sg_x357 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x5;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x6;
  sync_out <= delay0_q_net_x0;

  bus_add_765d918e52: entity work.bus_add_entity_6a0ce06054
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x357,
      clk_1 => clk_1_sg_x357,
      dout => concatenate_y_net_x3
    );

  bus_convert_98d60512fe: entity work.bus_convert_entity_5667cece5a
    port map (
      ce_1 => ce_1_sg_x357,
      clk_1 => clk_1_sg_x357,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_ac9c33524a: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_b122d01fbe: entity work.bus_norm0_entity_f230e61519
    port map (
      ce_1 => ce_1_sg_x357,
      clk_1 => clk_1_sg_x357,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_b5240b39e6: entity work.bus_norm1_entity_21ef0b3243
    port map (
      ce_1 => ce_1_sg_x357,
      clk_1 => clk_1_sg_x357,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_fffd3c2ce3: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x6
    );

  bus_scale_48730d49ee: entity work.bus_scale_entity_0129abca9b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_1a2b8c0802: entity work.bus_sub_entity_edf18c6fe0
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x357,
      clk_1 => clk_1_sg_x357,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x357,
      clk => clk_1_sg_x357,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_df29565a04: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_b329e794a0: entity work.mux_entity_164cb2e572
    port map (
      ce_1 => ce_1_sg_x357,
      clk_1 => clk_1_sg_x357,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_e0e832f137: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x357,
      clk_1 => clk_1_sg_x357,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_04eb971662: entity work.twiddle_entity_04eb971662
    port map (
      ai => reinterpret1_output_port_net_x4,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x357,
      clk_1 => clk_1_sg_x357,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/delay0"

entity delay0_entity_1fd45e7c06 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_1fd45e7c06;

architecture structural of delay0_entity_1fd45e7c06 is
  signal ce_1_sg_x358: std_logic;
  signal clk_1_sg_x358: std_logic;
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x358 <= ce_1;
  clk_1_sg_x358 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= reinterpret1_output_port_net_x2;

  del1: entity work.delay_38898c80c0
    port map (
      ce => ce_1_sg_x358,
      clk => clk_1_sg_x358,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del1_q_net_x0
    );

  din_expand_a0671d8546: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => din2_q_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  dout_compress_e43573b291: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => del1_q_net_x0,
      bus_out => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8/sync_delay"

entity sync_delay_entity_534f5f0987 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_534f5f0987;

architecture structural of sync_delay_entity_534f5f0987 is
  signal ce_1_sg_x360: std_logic;
  signal clk_1_sg_x360: std_logic;
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x360 <= ce_1;
  clk_1_sg_x360 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_e2c1b30fd6a18380",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x360,
      clk => clk_1_sg_x360,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f9928864ea
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_8"

entity fft_stage_8_entity_8a393a85bf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_8_entity_8a393a85bf;

architecture structural of fft_stage_8_entity_8a393a85bf is
  signal ce_1_sg_x361: std_logic;
  signal clk_1_sg_x361: std_logic;
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay0_q_net_x3: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reint1_output_port_net_x7: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x361 <= ce_1;
  clk_1_sg_x361 <= clk_1;
  reinterpret2_output_port_net_x3 <= in1;
  reinterpret1_output_port_net_x11 <= in2;
  logical1_y_net_x1 <= of_in;
  reint1_output_port_net_x7 <= shift;
  delay0_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x4;
  out2 <= reinterpret1_output_port_net_x8;
  sync_out <= delay0_q_net_x3;

  butterfly_direct_8b4aa7551b: entity work.butterfly_direct_entity_8b4aa7551b
    port map (
      a => reinterpret1_output_port_net_x7,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x361,
      clk_1 => clk_1_sg_x361,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x8,
      a_bw_x0 => reinterpret2_output_port_net_x4,
      of_x0 => reinterpret1_output_port_net_x6,
      sync_out => delay0_q_net_x3
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_5f22a153812a8bc9",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x361,
      clk => clk_1_sg_x361,
      clr => '0',
      en => "1",
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_1fd45e7c06: entity work.delay0_entity_1fd45e7c06
    port map (
      ce_1 => ce_1_sg_x361,
      clk_1 => clk_1_sg_x361,
      din => din2_q_net_x1,
      dout => reinterpret1_output_port_net_x2
    );

  delay1_87bb1fb550: entity work.delay0_entity_1fd45e7c06
    port map (
      ce_1 => ce_1_sg_x361,
      clk_1 => clk_1_sg_x361,
      din => dmux1_q_net_x1,
      dout => reinterpret1_output_port_net_x7
    );

  din0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x3,
      q => din0_q_net
    );

  din2: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x11,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x2,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x361,
      clk => clk_1_sg_x361,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x361,
      clk => clk_1_sg_x361,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x6,
      d1(0) => logical1_y_net_x1,
      y(0) => logical1_y_net_x2
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x361,
      clk => clk_1_sg_x361,
      clr => '0',
      d0 => reinterpret1_output_port_net_x2,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x361,
      clk => clk_1_sg_x361,
      clr => '0',
      d0 => din0_q_net,
      d1 => reinterpret1_output_port_net_x2,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x7,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_534f5f0987: entity work.sync_delay_entity_534f5f0987
    port map (
      ce_1 => ce_1_sg_x361,
      clk_1 => clk_1_sg_x361,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_abe4024644 is
  port (
    in_x0: in std_logic_vector(7 downto 0); 
    out_x0: out std_logic_vector(7 downto 0)
  );
end bit_reverse_entity_abe4024644;

architecture structural of bit_reverse_entity_abe4024644 is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal bit5_y_net: std_logic;
  signal bit6_y_net: std_logic;
  signal bit7_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(7 downto 0);
  signal slice_y_net_x0: std_logic_vector(7 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  bit5: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit5_y_net
    );

  bit6: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit6_y_net
    );

  bit7: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit7_y_net
    );

  concat: entity work.concat_7673b9b993
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      in5(0) => bit5_y_net,
      in6(0) => bit6_y_net,
      in7(0) => bit7_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_80bdc82036 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(7 downto 0); 
    add: out std_logic_vector(7 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_80bdc82036;

architecture structural of add_convert0_entity_80bdc82036 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(7 downto 0);
  signal ce_1_sg_x388: std_logic;
  signal clk_1_sg_x388: std_logic;
  signal concat_y_net: std_logic_vector(8 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(7 downto 0);
  signal delay13_q_net: std_logic_vector(7 downto 0);
  signal delay14_q_net: std_logic_vector(7 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(8 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(6 downto 0);
  signal new_add_y_net: std_logic_vector(7 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x388 <= ce_1;
  clk_1_sg_x388 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x388,
      clk => clk_1_sg_x388,
      clr => '0',
      s => addsub5_s_net
    );

  concat: entity work.concat_f62149b02a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 8,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x388,
      clk => clk_1_sg_x388,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_23f848c85b
    port map (
      ce => ce_1_sg_x388,
      clk => clk_1_sg_x388,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.delay_ebec135d8a
    port map (
      ce => ce_1_sg_x388,
      clk => clk_1_sg_x388,
      clr => '0',
      d => new_add_y_net,
      q => delay14_q_net
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x388,
      clk => clk_1_sg_x388,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_1ece14600f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 9,
      y_width => 7
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 9,
      y_width => 8
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 8,
      x_width => 9,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_fb6c3ca57d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(7 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_fb6c3ca57d;

architecture structural of add_convert1_entity_fb6c3ca57d is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(7 downto 0);
  signal ce_1_sg_x389: std_logic;
  signal clk_1_sg_x389: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(72 downto 0);
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(8 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x389 <= ce_1;
  clk_1_sg_x389 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.addsub_5e958c86e4
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x389,
      clk => clk_1_sg_x389,
      clr => '0',
      s => addsub5_s_net
    );

  delay1: entity work.delay_3ffe3e5660
    port map (
      ce => ce_1_sg_x389,
      clk => clk_1_sg_x389,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x389,
      clk => clk_1_sg_x389,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_1ece14600f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 8,
      x_width => 9,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_08df1f9618 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(7 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_08df1f9618;

architecture structural of cosin_entity_08df1f9618 is
  signal assert_dout_net_x1: std_logic_vector(7 downto 0);
  signal ce_1_sg_x392: std_logic;
  signal clk_1_sg_x392: std_logic;
  signal concat_y_net_x1: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(7 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x392 <= ce_1;
  clk_1_sg_x392 <= clk_1;
  concatenate_y_net_x2 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_80bdc82036: entity work.add_convert0_entity_80bdc82036
    port map (
      ce_1 => ce_1_sg_x392,
      clk_1 => clk_1_sg_x392,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_fb6c3ca57d: entity work.add_convert1_entity_fb6c3ca57d
    port map (
      ce_1 => ce_1_sg_x392,
      clk_1 => clk_1_sg_x392,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 8,
      dout_width => 8
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_b5726e2daf: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x392,
      clk => clk_1_sg_x392,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x392,
      clk => clk_1_sg_x392,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x392,
      clk => clk_1_sg_x392,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_3e20065795: entity work.invert0_entity_bffa0fbbf2
    port map (
      ce_1 => ce_1_sg_x392,
      clk_1 => clk_1_sg_x392,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_44684e56df: entity work.invert1_entity_7db6e4373c
    port map (
      ce_1 => ce_1_sg_x392,
      clk_1 => clk_1_sg_x392,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 8,
      c_width => 36,
      core_name0 => "bmg_72_8d0b8b9df2750ee8",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x392,
      clk => clk_1_sg_x392,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_71dc1950b7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_71dc1950b7;

architecture structural of coeff_gen_entity_71dc1950b7 is
  signal ce_1_sg_x393: std_logic;
  signal clk_1_sg_x393: std_logic;
  signal concat_y_net_x1: std_logic_vector(7 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x393 <= ce_1;
  clk_1_sg_x393 <= clk_1;
  concatenate_y_net_x3 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  bit_reverse_abe4024644: entity work.bit_reverse_entity_abe4024644
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_08df1f9618: entity work.cosin_entity_08df1f9618
    port map (
      ce_1 => ce_1_sg_x393,
      clk_1 => clk_1_sg_x393,
      misci => concatenate_y_net_x3,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_f979a97db6
    port map (
      ce => ce_1_sg_x393,
      clk => clk_1_sg_x393,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_daafc760bb: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 8,
      y_width => 8
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/butterfly_direct/twiddle"

entity twiddle_entity_a18327ab08 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_a18327ab08;

architecture structural of twiddle_entity_a18327ab08 is
  signal ce_1_sg_x394: std_logic;
  signal clk_1_sg_x394: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x394 <= ce_1;
  clk_1_sg_x394 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_b3b62ba4eb: entity work.bus_convert_entity_d16c506498
    port map (
      ce_1 => ce_1_sg_x394,
      clk_1 => clk_1_sg_x394,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_979764c531: entity work.bus_create_entity_be2599d89f
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_da0ea02f62: entity work.bus_expand1_entity_d3e88f3964
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_b5b89a66da: entity work.bus_expand_entity_80976a8778
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_4a065d1b70: entity work.bus_mult_entity_99e641fc1a
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x394,
      clk_1 => clk_1_sg_x394,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_71dc1950b7: entity work.coeff_gen_entity_71dc1950b7
    port map (
      ce_1 => ce_1_sg_x394,
      clk_1 => clk_1_sg_x394,
      misci => concatenate_y_net_x3,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/butterfly_direct"

entity butterfly_direct_entity_c2a5b3cff6 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_c2a5b3cff6;

architecture structural of butterfly_direct_entity_c2a5b3cff6 is
  signal ce_1_sg_x395: std_logic;
  signal clk_1_sg_x395: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x4 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x395 <= ce_1;
  clk_1_sg_x395 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x5;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= reinterpret1_output_port_net_x6;
  sync_out <= delay0_q_net_x0;

  bus_add_9932f116fa: entity work.bus_add_entity_6a0ce06054
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x395,
      clk_1 => clk_1_sg_x395,
      dout => concatenate_y_net_x3
    );

  bus_convert_a3a1a7e3b5: entity work.bus_convert_entity_5667cece5a
    port map (
      ce_1 => ce_1_sg_x395,
      clk_1 => clk_1_sg_x395,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_be0af5e074: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_dcd758fff1: entity work.bus_norm0_entity_f230e61519
    port map (
      ce_1 => ce_1_sg_x395,
      clk_1 => clk_1_sg_x395,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_37afad41f6: entity work.bus_norm1_entity_21ef0b3243
    port map (
      ce_1 => ce_1_sg_x395,
      clk_1 => clk_1_sg_x395,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_e7e640cc87: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x6
    );

  bus_scale_b5d1df5e37: entity work.bus_scale_entity_0129abca9b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_25345ef522: entity work.bus_sub_entity_edf18c6fe0
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x395,
      clk_1 => clk_1_sg_x395,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x395,
      clk => clk_1_sg_x395,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_5cf887fc5a: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_7828756e38: entity work.mux_entity_164cb2e572
    port map (
      ce_1 => ce_1_sg_x395,
      clk_1 => clk_1_sg_x395,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_84977f0728: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x395,
      clk_1 => clk_1_sg_x395,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_a18327ab08: entity work.twiddle_entity_a18327ab08
    port map (
      ai => reinterpret1_output_port_net_x4,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x395,
      clk_1 => clk_1_sg_x395,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/delay0"

entity delay0_entity_045569bfa6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end delay0_entity_045569bfa6;

architecture structural of delay0_entity_045569bfa6 is
  signal ce_1_sg_x396: std_logic;
  signal clk_1_sg_x396: std_logic;
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x396 <= ce_1;
  clk_1_sg_x396 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= reinterpret1_output_port_net_x2;

  del1: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x396,
      clk => clk_1_sg_x396,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del1_q_net_x0
    );

  din_expand_32da0bf1d4: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => din2_q_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  dout_compress_86e03a9d47: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => del1_q_net_x0,
      bus_out => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9/sync_delay"

entity sync_delay_entity_1ff029e688 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_1ff029e688;

architecture structural of sync_delay_entity_1ff029e688 is
  signal ce_1_sg_x398: std_logic;
  signal clk_1_sg_x398: std_logic;
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x398 <= ce_1;
  clk_1_sg_x398 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_e2c1b30fd6a18380",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x398,
      clk => clk_1_sg_x398,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f9928864ea
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core/fft_stage_9"

entity fft_stage_9_entity_87ee71c641 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_9_entity_87ee71c641;

architecture structural of fft_stage_9_entity_87ee71c641 is
  signal ce_1_sg_x399: std_logic;
  signal clk_1_sg_x399: std_logic;
  signal counter_op_net: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal delay0_q_net_x5: std_logic;
  signal din0_q_net: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(35 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(35 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(35 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal mux0_y_net: std_logic_vector(35 downto 0);
  signal mux1_y_net: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reint1_output_port_net_x8: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x399 <= ce_1;
  clk_1_sg_x399 <= clk_1;
  reinterpret2_output_port_net_x5 <= in1;
  reinterpret1_output_port_net_x9 <= in2;
  logical1_y_net_x3 <= of_in;
  reint1_output_port_net_x8 <= shift;
  delay0_q_net_x4 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x6;
  out2 <= reinterpret1_output_port_net_x10;
  sync_out <= delay0_q_net_x5;

  butterfly_direct_c2a5b3cff6: entity work.butterfly_direct_entity_c2a5b3cff6
    port map (
      a => reinterpret1_output_port_net_x7,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x399,
      clk_1 => clk_1_sg_x399,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x10,
      a_bw_x0 => reinterpret2_output_port_net_x6,
      of_x0 => reinterpret1_output_port_net_x6,
      sync_out => delay0_q_net_x5
    );

  counter: entity work.counter_223a0f3237
    port map (
      ce => ce_1_sg_x399,
      clk => clk_1_sg_x399,
      clr => '0',
      rst(0) => dsync0_q_net,
      op(0) => counter_op_net
    );

  delay0_045569bfa6: entity work.delay0_entity_045569bfa6
    port map (
      ce_1 => ce_1_sg_x399,
      clk_1 => clk_1_sg_x399,
      din => din2_q_net_x1,
      dout => reinterpret1_output_port_net_x2
    );

  delay1_dc8d296b50: entity work.delay0_entity_045569bfa6
    port map (
      ce_1 => ce_1_sg_x399,
      clk_1 => clk_1_sg_x399,
      din => dmux1_q_net_x1,
      dout => reinterpret1_output_port_net_x7
    );

  din0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x5,
      q => din0_q_net
    );

  din2: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x4,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x399,
      clk => clk_1_sg_x399,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x399,
      clk => clk_1_sg_x399,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x6,
      d1(0) => logical1_y_net_x3,
      y(0) => logical1_y_net_x0
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x399,
      clk => clk_1_sg_x399,
      clr => '0',
      d0 => reinterpret1_output_port_net_x2,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x399,
      clk => clk_1_sg_x399,
      clr => '0',
      d0 => din0_q_net,
      d1 => reinterpret1_output_port_net_x2,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x8,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_1ff029e688: entity work.sync_delay_entity_1ff029e688
    port map (
      ce_1 => ce_1_sg_x399,
      clk_1 => clk_1_sg_x399,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_core"

entity biplex_core_entity_4bbde9492a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol1: in std_logic_vector(35 downto 0); 
    pol2: in std_logic_vector(35 downto 0); 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end biplex_core_entity_4bbde9492a;

architecture structural of biplex_core_entity_4bbde9492a is
  signal ce_1_sg_x400: std_logic;
  signal clk_1_sg_x400: std_logic;
  signal constant_op_net_x0: std_logic;
  signal delay0_q_net_x11: std_logic;
  signal delay0_q_net_x2: std_logic;
  signal delay0_q_net_x3: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal delay0_q_net_x5: std_logic;
  signal delay0_q_net_x6: std_logic;
  signal delay0_q_net_x7: std_logic;
  signal delay0_q_net_x8: std_logic;
  signal delay0_q_net_x9: std_logic;
  signal delay12_q_net_x1: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal logical1_y_net_x4: std_logic;
  signal logical1_y_net_x5: std_logic;
  signal logical1_y_net_x6: std_logic;
  signal logical1_y_net_x7: std_logic;
  signal logical1_y_net_x8: std_logic;
  signal logical1_y_net_x9: std_logic;
  signal reint1_output_port_net_x9: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x14: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x15: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x16: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x17: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x18: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x19: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x21: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x22: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x23: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x9: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x400 <= ce_1;
  clk_1_sg_x400 <= clk_1;
  reinterpret1_output_port_net_x21 <= pol1;
  reinterpret1_output_port_net_x22 <= pol2;
  reint1_output_port_net_x9 <= shift;
  delay12_q_net_x1 <= sync;
  of_x0 <= logical1_y_net_x9;
  out1 <= reinterpret2_output_port_net_x12;
  out2 <= reinterpret1_output_port_net_x23;
  sync_out <= delay0_q_net_x11;

  constant_x0: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net_x0
    );

  fft_stage_1_78d32969e0: entity work.fft_stage_1_entity_78d32969e0
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret1_output_port_net_x21,
      in2 => reinterpret1_output_port_net_x22,
      of_in => constant_op_net_x0,
      shift => reint1_output_port_net_x9,
      sync => delay12_q_net_x1,
      of_x0 => logical1_y_net_x1,
      out1 => reinterpret2_output_port_net_x3,
      out2 => reinterpret1_output_port_net_x14,
      sync_out => delay0_q_net_x2
    );

  fft_stage_2_d4ca9e250d: entity work.fft_stage_2_entity_d4ca9e250d
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret2_output_port_net_x3,
      in2 => reinterpret1_output_port_net_x14,
      of_in => logical1_y_net_x1,
      shift => reint1_output_port_net_x9,
      sync => delay0_q_net_x2,
      of_x0 => logical1_y_net_x3,
      out1 => reinterpret2_output_port_net_x5,
      out2 => reinterpret1_output_port_net_x11,
      sync_out => delay0_q_net_x4
    );

  fft_stage_3_0af81251ad: entity work.fft_stage_3_entity_0af81251ad
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret2_output_port_net_x5,
      in2 => reinterpret1_output_port_net_x11,
      of_in => logical1_y_net_x3,
      shift => reint1_output_port_net_x9,
      sync => delay0_q_net_x4,
      of_x0 => logical1_y_net_x2,
      out1 => reinterpret2_output_port_net_x7,
      out2 => reinterpret1_output_port_net_x15,
      sync_out => delay0_q_net_x6
    );

  fft_stage_4_17fc9ab803: entity work.fft_stage_4_entity_17fc9ab803
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret2_output_port_net_x7,
      in2 => reinterpret1_output_port_net_x15,
      of_in => logical1_y_net_x2,
      shift => reint1_output_port_net_x9,
      sync => delay0_q_net_x6,
      of_x0 => logical1_y_net_x4,
      out1 => reinterpret2_output_port_net_x4,
      out2 => reinterpret1_output_port_net_x16,
      sync_out => delay0_q_net_x3
    );

  fft_stage_5_a6b30fa038: entity work.fft_stage_5_entity_a6b30fa038
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret2_output_port_net_x4,
      in2 => reinterpret1_output_port_net_x16,
      of_in => logical1_y_net_x4,
      shift => reint1_output_port_net_x9,
      sync => delay0_q_net_x3,
      of_x0 => logical1_y_net_x5,
      out1 => reinterpret2_output_port_net_x6,
      out2 => reinterpret1_output_port_net_x17,
      sync_out => delay0_q_net_x5
    );

  fft_stage_6_e9d7569f38: entity work.fft_stage_6_entity_e9d7569f38
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret2_output_port_net_x6,
      in2 => reinterpret1_output_port_net_x17,
      of_in => logical1_y_net_x5,
      shift => reint1_output_port_net_x9,
      sync => delay0_q_net_x5,
      of_x0 => logical1_y_net_x6,
      out1 => reinterpret2_output_port_net_x8,
      out2 => reinterpret1_output_port_net_x9,
      sync_out => delay0_q_net_x7
    );

  fft_stage_7_db28b77198: entity work.fft_stage_7_entity_db28b77198
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret2_output_port_net_x8,
      in2 => reinterpret1_output_port_net_x9,
      of_in => logical1_y_net_x6,
      shift => reint1_output_port_net_x9,
      sync => delay0_q_net_x7,
      of_x0 => logical1_y_net_x7,
      out1 => reinterpret2_output_port_net_x9,
      out2 => reinterpret1_output_port_net_x18,
      sync_out => delay0_q_net_x8
    );

  fft_stage_8_8a393a85bf: entity work.fft_stage_8_entity_8a393a85bf
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret2_output_port_net_x9,
      in2 => reinterpret1_output_port_net_x18,
      of_in => logical1_y_net_x7,
      shift => reint1_output_port_net_x9,
      sync => delay0_q_net_x8,
      of_x0 => logical1_y_net_x8,
      out1 => reinterpret2_output_port_net_x10,
      out2 => reinterpret1_output_port_net_x19,
      sync_out => delay0_q_net_x9
    );

  fft_stage_9_87ee71c641: entity work.fft_stage_9_entity_87ee71c641
    port map (
      ce_1 => ce_1_sg_x400,
      clk_1 => clk_1_sg_x400,
      in1 => reinterpret2_output_port_net_x10,
      in2 => reinterpret1_output_port_net_x19,
      of_in => logical1_y_net_x8,
      shift => reint1_output_port_net_x9,
      sync => delay0_q_net_x9,
      of_x0 => logical1_y_net_x9,
      out1 => reinterpret2_output_port_net_x12,
      out2 => reinterpret1_output_port_net_x23,
      sync_out => delay0_q_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler/barrel_switcher"

entity barrel_switcher_entity_5781b94699 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    sel: in std_logic; 
    sync_in: in std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end barrel_switcher_entity_5781b94699;

architecture structural of barrel_switcher_entity_5781b94699 is
  signal ce_1_sg_x401: std_logic;
  signal clk_1_sg_x401: std_logic;
  signal convert_dout_net_x0: std_logic;
  signal delay0_q_net_x12: std_logic;
  signal delay_sync_q_net_x0: std_logic;
  signal mux11_y_net_x0: std_logic_vector(35 downto 0);
  signal mux21_y_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x24: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x13: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x401 <= ce_1;
  clk_1_sg_x401 <= clk_1;
  reinterpret2_output_port_net_x13 <= in1;
  reinterpret1_output_port_net_x24 <= in2;
  convert_dout_net_x0 <= sel;
  delay0_q_net_x12 <= sync_in;
  out1 <= mux11_y_net_x0;
  out2 <= mux21_y_net_x0;
  sync_out <= delay_sync_q_net_x0;

  delay_sync: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x401,
      clk => clk_1_sg_x401,
      clr => '0',
      d(0) => delay0_q_net_x12,
      q(0) => delay_sync_q_net_x0
    );

  mux11: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x401,
      clk => clk_1_sg_x401,
      clr => '0',
      d0 => reinterpret2_output_port_net_x13,
      d1 => reinterpret1_output_port_net_x24,
      sel(0) => slice1_y_net,
      y => mux11_y_net_x0
    );

  mux21: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x401,
      clk => clk_1_sg_x401,
      clr => '0',
      d0 => reinterpret1_output_port_net_x24,
      d1 => reinterpret2_output_port_net_x13,
      sel(0) => slice1_y_net,
      y => mux21_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => convert_dout_net_x0,
      y(0) => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler/reorder/addr_expand"

entity addr_expand_entity_ae2730480b is
  port (
    bus_in: in std_logic_vector(8 downto 0); 
    msb_lsb_out1: out std_logic_vector(8 downto 0)
  );
end addr_expand_entity_ae2730480b;

architecture structural of addr_expand_entity_ae2730480b is
  signal reinterpret1_output_port_net_x1: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);
  signal slice1_y_net: std_logic_vector(8 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 9,
      y_width => 9
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler/reorder/addr_replicate/bussify"

entity bussify_entity_f6dc993287 is
  port (
    in1: in std_logic_vector(8 downto 0); 
    bus_out: out std_logic_vector(8 downto 0)
  );
end bussify_entity_f6dc993287;

architecture structural of bussify_entity_f6dc993287 is
  signal mux_y_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);

begin
  mux_y_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux_y_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler/reorder/addr_replicate"

entity addr_replicate_entity_726e28d91c is
  port (
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(8 downto 0)
  );
end addr_replicate_entity_726e28d91c;

architecture structural of addr_replicate_entity_726e28d91c is
  signal mux_y_net_x1: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);

begin
  mux_y_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_f6dc993287: entity work.bussify_entity_f6dc993287
    port map (
      in1 => mux_y_net_x1,
      bus_out => reinterpret1_output_port_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler/reorder/sync_delay_en"

entity sync_delay_en_entity_a6adb921b1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_en_entity_a6adb921b1;

architecture structural of sync_delay_en_entity_a6adb921b1 is
  signal ce_1_sg_x403: std_logic;
  signal clk_1_sg_x403: std_logic;
  signal constant1_op_net: std_logic_vector(9 downto 0);
  signal constant2_op_net: std_logic_vector(9 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(9 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x403 <= ce_1;
  clk_1_sg_x403 <= clk_1;
  or_y_net_x0 <= en;
  pre_sync_delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  constant1: entity work.constant_498bc68c14
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_fbc2f0cce1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_f1ac4bddff
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_04135acb4316d2f1",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x403,
      clk => clk_1_sg_x403,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical1_y_net,
      load(0) => pre_sync_delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => or_y_net_x0,
      y(0) => logical1_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x0
    );

  relational: entity work.relational_0ffd72e037
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f6702ea2f7
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler/reorder/we_replicate"

entity we_replicate_entity_ce348375d4 is
  port (
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end we_replicate_entity_ce348375d4;

architecture structural of we_replicate_entity_ce348375d4 is
  signal delay_we2_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic;

begin
  delay_we2_q_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x2;

  bussify_768ad08f4e: entity work.bussify_entity_0478673500
    port map (
      in1 => delay_we2_q_net_x1,
      bus_out => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler/reorder"

entity reorder_entity_ea70b7f1b6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end reorder_entity_ea70b7f1b6;

architecture structural of reorder_entity_ea70b7f1b6 is
  signal buf0_data_out_net_x2: std_logic_vector(35 downto 0);
  signal ce_1_sg_x404: std_logic;
  signal clk_1_sg_x404: std_logic;
  signal constant_op_net_x0: std_logic;
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay_d0_q_net: std_logic_vector(8 downto 0);
  signal delay_din0_q_net: std_logic_vector(35 downto 0);
  signal delay_map1_q_net: std_logic_vector(8 downto 0);
  signal delay_sel_q_net: std_logic;
  signal delay_sync_q_net_x1: std_logic;
  signal delay_we0_q_net: std_logic;
  signal delay_we2_q_net_x1: std_logic;
  signal map1_data_net: std_logic_vector(8 downto 0);
  signal mux11_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x0: std_logic;
  signal mux_y_net_x1: std_logic_vector(8 downto 0);
  signal or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x1: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal slice1_y_net: std_logic;
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x404 <= ce_1;
  clk_1_sg_x404 <= clk_1;
  mux11_y_net_x1 <= din0;
  constant_op_net_x0 <= en;
  delay_sync_q_net_x1 <= sync;
  dout0 <= buf0_data_out_net_x2;
  sync_out <= post_sync_delay_q_net_x1;

  addr_expand_ae2730480b: entity work.addr_expand_entity_ae2730480b
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  addr_replicate_726e28d91c: entity work.addr_replicate_entity_726e28d91c
    port map (
      in_x0 => mux_y_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  buf0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_7a7fa6a8949d8574",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      data_in => delay_din0_q_net,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => buf0_data_out_net_x2
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_9a633c62b36f8977",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      clr => '0',
      en(0) => constant_op_net_x0,
      rst(0) => delay_sync_q_net_x1,
      op => counter_op_net
    );

  delay_d0: entity work.delay_6104cbef7a
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      clr => '0',
      d => slice2_y_net,
      q => delay_d0_q_net
    );

  delay_din0: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      clr => '0',
      d => mux11_y_net_x1,
      q => delay_din0_q_net
    );

  delay_map1: entity work.delay_a99984b20e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map1_data_net,
      q => delay_map1_q_net
    );

  delay_sel: entity work.delay_06829f1faf
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      clr => '0',
      d(0) => slice1_y_net,
      q(0) => delay_sel_q_net
    );

  delay_we0: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      d(0) => constant_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we0_q_net
    );

  delay_we2: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      d(0) => constant_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we2_q_net_x1
    );

  map1: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 9,
      core_name0 => "bmg_72_4d9bcbdf9d0508f0",
      latency => 1
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      en => "1",
      rst => "0",
      data => map1_data_net
    );

  mux: entity work.mux_57bd0e235a
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      sel(0) => delay_sel_q_net,
      y => mux_y_net_x1
    );

  or_x0: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => delay_we0_q_net,
      y(0) => or_y_net_x0
    );

  post_sync_delay: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => post_sync_delay_q_net_x1
    );

  pre_sync_delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x404,
      clk => clk_1_sg_x404,
      d(0) => delay_sync_q_net_x1,
      en => '1',
      rst => '1',
      q(0) => pre_sync_delay_q_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

  sync_delay_en_a6adb921b1: entity work.sync_delay_en_entity_a6adb921b1
    port map (
      ce_1 => ce_1_sg_x404,
      clk_1 => clk_1_sg_x404,
      en => or_y_net_x0,
      in_x0 => pre_sync_delay_q_net_x0,
      out_x0 => mux_y_net_x0
    );

  we_expand_3ed824d4a0: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  we_replicate_ce348375d4: entity work.we_replicate_entity_ce348375d4
    port map (
      in_x0 => delay_we2_q_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler/reorder1"

entity reorder1_entity_6492d761f1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0)
  );
end reorder1_entity_6492d761f1;

architecture structural of reorder1_entity_6492d761f1 is
  signal buf0_data_out_net_x3: std_logic_vector(35 downto 0);
  signal ce_1_sg_x405: std_logic;
  signal clk_1_sg_x405: std_logic;
  signal constant_op_net_x1: std_logic;
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay_d0_q_net: std_logic_vector(8 downto 0);
  signal delay_din0_q_net: std_logic_vector(35 downto 0);
  signal delay_map1_q_net: std_logic_vector(8 downto 0);
  signal delay_sel_q_net: std_logic;
  signal delay_sync_q_net_x2: std_logic;
  signal delay_we2_q_net_x1: std_logic;
  signal map1_data_net: std_logic_vector(8 downto 0);
  signal mux21_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal slice1_y_net: std_logic;
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x405 <= ce_1;
  clk_1_sg_x405 <= clk_1;
  mux21_y_net_x1 <= din0;
  constant_op_net_x1 <= en;
  delay_sync_q_net_x2 <= sync;
  dout0 <= buf0_data_out_net_x3;

  addr_expand_9543934722: entity work.addr_expand_entity_ae2730480b
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  addr_replicate_8154e30004: entity work.addr_replicate_entity_726e28d91c
    port map (
      in_x0 => mux_y_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  buf0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_7a7fa6a8949d8574",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x405,
      clk => clk_1_sg_x405,
      data_in => delay_din0_q_net,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => buf0_data_out_net_x3
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_9a633c62b36f8977",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x405,
      clk => clk_1_sg_x405,
      clr => '0',
      en(0) => constant_op_net_x1,
      rst(0) => delay_sync_q_net_x2,
      op => counter_op_net
    );

  delay_d0: entity work.delay_6104cbef7a
    port map (
      ce => ce_1_sg_x405,
      clk => clk_1_sg_x405,
      clr => '0',
      d => slice2_y_net,
      q => delay_d0_q_net
    );

  delay_din0: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x405,
      clk => clk_1_sg_x405,
      clr => '0',
      d => mux21_y_net_x1,
      q => delay_din0_q_net
    );

  delay_map1: entity work.delay_a99984b20e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map1_data_net,
      q => delay_map1_q_net
    );

  delay_sel: entity work.delay_06829f1faf
    port map (
      ce => ce_1_sg_x405,
      clk => clk_1_sg_x405,
      clr => '0',
      d(0) => slice1_y_net,
      q(0) => delay_sel_q_net
    );

  delay_we2: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x405,
      clk => clk_1_sg_x405,
      d(0) => constant_op_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay_we2_q_net_x1
    );

  map1: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 9,
      core_name0 => "bmg_72_cc6309531d66aa85",
      latency => 1
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x405,
      clk => clk_1_sg_x405,
      en => "1",
      rst => "0",
      data => map1_data_net
    );

  mux: entity work.mux_57bd0e235a
    port map (
      ce => ce_1_sg_x405,
      clk => clk_1_sg_x405,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      sel(0) => delay_sel_q_net,
      y => mux_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

  we_expand_b4ae20665a: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  we_replicate_264825aaff: entity work.we_replicate_entity_ce348375d4
    port map (
      in_x0 => delay_we2_q_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex/biplex_cplx_unscrambler"

entity biplex_cplx_unscrambler_entity_8d6d8a1079 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    even: in std_logic_vector(35 downto 0); 
    odd: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    pol1: out std_logic_vector(35 downto 0); 
    pol2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end biplex_cplx_unscrambler_entity_8d6d8a1079;

architecture structural of biplex_cplx_unscrambler_entity_8d6d8a1079 is
  signal buf0_data_out_net_x2: std_logic_vector(35 downto 0);
  signal buf0_data_out_net_x3: std_logic_vector(35 downto 0);
  signal ce_1_sg_x406: std_logic;
  signal clk_1_sg_x406: std_logic;
  signal constant1_op_net: std_logic_vector(8 downto 0);
  signal constant2_op_net: std_logic_vector(8 downto 0);
  signal constant_op_net_x1: std_logic;
  signal convert1_dout_net_x0: std_logic;
  signal convert_dout_net_x0: std_logic;
  signal counter1_op_net: std_logic_vector(8 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay0_q_net_x13: std_logic;
  signal delay_sync_q_net_x1: std_logic;
  signal delay_sync_q_net_x2: std_logic;
  signal mux11_y_net_x1: std_logic_vector(35 downto 0);
  signal mux11_y_net_x2: std_logic_vector(35 downto 0);
  signal mux21_y_net_x1: std_logic_vector(35 downto 0);
  signal mux21_y_net_x2: std_logic_vector(35 downto 0);
  signal post_sync_delay_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x25: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x14: std_logic_vector(35 downto 0);
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x406 <= ce_1;
  clk_1_sg_x406 <= clk_1;
  reinterpret2_output_port_net_x14 <= even;
  reinterpret1_output_port_net_x25 <= odd;
  delay0_q_net_x13 <= sync;
  pol1 <= mux11_y_net_x2;
  pol2 <= mux21_y_net_x2;
  sync_out <= delay_sync_q_net_x1;

  barrel_switcher1_5accec6b49: entity work.barrel_switcher_entity_5781b94699
    port map (
      ce_1 => ce_1_sg_x406,
      clk_1 => clk_1_sg_x406,
      in1 => buf0_data_out_net_x2,
      in2 => buf0_data_out_net_x3,
      sel => convert1_dout_net_x0,
      sync_in => post_sync_delay_q_net_x1,
      out1 => mux11_y_net_x2,
      out2 => mux21_y_net_x2,
      sync_out => delay_sync_q_net_x1
    );

  barrel_switcher_5781b94699: entity work.barrel_switcher_entity_5781b94699
    port map (
      ce_1 => ce_1_sg_x406,
      clk_1 => clk_1_sg_x406,
      in1 => reinterpret2_output_port_net_x14,
      in2 => reinterpret1_output_port_net_x25,
      sel => convert_dout_net_x0,
      sync_in => delay0_q_net_x13,
      out1 => mux11_y_net_x1,
      out2 => mux21_y_net_x1,
      sync_out => delay_sync_q_net_x2
    );

  constant1: entity work.constant_4a391b9a0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_4a391b9a0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net_x1
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x406,
      clk => clk_1_sg_x406,
      clr => '0',
      din(0) => relational_op_net,
      en => "1",
      dout(0) => convert_dout_net_x0
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x406,
      clk => clk_1_sg_x406,
      clr => '0',
      din(0) => relational1_op_net,
      en => "1",
      dout(0) => convert1_dout_net_x0
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x406,
      clk => clk_1_sg_x406,
      clr => '0',
      en => "1",
      rst(0) => delay0_q_net_x13,
      op => counter_op_net
    );

  counter1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x406,
      clk => clk_1_sg_x406,
      clr => '0',
      en => "1",
      rst(0) => post_sync_delay_q_net_x1,
      op => counter1_op_net
    );

  relational: entity work.relational_011282df9a
    port map (
      a => constant1_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_011282df9a
    port map (
      a => constant2_op_net,
      b => counter1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  reorder1_6492d761f1: entity work.reorder1_entity_6492d761f1
    port map (
      ce_1 => ce_1_sg_x406,
      clk_1 => clk_1_sg_x406,
      din0 => mux21_y_net_x1,
      en => constant_op_net_x1,
      sync => delay_sync_q_net_x2,
      dout0 => buf0_data_out_net_x3
    );

  reorder_ea70b7f1b6: entity work.reorder_entity_ea70b7f1b6
    port map (
      ce_1 => ce_1_sg_x406,
      clk_1 => clk_1_sg_x406,
      din0 => mux11_y_net_x1,
      en => constant_op_net_x1,
      sync => delay_sync_q_net_x2,
      dout0 => buf0_data_out_net_x2,
      sync_out => post_sync_delay_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_biplex"

entity fft_biplex_entity_6ab2ff18f4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol00_in: in std_logic_vector(35 downto 0); 
    pol01_in: in std_logic_vector(35 downto 0); 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    pol00_out: out std_logic_vector(35 downto 0); 
    pol01_out: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_biplex_entity_6ab2ff18f4;

architecture structural of fft_biplex_entity_6ab2ff18f4 is
  signal ce_1_sg_x407: std_logic;
  signal clk_1_sg_x407: std_logic;
  signal delay0_q_net_x13: std_logic;
  signal delay12_q_net_x2: std_logic;
  signal delay20_q_net_x1: std_logic_vector(35 downto 0);
  signal delay21_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_sync_q_net_x2: std_logic;
  signal logical1_y_net_x10: std_logic;
  signal mux11_y_net_x3: std_logic_vector(35 downto 0);
  signal mux21_y_net_x3: std_logic_vector(35 downto 0);
  signal reint1_output_port_net_x10: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x22: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x23: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x25: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x14: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x407 <= ce_1;
  clk_1_sg_x407 <= clk_1;
  delay21_q_net_x1 <= pol00_in;
  delay20_q_net_x1 <= pol01_in;
  reint1_output_port_net_x10 <= shift;
  delay12_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x10;
  pol00_out <= reinterpret1_output_port_net_x2;
  pol01_out <= reinterpret1_output_port_net_x3;
  sync_out <= delay_sync_q_net_x2;

  biplex_core_4bbde9492a: entity work.biplex_core_entity_4bbde9492a
    port map (
      ce_1 => ce_1_sg_x407,
      clk_1 => clk_1_sg_x407,
      pol1 => reinterpret1_output_port_net_x22,
      pol2 => reinterpret1_output_port_net_x23,
      shift => reint1_output_port_net_x10,
      sync => delay12_q_net_x2,
      of_x0 => logical1_y_net_x10,
      out1 => reinterpret2_output_port_net_x14,
      out2 => reinterpret1_output_port_net_x25,
      sync_out => delay0_q_net_x13
    );

  biplex_cplx_unscrambler_8d6d8a1079: entity work.biplex_cplx_unscrambler_entity_8d6d8a1079
    port map (
      ce_1 => ce_1_sg_x407,
      clk_1 => clk_1_sg_x407,
      even => reinterpret2_output_port_net_x14,
      odd => reinterpret1_output_port_net_x25,
      sync => delay0_q_net_x13,
      pol1 => mux11_y_net_x3,
      pol2 => mux21_y_net_x3,
      sync_out => delay_sync_q_net_x2
    );

  even_bussify_0724097b43: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => delay21_q_net_x1,
      bus_out => reinterpret1_output_port_net_x22
    );

  odd_bussify_3f4bfef86a: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => delay20_q_net_x1,
      bus_out => reinterpret1_output_port_net_x23
    );

  pol0_debus_0ca719f7c3: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => mux11_y_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  pol1_debus_30a374e569: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => mux21_y_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/cmult/b_expand"

entity b_expand_entity_4f9d9d7e1a is
  port (
    bus_in: in std_logic_vector(99 downto 0); 
    lsb_out1: out std_logic_vector(24 downto 0); 
    msb_out4: out std_logic_vector(24 downto 0); 
    out2: out std_logic_vector(24 downto 0); 
    out3: out std_logic_vector(24 downto 0)
  );
end b_expand_entity_4f9d9d7e1a;

architecture structural of b_expand_entity_4f9d9d7e1a is
  signal concatenate_y_net_x0: std_logic_vector(99 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(24 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(24 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(24 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(24 downto 0);
  signal slice1_y_net: std_logic_vector(24 downto 0);
  signal slice2_y_net: std_logic_vector(24 downto 0);
  signal slice3_y_net: std_logic_vector(24 downto 0);
  signal slice4_y_net: std_logic_vector(24 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_60ea556961
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_60ea556961
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_60ea556961
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_60ea556961
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 24,
      x_width => 100,
      y_width => 25
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 25,
      new_msb => 49,
      x_width => 100,
      y_width => 25
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 50,
      new_msb => 74,
      x_width => 100,
      y_width => 25
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 75,
      new_msb => 99,
      x_width => 100,
      y_width => 25
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/cmult/b_replicate/bussify"

entity bussify_entity_bbd17066db is
  port (
    in1: in std_logic_vector(49 downto 0); 
    in2: in std_logic_vector(49 downto 0); 
    bus_out: out std_logic_vector(99 downto 0)
  );
end bussify_entity_bbd17066db;

architecture structural of bussify_entity_bbd17066db is
  signal concatenate_y_net_x1: std_logic_vector(99 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(49 downto 0);
  signal din0_1_q_net_x0: std_logic_vector(49 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(49 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(49 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  din0_1_q_net_x0 <= in2;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_402eae042e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_0ad37a7234
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_0ad37a7234
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_1_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/cmult/b_replicate"

entity b_replicate_entity_cc0fd6c9ed is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(49 downto 0); 
    out_x0: out std_logic_vector(99 downto 0)
  );
end b_replicate_entity_cc0fd6c9ed;

architecture structural of b_replicate_entity_cc0fd6c9ed is
  signal ce_1_sg_x435: std_logic;
  signal clk_1_sg_x435: std_logic;
  signal concat_y_net_x0: std_logic_vector(49 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(99 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(49 downto 0);
  signal din0_1_q_net_x0: std_logic_vector(49 downto 0);

begin
  ce_1_sg_x435 <= ce_1;
  clk_1_sg_x435 <= clk_1;
  concat_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_bbd17066db: entity work.bussify_entity_bbd17066db
    port map (
      in1 => din0_0_q_net_x0,
      in2 => din0_1_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 50
    )
    port map (
      ce => ce_1_sg_x435,
      clk => clk_1_sg_x435,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 50
    )
    port map (
      ce => ce_1_sg_x435,
      clk => clk_1_sg_x435,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/cmult"

entity cmult_entity_b68cdf138f is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(49 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ab: out std_logic_vector(35 downto 0)
  );
end cmult_entity_b68cdf138f;

architecture structural of cmult_entity_b68cdf138f is
  signal addsub_im_s_net: std_logic_vector(43 downto 0);
  signal addsub_re_s_net: std_logic_vector(43 downto 0);
  signal ce_1_sg_x436: std_logic;
  signal clk_1_sg_x436: std_logic;
  signal concat_y_net_x2: std_logic_vector(49 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(99 downto 0);
  signal convert_im_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_re_dout_net_x0: std_logic_vector(17 downto 0);
  signal imim_p_net: std_logic_vector(42 downto 0);
  signal imre_p_net: std_logic_vector(42 downto 0);
  signal reim_p_net: std_logic_vector(42 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(24 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(24 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(24 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(24 downto 0);
  signal rere_p_net: std_logic_vector(42 downto 0);
  signal working_values_doutb_net_x1: std_logic_vector(35 downto 0);

begin
  working_values_doutb_net_x1 <= a;
  concat_y_net_x2 <= b;
  ce_1_sg_x436 <= ce_1;
  clk_1_sg_x436 <= clk_1;
  ab <= concat_y_net_x3;

  a_expand_24aaa6cb01: entity work.a_expand_entity_668866a5ac
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  a_replicate_051d4595c0: entity work.a_replicate_entity_5a04bf0c6b
    port map (
      ce_1 => ce_1_sg_x436,
      clk_1 => clk_1_sg_x436,
      in_x0 => working_values_doutb_net_x1,
      out_x0 => concatenate_y_net_x2
    );

  addsub_im: entity work.addsub_5a709f11ce
    port map (
      a => imre_p_net,
      b => reim_p_net,
      ce => ce_1_sg_x436,
      clk => clk_1_sg_x436,
      clr => '0',
      s => addsub_im_s_net
    );

  addsub_re: entity work.addsub_5e87370976
    port map (
      a => rere_p_net,
      b => imim_p_net,
      ce => ce_1_sg_x436,
      clk => clk_1_sg_x436,
      clr => '0',
      s => addsub_re_s_net
    );

  b_expand_4f9d9d7e1a: entity work.b_expand_entity_4f9d9d7e1a
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  b_replicate_cc0fd6c9ed: entity work.b_replicate_entity_cc0fd6c9ed
    port map (
      ce_1 => ce_1_sg_x436,
      clk_1 => clk_1_sg_x436,
      in_x0 => concat_y_net_x2,
      out_x0 => concatenate_y_net_x3
    );

  convert_im: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 41,
      din_width => 44,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x436,
      clk => clk_1_sg_x436,
      clr => '0',
      din => addsub_im_s_net,
      en => "1",
      dout => convert_im_dout_net_x0
    );

  convert_re: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 41,
      din_width => 44,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x436,
      clk => clk_1_sg_x436,
      clr => '0',
      din => addsub_re_s_net,
      en => "1",
      dout => convert_re_dout_net_x0
    );

  imim: entity work.mult_4d389c6c89
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x436,
      clk => clk_1_sg_x436,
      clr => '0',
      p => imim_p_net
    );

  imre: entity work.mult_4d389c6c89
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x436,
      clk => clk_1_sg_x436,
      clr => '0',
      p => imre_p_net
    );

  reim: entity work.mult_4d389c6c89
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x436,
      clk => clk_1_sg_x436,
      clr => '0',
      p => reim_p_net
    );

  rere: entity work.mult_4d389c6c89
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x436,
      clk => clk_1_sg_x436,
      clr => '0',
      p => rere_p_net
    );

  ri_to_c_27d1cd932b: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => convert_im_dout_net_x0,
      re => convert_re_dout_net_x0,
      c => concat_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/outmux/sel_expand"

entity sel_expand_entity_a3955aff04 is
  port (
    bus_in: in std_logic_vector(1 downto 0); 
    lsb_out1: out std_logic; 
    msb_out2: out std_logic
  );
end sel_expand_entity_a3955aff04;

architecture structural of sel_expand_entity_a3955aff04 is
  signal concatenate_y_net_x0: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic;
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice1_y_net,
      output_port(0) => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice2_y_net,
      output_port(0) => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/outmux"

entity outmux_entity_51ee7a0ccf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(35 downto 0); 
    d1: in std_logic_vector(35 downto 0); 
    sel: in std_logic_vector(1 downto 0); 
    out_x0: out std_logic_vector(35 downto 0)
  );
end outmux_entity_51ee7a0ccf;

architecture structural of outmux_entity_51ee7a0ccf is
  signal ce_1_sg_x437: std_logic;
  signal clk_1_sg_x437: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(35 downto 0);
  signal mux0_y_net_x0: std_logic_vector(17 downto 0);
  signal mux1_y_net_x0: std_logic_vector(17 downto 0);
  signal reference_values_data_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;

begin
  ce_1_sg_x437 <= ce_1;
  clk_1_sg_x437 <= clk_1;
  reference_values_data_net_x1 <= d0;
  concat_y_net_x5 <= d1;
  concatenate_y_net_x2 <= sel;
  out_x0 <= concatenate_y_net_x3;

  d_bussify_5dda9fc22f: entity work.bus_create_entity_75d19a8d19
    port map (
      in1 => mux0_y_net_x0,
      in2 => mux1_y_net_x0,
      bus_out => concatenate_y_net_x3
    );

  expand0_f6745b457b: entity work.bus_expand_entity_1d9a063174
    port map (
      bus_in => reference_values_data_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  expand1_c781081eb8: entity work.bus_expand_entity_1d9a063174
    port map (
      bus_in => concat_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  mux0: entity work.mux_b0d8099706
    port map (
      ce => ce_1_sg_x437,
      clk => clk_1_sg_x437,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_b0d8099706
    port map (
      ce => ce_1_sg_x437,
      clk => clk_1_sg_x437,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux1_y_net_x0
    );

  sel_expand_a3955aff04: entity work.sel_expand_entity_a3955aff04
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/ri_to_c"

entity ri_to_c_entity_a6c62beeec is
  port (
    im: in std_logic_vector(24 downto 0); 
    re: in std_logic_vector(24 downto 0); 
    c: out std_logic_vector(49 downto 0)
  );
end ri_to_c_entity_a6c62beeec;

architecture structural of ri_to_c_entity_a6c62beeec is
  signal concat_y_net_x3: std_logic_vector(49 downto 0);
  signal force_im_output_port_net: std_logic_vector(24 downto 0);
  signal force_re_output_port_net: std_logic_vector(24 downto 0);
  signal rotation_imag_op_net_x0: std_logic_vector(24 downto 0);
  signal rotation_real_op_net_x0: std_logic_vector(24 downto 0);

begin
  rotation_imag_op_net_x0 <= im;
  rotation_real_op_net_x0 <= re;
  c <= concat_y_net_x3;

  concat: entity work.concat_ed1960f5a8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x3
    );

  force_im: entity work.reinterpret_c3c0e847be
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rotation_imag_op_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_c3c0e847be
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rotation_real_op_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/sel_replicate/bussify"

entity bussify_entity_9dac855f79 is
  port (
    in1: in std_logic; 
    in2: in std_logic; 
    bus_out: out std_logic_vector(1 downto 0)
  );
end bussify_entity_9dac855f79;

architecture structural of bussify_entity_9dac855f79 is
  signal concatenate_y_net_x3: std_logic_vector(1 downto 0);
  signal din0_0_q_net_x0: std_logic;
  signal din0_1_q_net_x0: std_logic;
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic;

begin
  din0_0_q_net_x0 <= in1;
  din0_1_q_net_x0 <= in2;
  bus_out <= concatenate_y_net_x3;

  concatenate: entity work.concat_e6f5ee726b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      y => concatenate_y_net_x3
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => din0_0_q_net_x0,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => din0_1_q_net_x0,
      output_port(0) => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc/sel_replicate"

entity sel_replicate_entity_6b1abd12c1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(1 downto 0)
  );
end sel_replicate_entity_6b1abd12c1;

architecture structural of sel_replicate_entity_6b1abd12c1 is
  signal ce_1_sg_x438: std_logic;
  signal clk_1_sg_x438: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(1 downto 0);
  signal din0_0_q_net_x0: std_logic;
  signal din0_1_q_net_x0: std_logic;
  signal dselect_q_net_x0: std_logic;

begin
  ce_1_sg_x438 <= ce_1;
  clk_1_sg_x438 <= clk_1;
  dselect_q_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x4;

  bussify_9dac855f79: entity work.bussify_entity_9dac855f79
    port map (
      in1 => din0_0_q_net_x0,
      in2 => din0_1_q_net_x0,
      bus_out => concatenate_y_net_x4
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x438,
      clk => clk_1_sg_x438,
      d(0) => dselect_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net_x0
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x438,
      clk => clk_1_sg_x438,
      d(0) => dselect_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen/feedback_osc"

entity feedback_osc_entity_46921ef314 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    sync: in std_logic; 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end feedback_osc_entity_46921ef314;

architecture structural of feedback_osc_entity_46921ef314 is
  signal ce_1_sg_x439: std_logic;
  signal choice_y_net: std_logic_vector(3 downto 0);
  signal clk_1_sg_x439: std_logic;
  signal concat_y_net: std_logic_vector(4 downto 0);
  signal concat_y_net_x3: std_logic_vector(49 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(72 downto 0);
  signal constant_op_net: std_logic_vector(3 downto 0);
  signal count_op_net: std_logic_vector(8 downto 0);
  signal dcoeffs_q_net_x0: std_logic_vector(35 downto 0);
  signal dconcat_q_net: std_logic_vector(4 downto 0);
  signal delay_sync_q_net_x4: std_logic;
  signal den0_q_net: std_logic;
  signal dmisc_q_net_x1: std_logic_vector(72 downto 0);
  signal doffset0_q_net: std_logic_vector(3 downto 0);
  signal doffset1_q_net: std_logic_vector(3 downto 0);
  signal dselect_q_net_x0: std_logic;
  signal en_op_net_x0: std_logic;
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal offset_y_net: std_logic_vector(3 downto 0);
  signal reference_values_data_net_x1: std_logic_vector(35 downto 0);
  signal rotation_imag_op_net_x0: std_logic_vector(24 downto 0);
  signal rotation_real_op_net_x0: std_logic_vector(24 downto 0);
  signal segment_y_net: std_logic;
  signal select_op_net: std_logic;
  signal working_values_doutb_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x439 <= ce_1;
  clk_1_sg_x439 <= clk_1;
  en_op_net_x0 <= en;
  concatenate_y_net_x5 <= misci;
  delay_sync_q_net_x4 <= sync;
  cos <= force_re_output_port_net_x1;
  misco <= dmisc_q_net_x1;
  sin <= force_im_output_port_net_x1;

  c_to_ri_2aca383392: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => dcoeffs_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  choice: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 7,
      x_width => 9,
      y_width => 4
    )
    port map (
      x => count_op_net,
      y => choice_y_net
    );

  cmult_b68cdf138f: entity work.cmult_entity_b68cdf138f
    port map (
      a => working_values_doutb_net_x1,
      b => concat_y_net_x3,
      ce_1 => ce_1_sg_x439,
      clk_1 => clk_1_sg_x439,
      ab => concat_y_net_x5
    );

  concat: entity work.concat_cf540617d5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => segment_y_net,
      in1 => offset_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  count: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      clr => '0',
      en(0) => en_op_net_x0,
      rst(0) => delay_sync_q_net_x4,
      op => count_op_net
    );

  dcoeffs: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      clr => '0',
      d => concatenate_y_net_x3,
      q => dcoeffs_q_net_x0
    );

  dconcat: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 5
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => concat_y_net,
      en => '1',
      rst => '1',
      q => dconcat_q_net
    );

  den0: entity work.xldelay
    generic map (
      latency => 12,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d(0) => en_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => den0_q_net
    );

  dmisc: entity work.delay_bd0ba063eb
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      clr => '0',
      d => concatenate_y_net_x5,
      q => dmisc_q_net_x1
    );

  doffset0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 4
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => offset_y_net,
      en => '1',
      rst => '1',
      q => doffset0_q_net
    );

  doffset1: entity work.xldelay
    generic map (
      latency => 12,
      reg_retiming => 0,
      reset => 0,
      width => 4
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => offset_y_net,
      en => '1',
      rst => '1',
      q => doffset1_q_net
    );

  dselect: entity work.delay_14a6a51cbc
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      clr => '0',
      d(0) => select_op_net,
      q(0) => dselect_q_net_x0
    );

  offset: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 9,
      y_width => 4
    )
    port map (
      x => count_op_net,
      y => offset_y_net
    );

  outmux_51ee7a0ccf: entity work.outmux_entity_51ee7a0ccf
    port map (
      ce_1 => ce_1_sg_x439,
      clk_1 => clk_1_sg_x439,
      d0 => reference_values_data_net_x1,
      d1 => concat_y_net_x5,
      sel => concatenate_y_net_x4,
      out_x0 => concatenate_y_net_x3
    );

  reference_values: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 5,
      c_width => 36,
      core_name0 => "bmg_72_d030b0e92b1569b0",
      latency => 2
    )
    port map (
      addr => dconcat_q_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      en => "1",
      rst => "0",
      data => reference_values_data_net_x1
    );

  ri_to_c_a6c62beeec: entity work.ri_to_c_entity_a6c62beeec
    port map (
      im => rotation_imag_op_net_x0,
      re => rotation_real_op_net_x0,
      c => concat_y_net_x3
    );

  rotation_imag: entity work.constant_df65ba8bae
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => rotation_imag_op_net_x0
    );

  rotation_real: entity work.constant_190b65ebff
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => rotation_real_op_net_x0
    );

  segment: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => count_op_net,
      y(0) => segment_y_net
    );

  sel_replicate_6b1abd12c1: entity work.sel_replicate_entity_6b1abd12c1
    port map (
      ce_1 => ce_1_sg_x439,
      clk_1 => clk_1_sg_x439,
      in_x0 => dselect_q_net_x0,
      out_x0 => concatenate_y_net_x4
    );

  select_x0: entity work.relational_01718d4f17
    port map (
      a => constant_op_net,
      b => choice_y_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      clr => '0',
      op(0) => select_op_net
    );

  working_values: entity work.xldpram_dist_blast_0209_dds305
    generic map (
      addr_width => 4,
      c_address_width => 4,
      c_width => 36,
      core_name0 => "dmg_72_97b1384ea233b22e",
      latency => 2
    )
    port map (
      a_ce => ce_1_sg_x439,
      a_clk => clk_1_sg_x439,
      addra => doffset1_q_net,
      addrb => doffset0_q_net,
      b_ce => ce_1_sg_x439,
      b_clk => clk_1_sg_x439,
      dina => concatenate_y_net_x3,
      ena => "1",
      enb => "1",
      wea(0) => den0_q_net,
      doutb => working_values_doutb_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle/coeff_gen"

entity coeff_gen_entity_2e10b7d4ca is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_2e10b7d4ca;

architecture structural of coeff_gen_entity_2e10b7d4ca is
  signal ce_1_sg_x440: std_logic;
  signal clk_1_sg_x440: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(72 downto 0);
  signal delay_sync_q_net_x5: std_logic;
  signal dmisc_q_net_x2: std_logic_vector(72 downto 0);
  signal en_op_net_x0: std_logic;
  signal force_im_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x2: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x440 <= ce_1;
  clk_1_sg_x440 <= clk_1;
  concatenate_y_net_x6 <= misci;
  delay_sync_q_net_x5 <= rst;
  misco <= dmisc_q_net_x2;
  w <= concat_y_net_x5;

  en: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_op_net_x0
    );

  feedback_osc_46921ef314: entity work.feedback_osc_entity_46921ef314
    port map (
      ce_1 => ce_1_sg_x440,
      clk_1 => clk_1_sg_x440,
      en => en_op_net_x0,
      misci => concatenate_y_net_x6,
      sync => delay_sync_q_net_x5,
      cos => force_re_output_port_net_x2,
      misco => dmisc_q_net_x2,
      sin => force_im_output_port_net_x2
    );

  ri_to_c_4db4e306ee: entity work.ri_to_c_entity_59e96c1799
    port map (
      im => force_im_output_port_net_x2,
      re => force_re_output_port_net_x2,
      c => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0/twiddle"

entity twiddle_entity_bf87daf796 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_bf87daf796;

architecture structural of twiddle_entity_bf87daf796 is
  signal ce_1_sg_x441: std_logic;
  signal clk_1_sg_x441: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(37 downto 0);
  signal delay_sync_q_net_x6: std_logic;
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x4: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x11 <= ai;
  reinterpret1_output_port_net_x12 <= bi;
  ce_1_sg_x441 <= ce_1;
  clk_1_sg_x441 <= clk_1;
  delay_sync_q_net_x6 <= sync_in;
  ao <= reinterpret1_output_port_net_x13;
  bwo <= concatenate_y_net_x8;
  sync_out <= slice2_y_net_x1;

  bus_convert_e17d96d49c: entity work.bus_convert_entity_d16c506498
    port map (
      ce_1 => ce_1_sg_x441,
      clk_1 => clk_1_sg_x441,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x8,
      misco => dmisc_q_net_x3
    );

  bus_create_fd261d6ad4: entity work.bus_create_entity_be2599d89f
    port map (
      in1 => reinterpret1_output_port_net_x12,
      in2 => delay_sync_q_net_x6,
      in3 => reinterpret1_output_port_net_x11,
      bus_out => concatenate_y_net_x7
    );

  bus_expand1_bc7b7127d5: entity work.bus_expand1_entity_d3e88f3964
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x13,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_425f4fef41: entity work.bus_expand_entity_80976a8778
    port map (
      bus_in => dmisc_q_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_34bc85c095: entity work.bus_mult_entity_99e641fc1a
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x441,
      clk_1 => clk_1_sg_x441,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_2e10b7d4ca: entity work.coeff_gen_entity_2e10b7d4ca
    port map (
      ce_1 => ce_1_sg_x441,
      clk_1 => clk_1_sg_x441,
      misci => concatenate_y_net_x7,
      rst => delay_sync_q_net_x6,
      misco => dmisc_q_net_x4,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct/butterfly0_0"

entity butterfly0_0_entity_a453e08331 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly0_0_entity_a453e08331;

architecture structural of butterfly0_0_entity_a453e08331 is
  signal ce_1_sg_x442: std_logic;
  signal clk_1_sg_x442: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay_sync_q_net_x7: std_logic;
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x14: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x15: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic;
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret1_output_port_net_x14 <= a;
  reinterpret1_output_port_net_x15 <= b;
  ce_1_sg_x442 <= ce_1;
  clk_1_sg_x442 <= clk_1;
  slice0_y_net_x1 <= shift;
  delay_sync_q_net_x7 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x4;
  a_bw_x0 <= reinterpret2_output_port_net_x2;
  of_x0 <= reinterpret1_output_port_net_x5;
  sync_out <= delay0_q_net_x0;

  bus_add_6764abff63: entity work.bus_add_entity_6a0ce06054
    port map (
      a => reinterpret1_output_port_net_x13,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      dout => concatenate_y_net_x3
    );

  bus_convert_8d645699ea: entity work.bus_convert_entity_5667cece5a
    port map (
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_f02a77819b: entity work.bus_expand_entity_bc75ac6922
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x4,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_norm0_6e4813f793: entity work.bus_norm0_entity_f230e61519
    port map (
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_710ab02d4e: entity work.bus_norm1_entity_21ef0b3243
    port map (
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_1c829f60af: entity work.bus_relational_entity_887e6cafc5
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      a_b => reinterpret1_output_port_net_x5
    );

  bus_scale_03e749c491: entity work.bus_scale_entity_0129abca9b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_ff17bf3a93: entity work.bus_sub_entity_edf18c6fe0
    port map (
      a => reinterpret1_output_port_net_x13,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x442,
      clk => clk_1_sg_x442,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_5d09de4efb: entity work.munge_entity_c2eb754908
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_5ffc07bb3d: entity work.mux_entity_164cb2e572
    port map (
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_e786a5d86f: entity work.shift_replicate_entity_9141b1bb8a
    port map (
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_bf87daf796: entity work.twiddle_entity_bf87daf796
    port map (
      ai => reinterpret1_output_port_net_x14,
      bi => reinterpret1_output_port_net_x15,
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      sync_in => delay_sync_q_net_x7,
      ao => reinterpret1_output_port_net_x13,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_direct"

entity fft_direct_entity_b64ac9e887 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in00: in std_logic_vector(35 downto 0); 
    in01: in std_logic_vector(35 downto 0); 
    shift: in std_logic; 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out00: out std_logic_vector(35 downto 0); 
    out01: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_direct_entity_b64ac9e887;

architecture structural of fft_direct_entity_b64ac9e887 is
  signal ce_1_sg_x443: std_logic;
  signal clk_1_sg_x443: std_logic;
  signal delay0_q_net_x1: std_logic;
  signal delay_sync_q_net_x8: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic;
  signal reinterpret1_output_port_net_x14: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x15: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x16: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice_y_net_x0: std_logic;

begin
  ce_1_sg_x443 <= ce_1;
  clk_1_sg_x443 <= clk_1;
  reinterpret1_output_port_net_x7 <= in00;
  reinterpret1_output_port_net_x8 <= in01;
  slice_y_net_x0 <= shift;
  delay_sync_q_net_x8 <= sync;
  of_x0 <= reinterpret1_output_port_net_x10;
  out00 <= reinterpret1_output_port_net_x16;
  out01 <= reinterpret1_output_port_net_x9;
  sync_out <= delay0_q_net_x1;

  abus_821f3ec42c: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => reinterpret1_output_port_net_x7,
      bus_out => reinterpret1_output_port_net_x14
    );

  adebus0_0_d2e1ef33bc: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => reinterpret2_output_port_net_x2,
      msb_lsb_out1 => reinterpret1_output_port_net_x16
    );

  bbus_5e2218ae1a: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => reinterpret1_output_port_net_x8,
      bus_out => reinterpret1_output_port_net_x15
    );

  bdebus0_0_b4c1f69ad1: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => reinterpret1_output_port_net_x5,
      msb_lsb_out1 => reinterpret1_output_port_net_x9
    );

  butterfly0_0_a453e08331: entity work.butterfly0_0_entity_a453e08331
    port map (
      a => reinterpret1_output_port_net_x14,
      b => reinterpret1_output_port_net_x15,
      ce_1 => ce_1_sg_x443,
      clk_1 => clk_1_sg_x443,
      shift => slice0_y_net_x1,
      sync_in => delay_sync_q_net_x8,
      a_bw => reinterpret1_output_port_net_x5,
      a_bw_x0 => reinterpret2_output_port_net_x2,
      of_x0 => reinterpret1_output_port_net_x10,
      sync_out => delay0_q_net_x1
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => slice_y_net_x0,
      y(0) => slice0_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/addr_expand"

entity addr_expand_entity_1a307126c1 is
  port (
    bus_in: in std_logic_vector(17 downto 0); 
    lsb_out1: out std_logic_vector(8 downto 0); 
    msb_out2: out std_logic_vector(8 downto 0)
  );
end addr_expand_entity_1a307126c1;

architecture structural of addr_expand_entity_1a307126c1 is
  signal concatenate_y_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(8 downto 0);
  signal slice1_y_net: std_logic_vector(8 downto 0);
  signal slice2_y_net: std_logic_vector(8 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 18,
      y_width => 9
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 17,
      x_width => 18,
      y_width => 9
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/addr_replicate/bussify"

entity bussify_entity_3a903bd914 is
  port (
    in1: in std_logic_vector(8 downto 0); 
    in2: in std_logic_vector(8 downto 0); 
    bus_out: out std_logic_vector(17 downto 0)
  );
end bussify_entity_3a903bd914;

architecture structural of bussify_entity_3a903bd914 is
  signal concatenate_y_net_x1: std_logic_vector(17 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(8 downto 0);
  signal din0_1_q_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(8 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  din0_1_q_net_x0 <= in2;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_f2f6490a28
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_1_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/addr_replicate"

entity addr_replicate_entity_a0f3569ab5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end addr_replicate_entity_a0f3569ab5;

architecture structural of addr_replicate_entity_a0f3569ab5 is
  signal ce_1_sg_x444: std_logic;
  signal clk_1_sg_x444: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(17 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(8 downto 0);
  signal din0_1_q_net_x0: std_logic_vector(8 downto 0);
  signal map_mux_y_net_x0: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x444 <= ce_1;
  clk_1_sg_x444 <= clk_1;
  map_mux_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_3a903bd914: entity work.bussify_entity_3a903bd914
    port map (
      in1 => din0_0_q_net_x0,
      in2 => din0_1_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x444,
      clk => clk_1_sg_x444,
      d => map_mux_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x444,
      clk => clk_1_sg_x444,
      d => map_mux_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/buf0"

entity buf0_entity_86461d58d5 is
  port (
    addr: in std_logic_vector(8 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(35 downto 0)
  );
end buf0_entity_86461d58d5;

architecture structural of buf0_entity_86461d58d5 is
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x445: std_logic;
  signal clk_1_sg_x445: std_logic;
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(8 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net_x2: std_logic;

begin
  reinterpret2_output_port_net_x3 <= addr;
  ce_1_sg_x445 <= ce_1;
  clk_1_sg_x445 <= clk_1;
  delay_din0_q_net_x0 <= din;
  slice2_y_net_x2 <= we;
  dout <= reinterpret1_output_port_net_x5;

  bram0: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_59ac5a13d6d08875",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x445,
      clk => clk_1_sg_x445,
      data_in => reinterpret1_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  ddin: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => delay_din0_q_net_x0,
      q => ddin_q_net_x0
    );

  debus_addr_5a7cc992d4: entity work.addr_expand_entity_ae2730480b
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_din_7b3da9e2da: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => ddin_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  debus_we_364ad89f72: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  din_bussify_cd40c28a8c: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => bram0_data_out_net_x0,
      bus_out => reinterpret1_output_port_net_x5
    );

  rep_addr_64dc19aa3e: entity work.addr_replicate_entity_726e28d91c
    port map (
      in_x0 => reinterpret2_output_port_net_x3,
      out_x0 => reinterpret1_output_port_net_x3
    );

  rep_we_bfffa3e054: entity work.we_replicate_entity_ce348375d4
    port map (
      in_x0 => slice2_y_net_x2,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/current_map/rep_addra"

entity rep_addra_entity_1368fc9b05 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(8 downto 0)
  );
end rep_addra_entity_1368fc9b05;

architecture structural of rep_addra_entity_1368fc9b05 is
  signal ce_1_sg_x447: std_logic;
  signal clk_1_sg_x447: std_logic;
  signal daddr1_q_net_x0: std_logic_vector(8 downto 0);
  signal din0_0_q_net: std_logic_vector(8 downto 0);
  signal din1_0_q_net: std_logic_vector(8 downto 0);
  signal din2_0_q_net: std_logic_vector(8 downto 0);
  signal din3_0_q_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x447 <= ce_1;
  clk_1_sg_x447 <= clk_1;
  daddr1_q_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_109f23ffc6: entity work.bussify_entity_f6dc993287
    port map (
      in1 => din3_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x447,
      clk => clk_1_sg_x447,
      clr => '0',
      d => daddr1_q_net_x0,
      q => din0_0_q_net
    );

  din1_0: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x447,
      clk => clk_1_sg_x447,
      clr => '0',
      d => din0_0_q_net,
      q => din1_0_q_net
    );

  din2_0: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x447,
      clk => clk_1_sg_x447,
      clr => '0',
      d => din1_0_q_net,
      q => din2_0_q_net
    );

  din3_0: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x447,
      clk => clk_1_sg_x447,
      clr => '0',
      d => din2_0_q_net,
      q => din3_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/current_map/rep_wea"

entity rep_wea_entity_f8bdd6b4fa is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end rep_wea_entity_f8bdd6b4fa;

architecture structural of rep_wea_entity_f8bdd6b4fa is
  signal ce_1_sg_x448: std_logic;
  signal clk_1_sg_x448: std_logic;
  signal den_q_net_x0: std_logic;
  signal din0_0_q_net: std_logic;
  signal din1_0_q_net: std_logic;
  signal din2_0_q_net: std_logic;
  signal din3_0_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic;

begin
  ce_1_sg_x448 <= ce_1;
  clk_1_sg_x448 <= clk_1;
  den_q_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x2;

  bussify_3be0dc5d85: entity work.bussify_entity_0478673500
    port map (
      in1 => din3_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x2
    );

  din0_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x448,
      clk => clk_1_sg_x448,
      clr => '0',
      d(0) => den_q_net_x0,
      q(0) => din0_0_q_net
    );

  din1_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x448,
      clk => clk_1_sg_x448,
      clr => '0',
      d(0) => din0_0_q_net,
      q(0) => din1_0_q_net
    );

  din2_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x448,
      clk => clk_1_sg_x448,
      clr => '0',
      d(0) => din1_0_q_net,
      q(0) => din2_0_q_net
    );

  din3_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x448,
      clk => clk_1_sg_x448,
      d(0) => din2_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din3_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/current_map"

entity current_map_entity_93185f7f48 is
  port (
    addra: in std_logic_vector(8 downto 0); 
    addrb: in std_logic_vector(8 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dina: in std_logic_vector(8 downto 0); 
    dinb: in std_logic_vector(8 downto 0); 
    wea: in std_logic; 
    web: in std_logic; 
    b: out std_logic_vector(8 downto 0)
  );
end current_map_entity_93185f7f48;

architecture structural of current_map_entity_93185f7f48 is
  signal blank_op_net_x0: std_logic_vector(8 downto 0);
  signal bram0_doutb_net_x0: std_logic_vector(8 downto 0);
  signal ce_1_sg_x449: std_logic;
  signal clk_1_sg_x449: std_logic;
  signal daddr0_q_net_x2: std_logic_vector(8 downto 0);
  signal daddr1_q_net_x1: std_logic_vector(8 downto 0);
  signal ddina_q_net_x0: std_logic_vector(8 downto 0);
  signal ddinb_q_net_x0: std_logic_vector(8 downto 0);
  signal den_q_net_x1: std_logic;
  signal dnew_map_q_net_x0: std_logic_vector(8 downto 0);
  signal never_op_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic;
  signal reinterpret1_output_port_net_x9: std_logic;
  signal slice1_y_net_x0: std_logic;
  signal slice1_y_net_x1: std_logic;

begin
  daddr1_q_net_x1 <= addra;
  daddr0_q_net_x2 <= addrb;
  ce_1_sg_x449 <= ce_1;
  clk_1_sg_x449 <= clk_1;
  dnew_map_q_net_x0 <= dina;
  blank_op_net_x0 <= dinb;
  den_q_net_x1 <= wea;
  never_op_net_x2 <= web;
  b <= reinterpret1_output_port_net_x10;

  b_bussify_ef50f53bac: entity work.bussify_entity_f6dc993287
    port map (
      in1 => bram0_doutb_net_x0,
      bus_out => reinterpret1_output_port_net_x10
    );

  bram0: entity work.xldpram_blast_0209_dds305
    generic map (
      c_address_width_a => 9,
      c_address_width_b => 9,
      c_width_a => 9,
      c_width_b => 9,
      core_name0 => "bmg_72_71ee2287586fd244",
      latency => 2
    )
    port map (
      a_ce => ce_1_sg_x449,
      a_clk => clk_1_sg_x449,
      addra => reinterpret1_output_port_net_x2,
      addrb => reinterpret1_output_port_net_x3,
      b_ce => ce_1_sg_x449,
      b_clk => clk_1_sg_x449,
      dina => reinterpret1_output_port_net_x4,
      dinb => reinterpret1_output_port_net_x5,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => slice1_y_net_x0,
      web(0) => slice1_y_net_x1,
      doutb => bram0_doutb_net_x0
    );

  ddina: entity work.delay_a99984b20e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => dnew_map_q_net_x0,
      q => ddina_q_net_x0
    );

  ddinb: entity work.delay_a99984b20e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blank_op_net_x0,
      q => ddinb_q_net_x0
    );

  debus_addra_482f90dcba: entity work.addr_expand_entity_ae2730480b
    port map (
      bus_in => reinterpret1_output_port_net_x6,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_addrb_eee6d64d4d: entity work.addr_expand_entity_ae2730480b
    port map (
      bus_in => reinterpret1_output_port_net_x7,
      msb_lsb_out1 => reinterpret1_output_port_net_x3
    );

  debus_dina_9df518091a: entity work.addr_expand_entity_ae2730480b
    port map (
      bus_in => ddina_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x4
    );

  debus_dinb_04e61be74f: entity work.addr_expand_entity_ae2730480b
    port map (
      bus_in => ddinb_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x5
    );

  debus_wea_29670d05d5: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x8,
      msb_lsb_out1 => slice1_y_net_x0
    );

  debus_web_f092fd58db: entity work.debus_we_entity_e05f42feb5
    port map (
      bus_in => reinterpret1_output_port_net_x9,
      msb_lsb_out1 => slice1_y_net_x1
    );

  rep_addra_1368fc9b05: entity work.rep_addra_entity_1368fc9b05
    port map (
      ce_1 => ce_1_sg_x449,
      clk_1 => clk_1_sg_x449,
      in_x0 => daddr1_q_net_x1,
      out_x0 => reinterpret1_output_port_net_x6
    );

  rep_addrb_ab1ab4da2a: entity work.addr_replicate_entity_726e28d91c
    port map (
      in_x0 => daddr0_q_net_x2,
      out_x0 => reinterpret1_output_port_net_x7
    );

  rep_wea_f8bdd6b4fa: entity work.rep_wea_entity_f8bdd6b4fa
    port map (
      ce_1 => ce_1_sg_x449,
      clk_1 => clk_1_sg_x449,
      in_x0 => den_q_net_x1,
      out_x0 => reinterpret1_output_port_net_x8
    );

  rep_web_ff8d053fb1: entity work.we_replicate_entity_ce348375d4
    port map (
      in_x0 => never_op_net_x2,
      out_x0 => reinterpret1_output_port_net_x9
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/edge_detect"

entity edge_detect_entity_64e4b1b900 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect_entity_64e4b1b900;

architecture structural of edge_detect_entity_64e4b1b900 is
  signal ce_1_sg_x450: std_logic;
  signal clk_1_sg_x450: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal msb_y_net_x0: std_logic;

begin
  ce_1_sg_x450 <= ce_1;
  clk_1_sg_x450 <= clk_1;
  msb_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x450,
      clk => clk_1_sg_x450,
      d(0) => msb_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x450,
      clk => clk_1_sg_x450,
      clr => '0',
      ip(0) => msb_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder/we_expand"

entity we_expand_entity_edaecf01af is
  port (
    bus_in: in std_logic_vector(1 downto 0); 
    lsb_out1: out std_logic; 
    msb_out2: out std_logic
  );
end we_expand_entity_edaecf01af;

architecture structural of we_expand_entity_edaecf01af is
  signal concatenate_y_net_x0: std_logic_vector(1 downto 0);
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net_x3: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= slice1_y_net_x3;
  msb_out2 <= slice2_y_net_x3;

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net_x3
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/reorder"

entity reorder_entity_dc62965e8e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    din1: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0); 
    dout1: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end reorder_entity_dc62965e8e;

architecture structural of reorder_entity_dc62965e8e is
  signal blank_op_net_x0: std_logic_vector(8 downto 0);
  signal ce_1_sg_x453: std_logic;
  signal clk_1_sg_x453: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(17 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(1 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal daddr0_q_net_x2: std_logic_vector(8 downto 0);
  signal daddr1_q_net_x1: std_logic_vector(8 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_q_net_x2: std_logic;
  signal delay_we0_q_net: std_logic;
  signal delay_we2_q_net_x0: std_logic;
  signal den_q_net_x1: std_logic;
  signal dmap_src_q_net: std_logic;
  signal dnew_map_q_net_x0: std_logic_vector(8 downto 0);
  signal dsync_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal en_op_net_x0: std_logic;
  signal map_mod_data_net: std_logic_vector(8 downto 0);
  signal map_mux_y_net_x0: std_logic_vector(8 downto 0);
  signal map_src_q_net: std_logic;
  signal msb_y_net_x0: std_logic;
  signal mux21_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x0: std_logic;
  signal never_op_net_x2: std_logic;
  signal or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(8 downto 0);
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net_x3: std_logic;

begin
  ce_1_sg_x453 <= ce_1;
  clk_1_sg_x453 <= clk_1;
  delay_q_net_x1 <= din0;
  mux21_y_net_x0 <= din1;
  en_op_net_x0 <= en;
  delay_q_net_x2 <= sync;
  dout0 <= reinterpret1_output_port_net_x11;
  dout1 <= reinterpret1_output_port_net_x12;
  sync_out <= post_sync_delay_q_net_x0;

  addr_expand_1a307126c1: entity work.addr_expand_entity_1a307126c1
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  addr_replicate_a0f3569ab5: entity work.addr_replicate_entity_a0f3569ab5
    port map (
      ce_1 => ce_1_sg_x453,
      clk_1 => clk_1_sg_x453,
      in_x0 => map_mux_y_net_x0,
      out_x0 => concatenate_y_net_x2
    );

  blank: entity work.constant_fd85eb7067
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => blank_op_net_x0
    );

  buf0_86461d58d5: entity work.buf0_entity_86461d58d5
    port map (
      addr => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x453,
      clk_1 => clk_1_sg_x453,
      din => delay_din0_q_net_x0,
      we => slice2_y_net_x3,
      dout => reinterpret1_output_port_net_x11
    );

  buf1_39b3d3017b: entity work.buf0_entity_86461d58d5
    port map (
      addr => reinterpret1_output_port_net_x7,
      ce_1 => ce_1_sg_x453,
      clk_1 => clk_1_sg_x453,
      din => delay_din1_q_net_x0,
      we => slice1_y_net_x3,
      dout => reinterpret1_output_port_net_x12
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      en(0) => en_op_net_x0,
      rst(0) => delay_q_net_x2,
      op => counter_op_net
    );

  current_map_93185f7f48: entity work.current_map_entity_93185f7f48
    port map (
      addra => daddr1_q_net_x1,
      addrb => daddr0_q_net_x2,
      ce_1 => ce_1_sg_x453,
      clk_1 => clk_1_sg_x453,
      dina => dnew_map_q_net_x0,
      dinb => blank_op_net_x0,
      wea => den_q_net_x1,
      web => never_op_net_x2,
      b => reinterpret1_output_port_net_x10
    );

  daddr0: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      d => counter_op_net,
      q => daddr0_q_net_x2
    );

  daddr1: entity work.delay_6104cbef7a
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      d => daddr0_q_net_x2,
      q => daddr1_q_net_x1
    );

  delay_din0: entity work.delay_7439478232
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      d => delay_q_net_x1,
      q => delay_din0_q_net_x0
    );

  delay_din1: entity work.delay_7439478232
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      d => mux21_y_net_x0,
      q => delay_din1_q_net_x0
    );

  delay_we0: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      d(0) => en_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we0_q_net
    );

  delay_we2: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      d(0) => en_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we2_q_net_x0
    );

  den: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      d(0) => en_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => den_q_net_x1
    );

  dmap_src: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      d(0) => map_src_q_net,
      q(0) => dmap_src_q_net
    );

  dnew_map: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      d => map_mod_data_net,
      q => dnew_map_q_net_x0
    );

  dsync: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      d(0) => delay_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => dsync_q_net
    );

  edge_detect_64e4b1b900: entity work.edge_detect_entity_64e4b1b900
    port map (
      ce_1 => ce_1_sg_x453,
      clk_1 => clk_1_sg_x453,
      in_x0 => msb_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  map_mod: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 9,
      core_name0 => "bmg_72_408f0cc582283812",
      latency => 1
    )
    port map (
      addr => map_mux_y_net_x0,
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      en => "1",
      rst => "0",
      data => map_mod_data_net
    );

  map_mux: entity work.mux_c839fa4342
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      d0 => daddr1_q_net_x1,
      d1 => reinterpret1_output_port_net_x10,
      sel(0) => dmap_src_q_net,
      y => map_mux_y_net_x0
    );

  map_src: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      d(0) => edge_op_y_net_x0,
      en(0) => edge_op_y_net_x0,
      rst(0) => dsync_q_net,
      q(0) => map_src_q_net
    );

  msb: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => msb_y_net_x0
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x2
    );

  or_x0: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => delay_we0_q_net,
      y(0) => or_y_net_x0
    );

  post_sync_delay: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => post_sync_delay_q_net_x0
    );

  pre_sync_delay: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x453,
      clk => clk_1_sg_x453,
      d(0) => delay_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => pre_sync_delay_q_net_x0
    );

  sync_delay_en_d0b051fec3: entity work.sync_delay_en_entity_a6adb921b1
    port map (
      ce_1 => ce_1_sg_x453,
      clk_1 => clk_1_sg_x453,
      en => or_y_net_x0,
      in_x0 => pre_sync_delay_q_net_x0,
      out_x0 => mux_y_net_x0
    );

  we_expand_edaecf01af: entity work.we_expand_entity_edaecf01af
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => slice1_y_net_x3,
      msb_out2 => slice2_y_net_x3
    );

  we_replicate_93fd6810b1: entity work.sel_replicate_entity_6b1abd12c1
    port map (
      ce_1 => ce_1_sg_x453,
      clk_1 => clk_1_sg_x453,
      in_x0 => delay_we2_q_net_x0,
      out_x0 => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/square_transposer/db0"

entity db0_entity_bd24b067ff is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end db0_entity_bd24b067ff;

architecture structural of db0_entity_bd24b067ff is
  signal ce_1_sg_x455: std_logic;
  signal clk_1_sg_x455: std_logic;
  signal delay_q_net_x2: std_logic_vector(35 downto 0);
  signal mux11_y_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x455 <= ce_1;
  clk_1_sg_x455 <= clk_1;
  mux11_y_net_x1 <= din;
  dout <= delay_q_net_x2;

  delay: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x455,
      clk => clk_1_sg_x455,
      clr => '0',
      d => mux11_y_net_x1,
      q => delay_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/square_transposer/dsync"

entity dsync_entity_c5140ac835 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic; 
    dout: out std_logic
  );
end dsync_entity_c5140ac835;

architecture structural of dsync_entity_c5140ac835 is
  signal ce_1_sg_x457: std_logic;
  signal clk_1_sg_x457: std_logic;
  signal delay_q_net_x3: std_logic;
  signal delay_sync_q_net_x1: std_logic;

begin
  ce_1_sg_x457 <= ce_1;
  clk_1_sg_x457 <= clk_1;
  delay_sync_q_net_x1 <= din;
  dout <= delay_q_net_x3;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      clr => '0',
      d(0) => delay_sync_q_net_x1,
      q(0) => delay_q_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler/square_transposer"

entity square_transposer_entity_e1dd275553 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in0: in std_logic_vector(35 downto 0); 
    in1: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    out0: out std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end square_transposer_entity_e1dd275553;

architecture structural of square_transposer_entity_e1dd275553 is
  signal ce_1_sg_x458: std_logic;
  signal clk_1_sg_x458: std_logic;
  signal counter_op_net_x0: std_logic;
  signal delay0_q_net_x3: std_logic;
  signal delay_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_q_net_x4: std_logic_vector(35 downto 0);
  signal delay_q_net_x5: std_logic;
  signal delay_sync_q_net_x1: std_logic;
  signal mux11_y_net_x1: std_logic_vector(35 downto 0);
  signal mux21_y_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x458 <= ce_1;
  clk_1_sg_x458 <= clk_1;
  reinterpret1_output_port_net_x3 <= in0;
  reinterpret1_output_port_net_x4 <= in1;
  delay0_q_net_x3 <= sync;
  out0 <= delay_q_net_x4;
  out1 <= mux21_y_net_x2;
  sync_out <= delay_q_net_x5;

  barrel_switcher_37982e80f9: entity work.barrel_switcher_entity_5781b94699
    port map (
      ce_1 => ce_1_sg_x458,
      clk_1 => clk_1_sg_x458,
      in1 => reinterpret1_output_port_net_x3,
      in2 => delay_q_net_x1,
      sel => counter_op_net_x0,
      sync_in => delay0_q_net_x3,
      out1 => mux11_y_net_x1,
      out2 => mux21_y_net_x2,
      sync_out => delay_sync_q_net_x1
    );

  counter: entity work.counter_0009e314f5
    port map (
      ce => ce_1_sg_x458,
      clk => clk_1_sg_x458,
      clr => '0',
      rst(0) => delay0_q_net_x3,
      op(0) => counter_op_net_x0
    );

  db0_bd24b067ff: entity work.db0_entity_bd24b067ff
    port map (
      ce_1 => ce_1_sg_x458,
      clk_1 => clk_1_sg_x458,
      din => mux11_y_net_x1,
      dout => delay_q_net_x4
    );

  df1_6423aeafea: entity work.db0_entity_bd24b067ff
    port map (
      ce_1 => ce_1_sg_x458,
      clk_1 => clk_1_sg_x458,
      din => reinterpret1_output_port_net_x4,
      dout => delay_q_net_x1
    );

  dsync_c5140ac835: entity work.dsync_entity_c5140ac835
    port map (
      ce_1 => ce_1_sg_x458,
      clk_1 => clk_1_sg_x458,
      din => delay_sync_q_net_x1,
      dout => delay_q_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft/fft_unscrambler"

entity fft_unscrambler_entity_6d96c4874c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in00: in std_logic_vector(35 downto 0); 
    in01: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    out00: out std_logic_vector(35 downto 0); 
    out01: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_unscrambler_entity_6d96c4874c;

architecture structural of fft_unscrambler_entity_6d96c4874c is
  signal ce_1_sg_x459: std_logic;
  signal clk_1_sg_x459: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal delay_q_net_x4: std_logic_vector(35 downto 0);
  signal delay_q_net_x5: std_logic;
  signal en_op_net_x0: std_logic;
  signal mux21_y_net_x2: std_logic_vector(35 downto 0);
  signal post_sync_delay_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x19: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x20: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x21: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x22: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x459 <= ce_1;
  clk_1_sg_x459 <= clk_1;
  reinterpret1_output_port_net_x19 <= in00;
  reinterpret1_output_port_net_x20 <= in01;
  delay0_q_net_x4 <= sync;
  out00 <= reinterpret1_output_port_net_x21;
  out01 <= reinterpret1_output_port_net_x22;
  sync_out <= post_sync_delay_q_net_x1;

  bus0_d9f8b2c511: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => reinterpret1_output_port_net_x19,
      bus_out => reinterpret1_output_port_net_x3
    );

  bus1_cf72f3a1c0: entity work.din_bussify_entity_e7e03fab4e
    port map (
      in1 => reinterpret1_output_port_net_x20,
      bus_out => reinterpret1_output_port_net_x4
    );

  debus0_d23b6c3eb8: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => reinterpret1_output_port_net_x11,
      msb_lsb_out1 => reinterpret1_output_port_net_x21
    );

  debus1_705f47b229: entity work.debus_din_entity_5e9f234dee
    port map (
      bus_in => reinterpret1_output_port_net_x12,
      msb_lsb_out1 => reinterpret1_output_port_net_x22
    );

  en: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_op_net_x0
    );

  reorder_dc62965e8e: entity work.reorder_entity_dc62965e8e
    port map (
      ce_1 => ce_1_sg_x459,
      clk_1 => clk_1_sg_x459,
      din0 => delay_q_net_x4,
      din1 => mux21_y_net_x2,
      en => en_op_net_x0,
      sync => delay_q_net_x5,
      dout0 => reinterpret1_output_port_net_x11,
      dout1 => reinterpret1_output_port_net_x12,
      sync_out => post_sync_delay_q_net_x1
    );

  square_transposer_e1dd275553: entity work.square_transposer_entity_e1dd275553
    port map (
      ce_1 => ce_1_sg_x459,
      clk_1 => clk_1_sg_x459,
      in0 => reinterpret1_output_port_net_x3,
      in1 => reinterpret1_output_port_net_x4,
      sync => delay0_q_net_x4,
      out0 => delay_q_net_x4,
      out1 => mux21_y_net_x2,
      sync_out => delay_q_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft"

entity fft_entity_7b95c97a50 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in00: in std_logic_vector(35 downto 0); 
    in01: in std_logic_vector(35 downto 0); 
    shift: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out00: out std_logic_vector(35 downto 0); 
    out01: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_entity_7b95c97a50;

architecture structural of fft_entity_7b95c97a50 is
  signal ce_1_sg_x460: std_logic;
  signal clk_1_sg_x460: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal delay12_q_net_x3: std_logic;
  signal delay20_q_net_x2: std_logic_vector(35 downto 0);
  signal delay21_q_net_x2: std_logic_vector(35 downto 0);
  signal delay_sync_q_net_x8: std_logic;
  signal logical1_y_net_x10: std_logic;
  signal of_or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x2: std_logic;
  signal reint1_output_port_net_x11: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic;
  signal reinterpret1_output_port_net_x19: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x20: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x23: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x24: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic;

begin
  ce_1_sg_x460 <= ce_1;
  clk_1_sg_x460 <= clk_1;
  delay21_q_net_x2 <= in00;
  delay20_q_net_x2 <= in01;
  reint1_output_port_net_x11 <= shift;
  delay12_q_net_x3 <= sync;
  of_x0 <= of_or_y_net_x0;
  out00 <= reinterpret1_output_port_net_x23;
  out01 <= reinterpret1_output_port_net_x24;
  sync_out <= post_sync_delay_q_net_x2;

  fft_biplex_6ab2ff18f4: entity work.fft_biplex_entity_6ab2ff18f4
    port map (
      ce_1 => ce_1_sg_x460,
      clk_1 => clk_1_sg_x460,
      pol00_in => delay21_q_net_x2,
      pol01_in => delay20_q_net_x2,
      shift => reint1_output_port_net_x11,
      sync => delay12_q_net_x3,
      of_x0 => logical1_y_net_x10,
      pol00_out => reinterpret1_output_port_net_x7,
      pol01_out => reinterpret1_output_port_net_x8,
      sync_out => delay_sync_q_net_x8
    );

  fft_direct_b64ac9e887: entity work.fft_direct_entity_b64ac9e887
    port map (
      ce_1 => ce_1_sg_x460,
      clk_1 => clk_1_sg_x460,
      in00 => reinterpret1_output_port_net_x7,
      in01 => reinterpret1_output_port_net_x8,
      shift => slice_y_net_x0,
      sync => delay_sync_q_net_x8,
      of_x0 => reinterpret1_output_port_net_x10,
      out00 => reinterpret1_output_port_net_x19,
      out01 => reinterpret1_output_port_net_x20,
      sync_out => delay0_q_net_x4
    );

  fft_unscrambler_6d96c4874c: entity work.fft_unscrambler_entity_6d96c4874c
    port map (
      ce_1 => ce_1_sg_x460,
      clk_1 => clk_1_sg_x460,
      in00 => reinterpret1_output_port_net_x19,
      in01 => reinterpret1_output_port_net_x20,
      sync => delay0_q_net_x4,
      out00 => reinterpret1_output_port_net_x23,
      out01 => reinterpret1_output_port_net_x24,
      sync_out => post_sync_delay_q_net_x2
    );

  of_or: entity work.logical_0309b30f97
    port map (
      ce => ce_1_sg_x460,
      clk => clk_1_sg_x460,
      clr => '0',
      d0(0) => reinterpret1_output_port_net_x10,
      d1(0) => logical1_y_net_x10,
      y(0) => of_or_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x11,
      y(0) => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft_shift"

entity fft_shift_entity_16bfd57803 is
  port (
    blast_0209_dds305_fft_shift_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end fft_shift_entity_16bfd57803;

architecture structural of fft_shift_entity_16bfd57803 is
  signal blast_0209_dds305_fft_shift_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x12: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_fft_shift_user_data_out_net_x0 <= blast_0209_dds305_fft_shift_user_data_out;
  in_reg <= reint1_output_port_net_x12;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_fft_shift_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x12
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft_snap/add_gen"

entity add_gen_entity_c38f311a87 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    cont: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    go: in std_logic; 
    init: in std_logic; 
    we: in std_logic; 
    add: out std_logic_vector(8 downto 0); 
    dout: out std_logic_vector(63 downto 0); 
    status: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end add_gen_entity_c38f311a87;

architecture structural of add_gen_entity_c38f311a87 is
  signal add_gen_op_net: std_logic_vector(12 downto 0);
  signal ce_1_sg_x462: std_logic;
  signal clk_1_sg_x462: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal convert_dout_net: std_logic_vector(18 downto 0);
  signal data_choice_y_net_x0: std_logic_vector(63 downto 0);
  signal delay1_q_net: std_logic_vector(11 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net_x0: std_logic_vector(63 downto 0);
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register5_q_net: std_logic;
  signal register6_q_net_x0: std_logic;
  signal shift_op_net: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(11 downto 0);
  signal slice2_y_net_x0: std_logic_vector(8 downto 0);
  signal slice3_y_net_x0: std_logic;
  signal we_choice_y_net_x0: std_logic;

begin
  ce_1_sg_x462 <= ce_1;
  clk_1_sg_x462 <= clk_1;
  never_op_net_x0 <= cont;
  data_choice_y_net_x0 <= din;
  register6_q_net_x0 <= go;
  edge_op_y_net_x1 <= init;
  we_choice_y_net_x0 <= we;
  add <= slice2_y_net_x0;
  dout <= delay6_q_net_x0;
  status <= concat_y_net_x0;
  we_o <= logical6_y_net_x0;

  add_gen: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_f0cd8887791c131a",
      op_arith => xlUnsigned,
      op_width => 13
    )
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      en(0) => logical6_y_net_x0,
      rst(0) => delay4_q_net,
      op => add_gen_op_net
    );

  concat: entity work.concat_1d665a7331
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => shift_op_net,
      in1(0) => inverter_op_net,
      in2 => delay1_q_net,
      y => concat_y_net_x0
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      din(0) => register5_q_net,
      en => "1",
      dout => convert_dout_net
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d(0) => delay4_q_net,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_87cc993d41
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d => slice1_y_net,
      q => delay1_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d(0) => never_op_net_x0,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d(0) => edge_op_y_net_x1,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_e2d047c154
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d => data_choice_y_net_x0,
      q => delay6_q_net_x0
    );

  edge_detect_3debde31b9: entity work.edge_detect_entity_27b9bc22ff
    port map (
      ce_1 => ce_1_sg_x462,
      clk_1 => clk_1_sg_x462,
      in_x0 => slice3_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_6844eee868
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      ip(0) => register5_q_net,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      ip(0) => edge_op_y_net_x0,
      op(0) => inverter1_op_net
    );

  logical1: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d0(0) => we_choice_y_net_x0,
      d1(0) => register6_q_net_x0,
      y(0) => logical1_y_net
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay3_q_net,
      d1(0) => inverter1_op_net,
      y(0) => logical4_y_net
    );

  logical6: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register5_q_net,
      d1(0) => logical4_y_net,
      d2(0) => logical1_y_net,
      y(0) => logical6_y_net_x0
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"1"
    )
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      d(0) => delay3_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => delay_q_net,
      q(0) => register5_q_net
    );

  shift: entity work.shift_892c2104f7
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      ip => convert_dout_net,
      op => shift_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 13,
      y_width => 12
    )
    port map (
      x => add_gen_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 11,
      x_width => 13,
      y_width => 9
    )
    port map (
      x => add_gen_op_net,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 12,
      x_width => 13,
      y_width => 1
    )
    port map (
      x => add_gen_op_net,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft_snap/bram"

entity bram_entity_5262375502 is
  port (
    addr: in std_logic_vector(8 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(63 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(8 downto 0); 
    convert_din1_x0: out std_logic_vector(63 downto 0); 
    convert_we_x0: out std_logic
  );
end bram_entity_5262375502;

architecture structural of bram_entity_5262375502 is
  signal add_del_q_net_x1: std_logic_vector(8 downto 0);
  signal ce_1_sg_x467: std_logic;
  signal clk_1_sg_x467: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(8 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(63 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(63 downto 0);
  signal mux_y_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(63 downto 0);
  signal we_del_q_net_x0: std_logic;

begin
  add_del_q_net_x1 <= addr;
  ce_1_sg_x467 <= ce_1;
  clk_1_sg_x467 <= clk_1;
  dat_del_q_net_x1 <= data_in;
  we_del_q_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_5ee8849f3b: entity work.calc_add_entity_bd3853bc75
    port map (
      ce_1 => ce_1_sg_x467,
      clk_1 => clk_1_sg_x467,
      in_x0 => add_del_q_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 9,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 9,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x467,
      clk => clk_1_sg_x467,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x467,
      clk => clk_1_sg_x467,
      clr => '0',
      din => reinterpret_out_output_port_net_x0,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x467,
      clk => clk_1_sg_x467,
      clr => '0',
      din(0) => we_del_q_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

  munge_in_142a8d8e53: entity work.munge_in_entity_b453ddae89
    port map (
      din => dat_del_q_net_x1,
      dout => reinterpret_out_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft_snap/ctrl"

entity ctrl_entity_fbb6432d5c is
  port (
    blast_0209_dds305_fft_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_fbb6432d5c;

architecture structural of ctrl_entity_fbb6432d5c is
  signal blast_0209_dds305_fft_snap_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_fft_snap_ctrl_user_data_out_net_x0 <= blast_0209_dds305_fft_snap_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_fft_snap_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft_snap"

entity fft_snap_entity_6f40b6873d is
  port (
    blast_0209_dds305_fft_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    bram: out std_logic_vector(8 downto 0); 
    bram_x0: out std_logic_vector(63 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0)
  );
end fft_snap_entity_6f40b6873d;

architecture structural of fft_snap_entity_6f40b6873d is
  signal add_del_q_net_x1: std_logic_vector(8 downto 0);
  signal blast_0209_dds305_fft_snap_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal cast_dout_net_x1: std_logic_vector(63 downto 0);
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x469: std_logic;
  signal clk_1_sg_x469: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal constant1_op_net_x2: std_logic;
  signal convert_addr_dout_net_x1: std_logic_vector(8 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(63 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(63 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(63 downto 0);
  signal delay3_q_net_x0: std_logic_vector(63 downto 0);
  signal delay5_q_net_x1: std_logic;
  signal delay6_q_net_x0: std_logic_vector(63 downto 0);
  signal edge_op_y_net_x4: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal ri_output_port_net: std_logic_vector(63 downto 0);
  signal slice2_y_net_x0: std_logic_vector(8 downto 0);
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  blast_0209_dds305_fft_snap_ctrl_user_data_out_net_x1 <= blast_0209_dds305_fft_snap_ctrl_user_data_out;
  ce_1_sg_x469 <= ce_1;
  clk_1_sg_x469 <= clk_1;
  delay3_q_net_x0 <= din;
  delay5_q_net_x1 <= trig;
  constant1_op_net_x2 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= cast_gw_dout_net_x1;

  add_del: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x469,
      clk => clk_1_sg_x469,
      clr => '0',
      d => slice2_y_net_x0,
      q => add_del_q_net_x1
    );

  add_gen_c38f311a87: entity work.add_gen_entity_c38f311a87
    port map (
      ce_1 => ce_1_sg_x469,
      clk_1 => clk_1_sg_x469,
      cont => never_op_net_x0,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we => we_choice_y_net_x2,
      add => slice2_y_net_x0,
      dout => delay6_q_net_x0,
      status => concat_y_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_165c811fd4: entity work.basic_ctrl_entity_ca2b1806d1
    port map (
      ce_1 => ce_1_sg_x469,
      clk_1 => clk_1_sg_x469,
      ctrl => reint1_output_port_net_x1,
      din => cast_dout_net_x1,
      trig => delay5_q_net_x1,
      we => constant1_op_net_x2,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we_o => we_choice_y_net_x2
    );

  bram_5262375502: entity work.bram_entity_5262375502
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x469,
      clk_1 => clk_1_sg_x469,
      data_in => dat_del_q_net_x1,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x469,
      clk => clk_1_sg_x469,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  ctrl_fbb6432d5c: entity work.ctrl_entity_fbb6432d5c
    port map (
      blast_0209_dds305_fft_snap_ctrl_user_data_out => blast_0209_dds305_fft_snap_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  dat_del: entity work.delay_e2d047c154
    port map (
      ce => ce_1_sg_x469,
      clk => clk_1_sg_x469,
      clr => '0',
      d => delay6_q_net_x0,
      q => dat_del_q_net_x1
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x0
    );

  ri: entity work.reinterpret_9a13f6a2a0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay3_q_net_x0,
      output_port => ri_output_port_net
    );

  status_d2d828812f: entity work.status_entity_1610992e91
    port map (
      ce_1 => ce_1_sg_x469,
      clk_1 => clk_1_sg_x469,
      out_reg => concat_y_net_x1,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

  we_del: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x469,
      clk => clk_1_sg_x469,
      clr => '0',
      d(0) => logical6_y_net_x0,
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/fft_sync"

entity fft_sync_entity_6718faa2ca is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    data_ready: out std_logic
  );
end fft_sync_entity_6718faa2ca;

architecture structural of fft_sync_entity_6718faa2ca is
  signal ce_1_sg_x470: std_logic;
  signal clk_1_sg_x470: std_logic;
  signal constant1_op_net: std_logic_vector(8 downto 0);
  signal constant2_op_net: std_logic;
  signal convert_dout_net: std_logic;
  signal fft_bin_counter_op_net: std_logic_vector(8 downto 0);
  signal logical1_y_net: std_logic;
  signal logical3_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x3: std_logic;
  signal register_q_net: std_logic;
  signal relational3_op_net: std_logic;

begin
  ce_1_sg_x470 <= ce_1;
  clk_1_sg_x470 <= clk_1;
  post_sync_delay_q_net_x3 <= sync_in;
  data_ready <= logical3_y_net_x0;

  constant1: entity work.constant_7e2444d802
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      din(0) => register_q_net,
      en => "1",
      dout(0) => convert_dout_net
    );

  fft_bin_counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_8ff2683c7d2a611c",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      en(0) => convert_dout_net,
      rst(0) => logical1_y_net,
      op => fft_bin_counter_op_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => post_sync_delay_q_net_x3,
      d1(0) => logical3_y_net_x0,
      y(0) => logical1_y_net
    );

  logical3: entity work.logical_89333b145c
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      d0(0) => post_sync_delay_q_net_x3,
      d1(0) => relational3_op_net,
      y(0) => logical3_y_net_x0
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      d(0) => constant2_op_net,
      en(0) => post_sync_delay_q_net_x3,
      rst => "0",
      q(0) => register_q_net
    );

  relational3: entity work.relational_6c3ee657fa
    port map (
      a => fft_bin_counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational3_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/load_bins"

entity load_bins_entity_885e4687bc is
  port (
    blast_0209_dds305_load_bins_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end load_bins_entity_885e4687bc;

architecture structural of load_bins_entity_885e4687bc is
  signal blast_0209_dds305_load_bins_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_load_bins_user_data_out_net_x0 <= blast_0209_dds305_load_bins_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_load_bins_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/mixer_even/ri_to_c1"

entity ri_to_c1_entity_2ed54be1ba is
  port (
    im: in std_logic_vector(18 downto 0); 
    re: in std_logic_vector(18 downto 0); 
    c: out std_logic_vector(37 downto 0)
  );
end ri_to_c1_entity_2ed54be1ba;

architecture structural of ri_to_c1_entity_2ed54be1ba is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub_s_net_x0: std_logic_vector(18 downto 0);
  signal concat_y_net_x3: std_logic_vector(37 downto 0);
  signal force_im_output_port_net: std_logic_vector(18 downto 0);
  signal force_re_output_port_net: std_logic_vector(18 downto 0);

begin
  addsub_s_net_x0 <= im;
  addsub1_s_net_x0 <= re;
  c <= concat_y_net_x3;

  concat: entity work.concat_5a12f8f9be
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x3
    );

  force_im: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub_s_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/mixer_even"

entity mixer_even_entity_93fe5ae968 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_i: in std_logic_vector(17 downto 0); 
    data_q: in std_logic_vector(17 downto 0); 
    dds_i: in std_logic_vector(15 downto 0); 
    dds_q: in std_logic_vector(15 downto 0); 
    mixed_out: out std_logic_vector(37 downto 0)
  );
end mixer_even_entity_93fe5ae968;

architecture structural of mixer_even_entity_93fe5ae968 is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub_s_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x471: std_logic;
  signal clk_1_sg_x471: std_logic;
  signal concat_y_net_x4: std_logic_vector(37 downto 0);
  signal delay36_q_net_x0: std_logic_vector(17 downto 0);
  signal delay37_q_net_x0: std_logic_vector(17 downto 0);
  signal dual_port_ram_doutb_net_x2: std_logic_vector(15 downto 0);
  signal dual_port_ram_doutb_net_x3: std_logic_vector(15 downto 0);
  signal mult1_p_net: std_logic_vector(33 downto 0);
  signal mult2_p_net: std_logic_vector(33 downto 0);
  signal mult3_p_net: std_logic_vector(33 downto 0);
  signal mult4_p_net: std_logic_vector(33 downto 0);

begin
  ce_1_sg_x471 <= ce_1;
  clk_1_sg_x471 <= clk_1;
  delay36_q_net_x0 <= data_i;
  delay37_q_net_x0 <= data_q;
  dual_port_ram_doutb_net_x2 <= dds_i;
  dual_port_ram_doutb_net_x3 <= dds_q;
  mixed_out <= concat_y_net_x4;

  addsub: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 32,
      a_width => 34,
      b_arith => xlSigned,
      b_bin_pt => 32,
      b_width => 34,
      c_has_c_out => 0,
      c_latency => 2,
      c_output_width => 35,
      core_name0 => "addsb_11_0_01f20788c65fc765",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 35,
      latency => 3,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => mult1_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x471,
      clk => clk_1_sg_x471,
      clr => '0',
      en => "1",
      s => addsub_s_net_x0
    );

  addsub1: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 32,
      a_width => 34,
      b_arith => xlSigned,
      b_bin_pt => 32,
      b_width => 34,
      c_has_c_out => 0,
      c_latency => 2,
      c_output_width => 35,
      core_name0 => "addsb_11_0_04b61ccbd787305e",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 35,
      latency => 3,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => mult4_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x471,
      clk => clk_1_sg_x471,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  mult1: entity work.xlmult_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 15,
      b_width => 16,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 16,
      c_baat => 18,
      c_output_width => 34,
      c_type => 0,
      core_name0 => "mult_11_2_ae0f890000d3d152",
      extra_registers => 0,
      multsign => 2,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 32,
      p_width => 34,
      quantization => 1
    )
    port map (
      a => delay37_q_net_x0,
      b => dual_port_ram_doutb_net_x2,
      ce => ce_1_sg_x471,
      clk => clk_1_sg_x471,
      clr => '0',
      core_ce => ce_1_sg_x471,
      core_clk => clk_1_sg_x471,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult1_p_net
    );

  mult2: entity work.xlmult_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 15,
      b_width => 16,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 16,
      c_baat => 18,
      c_output_width => 34,
      c_type => 0,
      core_name0 => "mult_11_2_ae0f890000d3d152",
      extra_registers => 0,
      multsign => 2,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 32,
      p_width => 34,
      quantization => 1
    )
    port map (
      a => delay36_q_net_x0,
      b => dual_port_ram_doutb_net_x3,
      ce => ce_1_sg_x471,
      clk => clk_1_sg_x471,
      clr => '0',
      core_ce => ce_1_sg_x471,
      core_clk => clk_1_sg_x471,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult2_p_net
    );

  mult3: entity work.xlmult_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 15,
      b_width => 16,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 16,
      c_baat => 18,
      c_output_width => 34,
      c_type => 0,
      core_name0 => "mult_11_2_ae0f890000d3d152",
      extra_registers => 0,
      multsign => 2,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 32,
      p_width => 34,
      quantization => 1
    )
    port map (
      a => delay37_q_net_x0,
      b => dual_port_ram_doutb_net_x3,
      ce => ce_1_sg_x471,
      clk => clk_1_sg_x471,
      clr => '0',
      core_ce => ce_1_sg_x471,
      core_clk => clk_1_sg_x471,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult3_p_net
    );

  mult4: entity work.xlmult_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 15,
      b_width => 16,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 16,
      c_baat => 18,
      c_output_width => 34,
      c_type => 0,
      core_name0 => "mult_11_2_ae0f890000d3d152",
      extra_registers => 0,
      multsign => 2,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 32,
      p_width => 34,
      quantization => 1
    )
    port map (
      a => delay36_q_net_x0,
      b => dual_port_ram_doutb_net_x2,
      ce => ce_1_sg_x471,
      clk => clk_1_sg_x471,
      clr => '0',
      core_ce => ce_1_sg_x471,
      core_clk => clk_1_sg_x471,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult4_p_net
    );

  ri_to_c1_2ed54be1ba: entity work.ri_to_c1_entity_2ed54be1ba
    port map (
      im => addsub_s_net_x0,
      re => addsub1_s_net_x0,
      c => concat_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/mixerout/add_gen"

entity add_gen_entity_d2221d4b12 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    cont: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    go: in std_logic; 
    init: in std_logic; 
    we: in std_logic; 
    add: out std_logic_vector(13 downto 0); 
    dout: out std_logic_vector(63 downto 0); 
    status: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end add_gen_entity_d2221d4b12;

architecture structural of add_gen_entity_d2221d4b12 is
  signal add_gen_op_net: std_logic_vector(17 downto 0);
  signal ce_1_sg_x474: std_logic;
  signal clk_1_sg_x474: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal convert_dout_net: std_logic_vector(13 downto 0);
  signal data_choice_y_net_x0: std_logic_vector(63 downto 0);
  signal delay1_q_net: std_logic_vector(16 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net_x0: std_logic_vector(63 downto 0);
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register5_q_net: std_logic;
  signal register6_q_net_x0: std_logic;
  signal shift_op_net: std_logic_vector(13 downto 0);
  signal slice1_y_net: std_logic_vector(16 downto 0);
  signal slice2_y_net_x0: std_logic_vector(13 downto 0);
  signal slice3_y_net_x0: std_logic;
  signal we_choice_y_net_x0: std_logic;

begin
  ce_1_sg_x474 <= ce_1;
  clk_1_sg_x474 <= clk_1;
  never_op_net_x0 <= cont;
  data_choice_y_net_x0 <= din;
  register6_q_net_x0 <= go;
  edge_op_y_net_x1 <= init;
  we_choice_y_net_x0 <= we;
  add <= slice2_y_net_x0;
  dout <= delay6_q_net_x0;
  status <= concat_y_net_x0;
  we_o <= logical6_y_net_x0;

  add_gen: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_dcda492d69e69f28",
      op_arith => xlUnsigned,
      op_width => 18
    )
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      en(0) => logical6_y_net_x0,
      rst(0) => delay4_q_net,
      op => add_gen_op_net
    );

  concat: entity work.concat_20d00231a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => shift_op_net,
      in1(0) => inverter_op_net,
      in2 => delay1_q_net,
      y => concat_y_net_x0
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 14,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      din(0) => register5_q_net,
      en => "1",
      dout => convert_dout_net
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      d(0) => delay4_q_net,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_cdadd4d72d
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      d => slice1_y_net,
      q => delay1_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      d(0) => never_op_net_x0,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      d(0) => edge_op_y_net_x1,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_e2d047c154
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      d => data_choice_y_net_x0,
      q => delay6_q_net_x0
    );

  edge_detect_906aca087f: entity work.edge_detect_entity_27b9bc22ff
    port map (
      ce_1 => ce_1_sg_x474,
      clk_1 => clk_1_sg_x474,
      in_x0 => slice3_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_6844eee868
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      ip(0) => register5_q_net,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      ip(0) => edge_op_y_net_x0,
      op(0) => inverter1_op_net
    );

  logical1: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      d0(0) => we_choice_y_net_x0,
      d1(0) => register6_q_net_x0,
      y(0) => logical1_y_net
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay3_q_net,
      d1(0) => inverter1_op_net,
      y(0) => logical4_y_net
    );

  logical6: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register5_q_net,
      d1(0) => logical4_y_net,
      d2(0) => logical1_y_net,
      y(0) => logical6_y_net_x0
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"1"
    )
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      d(0) => delay3_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => delay_q_net,
      q(0) => register5_q_net
    );

  shift: entity work.shift_1849b165de
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      ip => convert_dout_net,
      op => shift_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 16,
      x_width => 18,
      y_width => 17
    )
    port map (
      x => add_gen_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 16,
      x_width => 18,
      y_width => 14
    )
    port map (
      x => add_gen_op_net,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 17,
      x_width => 18,
      y_width => 1
    )
    port map (
      x => add_gen_op_net,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/mixerout/basic_ctrl"

entity basic_ctrl_entity_3e455a7c1b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ctrl: in std_logic_vector(31 downto 0); 
    din: in std_logic_vector(63 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(63 downto 0); 
    go: out std_logic; 
    init: out std_logic; 
    we_o: out std_logic
  );
end basic_ctrl_entity_3e455a7c1b;

architecture structural of basic_ctrl_entity_3e455a7c1b is
  signal cast_dout_net_x1: std_logic_vector(63 downto 0);
  signal ce_1_sg_x477: std_logic;
  signal clk_1_sg_x477: std_logic;
  signal constant1_op_net: std_logic;
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic;
  signal data_choice_y_net_x2: std_logic_vector(63 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal delay42_q_net_x0: std_logic;
  signal edge_op_y_net_x4: std_logic;
  signal enable_y_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x1: std_logic;
  signal mux2_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal trig_src_y_net: std_logic;
  signal valid_src_y_net: std_logic;
  signal we_choice_y_net_x2: std_logic;

begin
  ce_1_sg_x477 <= ce_1;
  clk_1_sg_x477 <= clk_1;
  reint1_output_port_net_x0 <= ctrl;
  cast_dout_net_x1 <= din;
  delay42_q_net_x0 <= we;
  dout <= data_choice_y_net_x2;
  go <= register6_q_net_x1;
  init <= edge_op_y_net_x4;
  we_o <= we_choice_y_net_x2;

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x477,
      clk => clk_1_sg_x477,
      clr => '0',
      d(0) => enable_y_net,
      q(0) => delay1_q_net_x0
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x477,
      clk => clk_1_sg_x477,
      clr => '0',
      d(0) => trig_src_y_net,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x477,
      clk => clk_1_sg_x477,
      clr => '0',
      d(0) => valid_src_y_net,
      q(0) => delay3_q_net
    );

  dram_munge_6ca6e5d3fc: entity work.dram_munge_entity_cb5befed27
    port map (
      ce_1 => ce_1_sg_x477,
      clk_1 => clk_1_sg_x477,
      din => cast_dout_net_x1,
      init => edge_op_y_net_x4,
      we => mux1_y_net_x1,
      dout => data_choice_y_net_x2,
      we_o => we_choice_y_net_x2
    );

  edge_detect_50eda68477: entity work.edge_detect1_entity_a1c15fd7db
    port map (
      ce_1 => ce_1_sg_x477,
      clk_1 => clk_1_sg_x477,
      in_x0 => delay1_q_net_x0,
      out_x0 => edge_op_y_net_x4
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => enable_y_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x477,
      clk => clk_1_sg_x477,
      clr => '0',
      ip(0) => edge_op_y_net_x4,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux2_y_net,
      d1(0) => inverter_op_net,
      y(0) => logical_y_net
    );

  mux1: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay42_q_net_x0,
      d1(0) => constant2_op_net,
      sel(0) => delay3_q_net,
      y(0) => mux1_y_net_x1
    );

  mux2: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay42_q_net_x0,
      d1(0) => constant1_op_net,
      sel(0) => delay2_q_net,
      y(0) => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x477,
      clk => clk_1_sg_x477,
      d(0) => constant_op_net,
      en(0) => edge_op_y_net_x4,
      rst(0) => logical_y_net,
      q(0) => register1_q_net
    );

  register6: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x477,
      clk => clk_1_sg_x477,
      d(0) => mux2_y_net,
      en(0) => register1_q_net,
      rst(0) => edge_op_y_net_x4,
      q(0) => register6_q_net_x1
    );

  trig_src: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => trig_src_y_net
    );

  valid_src: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => valid_src_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/mixerout/bram/calc_add"

entity calc_add_entity_9798cbd3b9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(13 downto 0); 
    out_x0: out std_logic_vector(13 downto 0)
  );
end calc_add_entity_9798cbd3b9;

architecture structural of calc_add_entity_9798cbd3b9 is
  signal add_del_q_net_x0: std_logic_vector(13 downto 0);
  signal add_sub_s_net: std_logic;
  signal ce_1_sg_x478: std_logic;
  signal clk_1_sg_x478: std_logic;
  signal concat_y_net: std_logic_vector(13 downto 0);
  signal const_op_net: std_logic;
  signal convert_addr_dout_net: std_logic_vector(13 downto 0);
  signal lsw_y_net: std_logic;
  signal manipulate_op_net: std_logic;
  signal msw_y_net: std_logic_vector(12 downto 0);
  signal mux_y_net_x0: std_logic_vector(13 downto 0);

begin
  ce_1_sg_x478 <= ce_1;
  clk_1_sg_x478 <= clk_1;
  add_del_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  add_sub: entity work.addsub_c13097e33e
    port map (
      a(0) => const_op_net,
      b(0) => lsw_y_net,
      ce => ce_1_sg_x478,
      clk => clk_1_sg_x478,
      clr => '0',
      s(0) => add_sub_s_net
    );

  concat: entity work.concat_1658f5c814
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => msw_y_net,
      in1(0) => add_sub_s_net,
      y => concat_y_net
    );

  const: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 14,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 14,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x478,
      clk => clk_1_sg_x478,
      clr => '0',
      din => add_del_q_net_x0,
      en => "1",
      dout => convert_addr_dout_net
    );

  lsw: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 14,
      y_width => 1
    )
    port map (
      x => convert_addr_dout_net,
      y(0) => lsw_y_net
    );

  manipulate: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => manipulate_op_net
    );

  msw: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 13,
      x_width => 14,
      y_width => 13
    )
    port map (
      x => convert_addr_dout_net,
      y => msw_y_net
    );

  mux: entity work.mux_fe93adb3c8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => convert_addr_dout_net,
      d1 => concat_y_net,
      sel(0) => manipulate_op_net,
      y => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/mixerout/bram"

entity bram_entity_c760f89928 is
  port (
    addr: in std_logic_vector(13 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(63 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(13 downto 0); 
    convert_din1_x0: out std_logic_vector(63 downto 0); 
    convert_we_x0: out std_logic
  );
end bram_entity_c760f89928;

architecture structural of bram_entity_c760f89928 is
  signal add_del_q_net_x1: std_logic_vector(13 downto 0);
  signal ce_1_sg_x479: std_logic;
  signal clk_1_sg_x479: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(63 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(63 downto 0);
  signal mux_y_net_x0: std_logic_vector(13 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(63 downto 0);
  signal we_del_q_net_x0: std_logic;

begin
  add_del_q_net_x1 <= addr;
  ce_1_sg_x479 <= ce_1;
  clk_1_sg_x479 <= clk_1;
  dat_del_q_net_x1 <= data_in;
  we_del_q_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_9798cbd3b9: entity work.calc_add_entity_9798cbd3b9
    port map (
      ce_1 => ce_1_sg_x479,
      clk_1 => clk_1_sg_x479,
      in_x0 => add_del_q_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 14,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 14,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x479,
      clk => clk_1_sg_x479,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x479,
      clk => clk_1_sg_x479,
      clr => '0',
      din => reinterpret_out_output_port_net_x0,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x479,
      clk => clk_1_sg_x479,
      clr => '0',
      din(0) => we_del_q_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

  munge_in_97196f16e2: entity work.munge_in_entity_b453ddae89
    port map (
      din => dat_del_q_net_x1,
      dout => reinterpret_out_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/mixerout/ctrl"

entity ctrl_entity_e8405d6bd3 is
  port (
    blast_0209_dds305_mixerout_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_e8405d6bd3;

architecture structural of ctrl_entity_e8405d6bd3 is
  signal blast_0209_dds305_mixerout_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_mixerout_ctrl_user_data_out_net_x0 <= blast_0209_dds305_mixerout_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_mixerout_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/mixerout"

entity mixerout_entity_23b917c6c1 is
  port (
    blast_0209_dds305_mixerout_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    we: in std_logic; 
    bram: out std_logic_vector(13 downto 0); 
    bram_x0: out std_logic_vector(63 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0)
  );
end mixerout_entity_23b917c6c1;

architecture structural of mixerout_entity_23b917c6c1 is
  signal add_del_q_net_x1: std_logic_vector(13 downto 0);
  signal blast_0209_dds305_mixerout_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal cast_dout_net_x1: std_logic_vector(63 downto 0);
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x481: std_logic;
  signal clk_1_sg_x481: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(63 downto 0);
  signal convert_addr_dout_net_x1: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(63 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(63 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(63 downto 0);
  signal delay42_q_net_x1: std_logic;
  signal delay6_q_net_x0: std_logic_vector(63 downto 0);
  signal edge_op_y_net_x4: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal ri_output_port_net: std_logic_vector(63 downto 0);
  signal slice2_y_net_x0: std_logic_vector(13 downto 0);
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  blast_0209_dds305_mixerout_ctrl_user_data_out_net_x1 <= blast_0209_dds305_mixerout_ctrl_user_data_out;
  ce_1_sg_x481 <= ce_1;
  clk_1_sg_x481 <= clk_1;
  concatenate_y_net_x5 <= din;
  delay42_q_net_x1 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= cast_gw_dout_net_x1;

  add_del: entity work.delay_93ae8f3a04
    port map (
      ce => ce_1_sg_x481,
      clk => clk_1_sg_x481,
      clr => '0',
      d => slice2_y_net_x0,
      q => add_del_q_net_x1
    );

  add_gen_d2221d4b12: entity work.add_gen_entity_d2221d4b12
    port map (
      ce_1 => ce_1_sg_x481,
      clk_1 => clk_1_sg_x481,
      cont => never_op_net_x0,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we => we_choice_y_net_x2,
      add => slice2_y_net_x0,
      dout => delay6_q_net_x0,
      status => concat_y_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_3e455a7c1b: entity work.basic_ctrl_entity_3e455a7c1b
    port map (
      ce_1 => ce_1_sg_x481,
      clk_1 => clk_1_sg_x481,
      ctrl => reint1_output_port_net_x1,
      din => cast_dout_net_x1,
      we => delay42_q_net_x1,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we_o => we_choice_y_net_x2
    );

  bram_c760f89928: entity work.bram_entity_c760f89928
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x481,
      clk_1 => clk_1_sg_x481,
      data_in => dat_del_q_net_x1,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x481,
      clk => clk_1_sg_x481,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  ctrl_e8405d6bd3: entity work.ctrl_entity_e8405d6bd3
    port map (
      blast_0209_dds305_mixerout_ctrl_user_data_out => blast_0209_dds305_mixerout_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  dat_del: entity work.delay_e2d047c154
    port map (
      ce => ce_1_sg_x481,
      clk => clk_1_sg_x481,
      clr => '0',
      d => delay6_q_net_x0,
      q => dat_del_q_net_x1
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x0
    );

  ri: entity work.reinterpret_9a13f6a2a0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x5,
      output_port => ri_output_port_net
    );

  status_aed6bbc5b5: entity work.status_entity_1610992e91
    port map (
      ce_1 => ce_1_sg_x481,
      clk_1 => clk_1_sg_x481,
      out_reg => concat_y_net_x1,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

  we_del: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x481,
      clk => clk_1_sg_x481,
      clr => '0',
      d(0) => logical6_y_net_x0,
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/one_GbE"

entity one_gbe_entity_deea7e5d1b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rx_ack: in std_logic; 
    rx_rst: in std_logic; 
    tx_data: in std_logic_vector(7 downto 0); 
    tx_destip: in std_logic_vector(31 downto 0); 
    tx_destport: in std_logic_vector(15 downto 0); 
    tx_eof: in std_logic; 
    tx_rst: in std_logic; 
    tx_val: in std_logic; 
    convert_rx_ack_x0: out std_logic; 
    convert_rx_rst_x0: out std_logic; 
    convert_tx_data_x0: out std_logic_vector(7 downto 0); 
    convert_tx_dest_ip_x0: out std_logic_vector(31 downto 0); 
    convert_tx_end_of_frame_x0: out std_logic; 
    convert_tx_port_x0: out std_logic_vector(15 downto 0); 
    convert_tx_rst_x0: out std_logic; 
    convert_tx_valid_x0: out std_logic
  );
end one_gbe_entity_deea7e5d1b;

architecture structural of one_gbe_entity_deea7e5d1b is
  signal ce_1_sg_x482: std_logic;
  signal clk_1_sg_x482: std_logic;
  signal convert_rx_ack_dout_net_x0: std_logic;
  signal convert_rx_rst_dout_net_x0: std_logic;
  signal convert_tx_data_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert_tx_dest_ip_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_tx_end_of_frame_dout_net_x0: std_logic;
  signal convert_tx_port_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert_tx_rst_dout_net_x0: std_logic;
  signal convert_tx_valid_dout_net_x0: std_logic;
  signal delay64_q_net_x0: std_logic;
  signal delay67_q_net_x0: std_logic;
  signal mux4_y_net_x0: std_logic_vector(7 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice25_y_net_x0: std_logic;
  signal slice26_y_net_x0: std_logic;
  signal slice27_y_net_x0: std_logic_vector(15 downto 0);
  signal slice28_y_net_x0: std_logic;

begin
  ce_1_sg_x482 <= ce_1;
  clk_1_sg_x482 <= clk_1;
  slice26_y_net_x0 <= rx_ack;
  slice25_y_net_x0 <= rx_rst;
  mux4_y_net_x0 <= tx_data;
  reint1_output_port_net_x0 <= tx_destip;
  slice27_y_net_x0 <= tx_destport;
  delay64_q_net_x0 <= tx_eof;
  slice28_y_net_x0 <= tx_rst;
  delay67_q_net_x0 <= tx_val;
  convert_rx_ack_x0 <= convert_rx_ack_dout_net_x0;
  convert_rx_rst_x0 <= convert_rx_rst_dout_net_x0;
  convert_tx_data_x0 <= convert_tx_data_dout_net_x0;
  convert_tx_dest_ip_x0 <= convert_tx_dest_ip_dout_net_x0;
  convert_tx_end_of_frame_x0 <= convert_tx_end_of_frame_dout_net_x0;
  convert_tx_port_x0 <= convert_tx_port_dout_net_x0;
  convert_tx_rst_x0 <= convert_tx_rst_dout_net_x0;
  convert_tx_valid_x0 <= convert_tx_valid_dout_net_x0;

  convert_rx_ack: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x482,
      clk => clk_1_sg_x482,
      clr => '0',
      din(0) => slice26_y_net_x0,
      en => "1",
      dout(0) => convert_rx_ack_dout_net_x0
    );

  convert_rx_rst: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x482,
      clk => clk_1_sg_x482,
      clr => '0',
      din(0) => slice25_y_net_x0,
      en => "1",
      dout(0) => convert_rx_rst_dout_net_x0
    );

  convert_tx_data: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 8,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x482,
      clk => clk_1_sg_x482,
      clr => '0',
      din => mux4_y_net_x0,
      en => "1",
      dout => convert_tx_data_dout_net_x0
    );

  convert_tx_dest_ip: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x482,
      clk => clk_1_sg_x482,
      clr => '0',
      din => reint1_output_port_net_x0,
      en => "1",
      dout => convert_tx_dest_ip_dout_net_x0
    );

  convert_tx_end_of_frame: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x482,
      clk => clk_1_sg_x482,
      clr => '0',
      din(0) => delay64_q_net_x0,
      en => "1",
      dout(0) => convert_tx_end_of_frame_dout_net_x0
    );

  convert_tx_port: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 16,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x482,
      clk => clk_1_sg_x482,
      clr => '0',
      din => slice27_y_net_x0,
      en => "1",
      dout => convert_tx_port_dout_net_x0
    );

  convert_tx_rst: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x482,
      clk => clk_1_sg_x482,
      clr => '0',
      din(0) => slice28_y_net_x0,
      en => "1",
      dout(0) => convert_tx_rst_dout_net_x0
    );

  convert_tx_valid: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x482,
      clk => clk_1_sg_x482,
      clr => '0',
      din(0) => delay67_q_net_x0,
      en => "1",
      dout(0) => convert_tx_valid_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit1"

entity shifter_unit1_entity_d42644f0e7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit1_entity_d42644f0e7;

architecture structural of shifter_unit1_entity_d42644f0e7 is
  signal ce_1_sg_x484: std_logic;
  signal clk_1_sg_x484: std_logic;
  signal concatenate1_y_net_x0: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x0: std_logic;
  signal filler_op_net_x0: std_logic_vector(7 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x0: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x484 <= ce_1;
  clk_1_sg_x484 <= clk_1;
  concatenate1_y_net_x0 <= pin;
  filler_op_net_x0 <= prev;
  logical_y_net_x0 <= reg_en;
  edge_op_y_net_x0 <= sel;
  dout <= register1_q_net_x0;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => filler_op_net_x0,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x0,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x484,
      clk => clk_1_sg_x484,
      d => mux2_y_net,
      en(0) => logical_y_net_x0,
      rst => "0",
      q => register1_q_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x0,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit10"

entity shifter_unit10_entity_b521f8780b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit10_entity_b521f8780b;

architecture structural of shifter_unit10_entity_b521f8780b is
  signal ce_1_sg_x485: std_logic;
  signal clk_1_sg_x485: std_logic;
  signal concatenate1_y_net_x1: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x1: std_logic;
  signal logical_y_net_x1: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x485 <= ce_1;
  clk_1_sg_x485 <= clk_1;
  concatenate1_y_net_x1 <= pin;
  register1_q_net_x1 <= prev;
  logical_y_net_x1 <= reg_en;
  edge_op_y_net_x1 <= sel;
  dout <= register1_q_net_x2;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x1,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x1,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x485,
      clk => clk_1_sg_x485,
      d => mux2_y_net,
      en(0) => logical_y_net_x1,
      rst => "0",
      q => register1_q_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 79,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x1,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit11"

entity shifter_unit11_entity_0768a36be3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit11_entity_0768a36be3;

architecture structural of shifter_unit11_entity_0768a36be3 is
  signal ce_1_sg_x486: std_logic;
  signal clk_1_sg_x486: std_logic;
  signal concatenate1_y_net_x2: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x2: std_logic;
  signal logical_y_net_x2: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x0: std_logic_vector(7 downto 0);
  signal register1_q_net_x3: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x486 <= ce_1;
  clk_1_sg_x486 <= clk_1;
  concatenate1_y_net_x2 <= pin;
  register1_q_net_x3 <= prev;
  logical_y_net_x2 <= reg_en;
  edge_op_y_net_x2 <= sel;
  dout <= register1_q_net_x0;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x3,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x2,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x486,
      clk => clk_1_sg_x486,
      d => mux2_y_net,
      en(0) => logical_y_net_x2,
      rst => "0",
      q => register1_q_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 80,
      new_msb => 87,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x2,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit12"

entity shifter_unit12_entity_b06b3ee6db is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit12_entity_b06b3ee6db;

architecture structural of shifter_unit12_entity_b06b3ee6db is
  signal ce_1_sg_x487: std_logic;
  signal clk_1_sg_x487: std_logic;
  signal concatenate1_y_net_x3: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x3: std_logic;
  signal logical_y_net_x3: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x487 <= ce_1;
  clk_1_sg_x487 <= clk_1;
  concatenate1_y_net_x3 <= pin;
  register1_q_net_x1 <= prev;
  logical_y_net_x3 <= reg_en;
  edge_op_y_net_x3 <= sel;
  dout <= register1_q_net_x2;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x1,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x3,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x487,
      clk => clk_1_sg_x487,
      d => mux2_y_net,
      en(0) => logical_y_net_x3,
      rst => "0",
      q => register1_q_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 88,
      new_msb => 95,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x3,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit13"

entity shifter_unit13_entity_80ff41389d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit13_entity_80ff41389d;

architecture structural of shifter_unit13_entity_80ff41389d is
  signal ce_1_sg_x488: std_logic;
  signal clk_1_sg_x488: std_logic;
  signal concatenate1_y_net_x4: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x4: std_logic;
  signal logical_y_net_x4: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x0: std_logic_vector(7 downto 0);
  signal register1_q_net_x3: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x488 <= ce_1;
  clk_1_sg_x488 <= clk_1;
  concatenate1_y_net_x4 <= pin;
  register1_q_net_x3 <= prev;
  logical_y_net_x4 <= reg_en;
  edge_op_y_net_x4 <= sel;
  dout <= register1_q_net_x0;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x3,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x4,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x488,
      clk => clk_1_sg_x488,
      d => mux2_y_net,
      en(0) => logical_y_net_x4,
      rst => "0",
      q => register1_q_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 96,
      new_msb => 103,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x4,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit14"

entity shifter_unit14_entity_3495949972 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit14_entity_3495949972;

architecture structural of shifter_unit14_entity_3495949972 is
  signal ce_1_sg_x489: std_logic;
  signal clk_1_sg_x489: std_logic;
  signal concatenate1_y_net_x5: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x5: std_logic;
  signal logical_y_net_x5: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x489 <= ce_1;
  clk_1_sg_x489 <= clk_1;
  concatenate1_y_net_x5 <= pin;
  register1_q_net_x1 <= prev;
  logical_y_net_x5 <= reg_en;
  edge_op_y_net_x5 <= sel;
  dout <= register1_q_net_x2;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x1,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x5,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x489,
      clk => clk_1_sg_x489,
      d => mux2_y_net,
      en(0) => logical_y_net_x5,
      rst => "0",
      q => register1_q_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 104,
      new_msb => 111,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x5,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit15"

entity shifter_unit15_entity_074584e5a2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit15_entity_074584e5a2;

architecture structural of shifter_unit15_entity_074584e5a2 is
  signal ce_1_sg_x490: std_logic;
  signal clk_1_sg_x490: std_logic;
  signal concatenate1_y_net_x6: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x6: std_logic;
  signal logical_y_net_x6: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x0: std_logic_vector(7 downto 0);
  signal register1_q_net_x3: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x490 <= ce_1;
  clk_1_sg_x490 <= clk_1;
  concatenate1_y_net_x6 <= pin;
  register1_q_net_x3 <= prev;
  logical_y_net_x6 <= reg_en;
  edge_op_y_net_x6 <= sel;
  dout <= register1_q_net_x0;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x3,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x6,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      d => mux2_y_net,
      en(0) => logical_y_net_x6,
      rst => "0",
      q => register1_q_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 112,
      new_msb => 119,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x6,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit16"

entity shifter_unit16_entity_bf1fb11404 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit16_entity_bf1fb11404;

architecture structural of shifter_unit16_entity_bf1fb11404 is
  signal ce_1_sg_x491: std_logic;
  signal clk_1_sg_x491: std_logic;
  signal concatenate1_y_net_x7: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x7: std_logic;
  signal logical_y_net_x7: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x491 <= ce_1;
  clk_1_sg_x491 <= clk_1;
  concatenate1_y_net_x7 <= pin;
  register1_q_net_x1 <= prev;
  logical_y_net_x7 <= reg_en;
  edge_op_y_net_x7 <= sel;
  dout <= register1_q_net_x2;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x1,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x7,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x491,
      clk => clk_1_sg_x491,
      d => mux2_y_net,
      en(0) => logical_y_net_x7,
      rst => "0",
      q => register1_q_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 127,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x7,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit2"

entity shifter_unit2_entity_d32c348947 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit2_entity_d32c348947;

architecture structural of shifter_unit2_entity_d32c348947 is
  signal ce_1_sg_x492: std_logic;
  signal clk_1_sg_x492: std_logic;
  signal concatenate1_y_net_x8: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x8: std_logic;
  signal logical_y_net_x8: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x492 <= ce_1;
  clk_1_sg_x492 <= clk_1;
  concatenate1_y_net_x8 <= pin;
  register1_q_net_x1 <= prev;
  logical_y_net_x8 <= reg_en;
  edge_op_y_net_x8 <= sel;
  dout <= register1_q_net_x2;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x1,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x8,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x492,
      clk => clk_1_sg_x492,
      d => mux2_y_net,
      en(0) => logical_y_net_x8,
      rst => "0",
      q => register1_q_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 15,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x8,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit3"

entity shifter_unit3_entity_a02920d3a6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit3_entity_a02920d3a6;

architecture structural of shifter_unit3_entity_a02920d3a6 is
  signal ce_1_sg_x493: std_logic;
  signal clk_1_sg_x493: std_logic;
  signal concatenate1_y_net_x9: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x9: std_logic;
  signal logical_y_net_x9: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x0: std_logic_vector(7 downto 0);
  signal register1_q_net_x3: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x493 <= ce_1;
  clk_1_sg_x493 <= clk_1;
  concatenate1_y_net_x9 <= pin;
  register1_q_net_x3 <= prev;
  logical_y_net_x9 <= reg_en;
  edge_op_y_net_x9 <= sel;
  dout <= register1_q_net_x0;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x3,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x9,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      d => mux2_y_net,
      en(0) => logical_y_net_x9,
      rst => "0",
      q => register1_q_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 23,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x9,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit4"

entity shifter_unit4_entity_e8048458bc is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit4_entity_e8048458bc;

architecture structural of shifter_unit4_entity_e8048458bc is
  signal ce_1_sg_x494: std_logic;
  signal clk_1_sg_x494: std_logic;
  signal concatenate1_y_net_x10: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x10: std_logic;
  signal logical_y_net_x10: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x494 <= ce_1;
  clk_1_sg_x494 <= clk_1;
  concatenate1_y_net_x10 <= pin;
  register1_q_net_x1 <= prev;
  logical_y_net_x10 <= reg_en;
  edge_op_y_net_x10 <= sel;
  dout <= register1_q_net_x2;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x1,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x10,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x494,
      clk => clk_1_sg_x494,
      d => mux2_y_net,
      en(0) => logical_y_net_x10,
      rst => "0",
      q => register1_q_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 31,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x10,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit5"

entity shifter_unit5_entity_5802be2464 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit5_entity_5802be2464;

architecture structural of shifter_unit5_entity_5802be2464 is
  signal ce_1_sg_x495: std_logic;
  signal clk_1_sg_x495: std_logic;
  signal concatenate1_y_net_x11: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x11: std_logic;
  signal logical_y_net_x11: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x0: std_logic_vector(7 downto 0);
  signal register1_q_net_x3: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x495 <= ce_1;
  clk_1_sg_x495 <= clk_1;
  concatenate1_y_net_x11 <= pin;
  register1_q_net_x3 <= prev;
  logical_y_net_x11 <= reg_en;
  edge_op_y_net_x11 <= sel;
  dout <= register1_q_net_x0;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x3,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x11,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      d => mux2_y_net,
      en(0) => logical_y_net_x11,
      rst => "0",
      q => register1_q_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 39,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x11,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit6"

entity shifter_unit6_entity_5b576fd683 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit6_entity_5b576fd683;

architecture structural of shifter_unit6_entity_5b576fd683 is
  signal ce_1_sg_x496: std_logic;
  signal clk_1_sg_x496: std_logic;
  signal concatenate1_y_net_x12: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x12: std_logic;
  signal logical_y_net_x12: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x496 <= ce_1;
  clk_1_sg_x496 <= clk_1;
  concatenate1_y_net_x12 <= pin;
  register1_q_net_x1 <= prev;
  logical_y_net_x12 <= reg_en;
  edge_op_y_net_x12 <= sel;
  dout <= register1_q_net_x2;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x1,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x12,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      d => mux2_y_net,
      en(0) => logical_y_net_x12,
      rst => "0",
      q => register1_q_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 47,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x12,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit7"

entity shifter_unit7_entity_9889771ce7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit7_entity_9889771ce7;

architecture structural of shifter_unit7_entity_9889771ce7 is
  signal ce_1_sg_x497: std_logic;
  signal clk_1_sg_x497: std_logic;
  signal concatenate1_y_net_x13: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x13: std_logic;
  signal logical_y_net_x13: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x0: std_logic_vector(7 downto 0);
  signal register1_q_net_x3: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x497 <= ce_1;
  clk_1_sg_x497 <= clk_1;
  concatenate1_y_net_x13 <= pin;
  register1_q_net_x3 <= prev;
  logical_y_net_x13 <= reg_en;
  edge_op_y_net_x13 <= sel;
  dout <= register1_q_net_x0;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x3,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x13,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x497,
      clk => clk_1_sg_x497,
      d => mux2_y_net,
      en(0) => logical_y_net_x13,
      rst => "0",
      q => register1_q_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 48,
      new_msb => 55,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x13,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit8"

entity shifter_unit8_entity_24d78028a2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit8_entity_24d78028a2;

architecture structural of shifter_unit8_entity_24d78028a2 is
  signal ce_1_sg_x498: std_logic;
  signal clk_1_sg_x498: std_logic;
  signal concatenate1_y_net_x14: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x14: std_logic;
  signal logical_y_net_x14: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x498 <= ce_1;
  clk_1_sg_x498 <= clk_1;
  concatenate1_y_net_x14 <= pin;
  register1_q_net_x1 <= prev;
  logical_y_net_x14 <= reg_en;
  edge_op_y_net_x14 <= sel;
  dout <= register1_q_net_x2;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x1,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x14,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x498,
      clk => clk_1_sg_x498,
      d => mux2_y_net,
      en(0) => logical_y_net_x14,
      rst => "0",
      q => register1_q_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 56,
      new_msb => 63,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x14,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter/shifter_unit9"

entity shifter_unit9_entity_1828ae72d7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    prev: in std_logic_vector(7 downto 0); 
    reg_en: in std_logic; 
    sel: in std_logic; 
    dout: out std_logic_vector(7 downto 0)
  );
end shifter_unit9_entity_1828ae72d7;

architecture structural of shifter_unit9_entity_1828ae72d7 is
  signal ce_1_sg_x499: std_logic;
  signal clk_1_sg_x499: std_logic;
  signal concatenate1_y_net_x15: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x15: std_logic;
  signal logical_y_net_x15: std_logic;
  signal mux2_y_net: std_logic_vector(7 downto 0);
  signal register1_q_net_x3: std_logic_vector(7 downto 0);
  signal register1_q_net_x4: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x499 <= ce_1;
  clk_1_sg_x499 <= clk_1;
  concatenate1_y_net_x15 <= pin;
  register1_q_net_x3 <= prev;
  logical_y_net_x15 <= reg_en;
  edge_op_y_net_x15 <= sel;
  dout <= register1_q_net_x4;

  mux2: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register1_q_net_x3,
      d1 => slice_y_net,
      sel(0) => edge_op_y_net_x15,
      y => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x499,
      clk => clk_1_sg_x499,
      d => mux2_y_net,
      en(0) => logical_y_net_x15,
      rst => "0",
      q => register1_q_net_x4
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 64,
      new_msb => 71,
      x_width => 128,
      y_width => 8
    )
    port map (
      x => concatenate1_y_net_x15,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/parallel_to_serial_converter"

entity parallel_to_serial_converter_entity_7ac324252e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ld: in std_logic; 
    pin: in std_logic_vector(127 downto 0); 
    shift: in std_logic; 
    sout: out std_logic_vector(7 downto 0)
  );
end parallel_to_serial_converter_entity_7ac324252e;

architecture structural of parallel_to_serial_converter_entity_7ac324252e is
  signal ce_1_sg_x500: std_logic;
  signal clk_1_sg_x500: std_logic;
  signal concatenate1_y_net_x16: std_logic_vector(127 downto 0);
  signal constant2_op_net_x0: std_logic;
  signal edge_op_y_net_x16: std_logic;
  signal filler_op_net_x0: std_logic_vector(7 downto 0);
  signal logical_y_net_x15: std_logic;
  signal register1_q_net_x1: std_logic_vector(7 downto 0);
  signal register1_q_net_x10: std_logic_vector(7 downto 0);
  signal register1_q_net_x11: std_logic_vector(7 downto 0);
  signal register1_q_net_x12: std_logic_vector(7 downto 0);
  signal register1_q_net_x13: std_logic_vector(7 downto 0);
  signal register1_q_net_x14: std_logic_vector(7 downto 0);
  signal register1_q_net_x15: std_logic_vector(7 downto 0);
  signal register1_q_net_x16: std_logic_vector(7 downto 0);
  signal register1_q_net_x17: std_logic_vector(7 downto 0);
  signal register1_q_net_x2: std_logic_vector(7 downto 0);
  signal register1_q_net_x3: std_logic_vector(7 downto 0);
  signal register1_q_net_x4: std_logic_vector(7 downto 0);
  signal register1_q_net_x5: std_logic_vector(7 downto 0);
  signal register1_q_net_x6: std_logic_vector(7 downto 0);
  signal register1_q_net_x7: std_logic_vector(7 downto 0);
  signal register1_q_net_x9: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x500 <= ce_1;
  clk_1_sg_x500 <= clk_1;
  edge_op_y_net_x16 <= ld;
  concatenate1_y_net_x16 <= pin;
  constant2_op_net_x0 <= shift;
  sout <= register1_q_net_x17;

  filler: entity work.constant_91ef1678ca
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => filler_op_net_x0
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x16,
      d1(0) => constant2_op_net_x0,
      y(0) => logical_y_net_x15
    );

  shifter_unit10_b521f8780b: entity work.shifter_unit10_entity_b521f8780b
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x16,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x3
    );

  shifter_unit11_0768a36be3: entity work.shifter_unit11_entity_0768a36be3
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x3,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x2
    );

  shifter_unit12_b06b3ee6db: entity work.shifter_unit12_entity_b06b3ee6db
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x2,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x4
    );

  shifter_unit13_80ff41389d: entity work.shifter_unit13_entity_80ff41389d
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x4,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x5
    );

  shifter_unit14_3495949972: entity work.shifter_unit14_entity_3495949972
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x5,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x6
    );

  shifter_unit15_074584e5a2: entity work.shifter_unit15_entity_074584e5a2
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x6,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x7
    );

  shifter_unit16_bf1fb11404: entity work.shifter_unit16_entity_bf1fb11404
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x7,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x17
    );

  shifter_unit1_d42644f0e7: entity work.shifter_unit1_entity_d42644f0e7
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => filler_op_net_x0,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x1
    );

  shifter_unit2_d32c348947: entity work.shifter_unit2_entity_d32c348947
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x1,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x9
    );

  shifter_unit3_a02920d3a6: entity work.shifter_unit3_entity_a02920d3a6
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x9,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x10
    );

  shifter_unit4_e8048458bc: entity work.shifter_unit4_entity_e8048458bc
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x10,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x11
    );

  shifter_unit5_5802be2464: entity work.shifter_unit5_entity_5802be2464
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x11,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x12
    );

  shifter_unit6_5b576fd683: entity work.shifter_unit6_entity_5b576fd683
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x12,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x13
    );

  shifter_unit7_9889771ce7: entity work.shifter_unit7_entity_9889771ce7
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x13,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x14
    );

  shifter_unit8_24d78028a2: entity work.shifter_unit8_entity_24d78028a2
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x14,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x15
    );

  shifter_unit9_1828ae72d7: entity work.shifter_unit9_entity_1828ae72d7
    port map (
      ce_1 => ce_1_sg_x500,
      clk_1 => clk_1_sg_x500,
      pin => concatenate1_y_net_x16,
      prev => register1_q_net_x15,
      reg_en => logical_y_net_x15,
      sel => edge_op_y_net_x16,
      dout => register1_q_net_x16
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_coeffs"

entity pol1_in1_coeffs_entity_66e86f0cb5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(23 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(95 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    sync_out: out std_logic
  );
end pol1_in1_coeffs_entity_66e86f0cb5;

architecture structural of pol1_in1_coeffs_entity_66e86f0cb5 is
  signal ce_1_sg_x501: std_logic;
  signal clk_1_sg_x501: std_logic;
  signal concat_y_net: std_logic_vector(95 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay16_q_net_x0: std_logic;
  signal delay18_q_net_x0: std_logic_vector(23 downto 0);
  signal delay1_q_net_x0: std_logic_vector(23 downto 0);
  signal delay_q_net_x0: std_logic;
  signal fan_delay1_q_net: std_logic_vector(8 downto 0);
  signal fan_delay2_q_net: std_logic_vector(8 downto 0);
  signal fan_delay3_q_net: std_logic_vector(8 downto 0);
  signal fan_delay4_q_net: std_logic_vector(8 downto 0);
  signal fan_delay5_q_net: std_logic_vector(8 downto 0);
  signal fan_delay6_q_net: std_logic_vector(8 downto 0);
  signal fan_delay7_q_net: std_logic_vector(8 downto 0);
  signal fan_delay8_q_net: std_logic_vector(8 downto 0);
  signal register_q_net_x0: std_logic_vector(95 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(11 downto 0);
  signal rom1_data_net: std_logic_vector(11 downto 0);
  signal rom2_data_net: std_logic_vector(11 downto 0);
  signal rom3_data_net: std_logic_vector(11 downto 0);
  signal rom4_data_net: std_logic_vector(11 downto 0);
  signal rom5_data_net: std_logic_vector(11 downto 0);
  signal rom6_data_net: std_logic_vector(11 downto 0);
  signal rom7_data_net: std_logic_vector(11 downto 0);
  signal rom8_data_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x501 <= ce_1;
  clk_1_sg_x501 <= clk_1;
  delay18_q_net_x0 <= din;
  delay16_q_net_x0 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;
  sync_out <= delay_q_net_x0;

  concat: entity work.concat_2b477872fe
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      clr => '0',
      en => "1",
      rst(0) => delay16_q_net_x0,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d(0) => delay16_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 24
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => delay18_q_net_x0,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  fan_delay5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay5_q_net
    );

  fan_delay6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay6_q_net
    );

  fan_delay7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay7_q_net
    );

  fan_delay8: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay8_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 96,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom5_data_net,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom6_data_net,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom7_data_net,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom8_data_net,
      output_port => reinterpret8_output_port_net
    );

  rom1: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_b355163dcc98d152",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_5e0d5e3feae7c146",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_0ab69a8bd13b8f15",
      latency => 2
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_110ef86ad32adb7b",
      latency => 2
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

  rom5: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_52bfb73575709bd7",
      latency => 2
    )
    port map (
      addr => fan_delay5_q_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      en => "1",
      rst => "0",
      data => rom5_data_net
    );

  rom6: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_1e69bed9c31dfa5e",
      latency => 2
    )
    port map (
      addr => fan_delay6_q_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      en => "1",
      rst => "0",
      data => rom6_data_net
    );

  rom7: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_80b41e07f1b9f9e7",
      latency => 2
    )
    port map (
      addr => fan_delay7_q_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      en => "1",
      rst => "0",
      data => rom7_data_net
    );

  rom8: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_34dec6b258cac0f2",
      latency => 2
    )
    port map (
      addr => fan_delay8_q_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      en => "1",
      rst => "0",
      data => rom8_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_first_tap/delay_bram"

entity delay_bram_entity_7bcb3fe81a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(23 downto 0); 
    dout: out std_logic_vector(23 downto 0)
  );
end delay_bram_entity_7bcb3fe81a;

architecture structural of delay_bram_entity_7bcb3fe81a is
  signal ce_1_sg_x502: std_logic;
  signal clk_1_sg_x502: std_logic;
  signal constant_op_net: std_logic;
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x2: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x0: std_logic_vector(23 downto 0);

begin
  ce_1_sg_x502 <= ce_1;
  clk_1_sg_x502 <= clk_1;
  delay1_q_net_x2 <= din;
  dout <= ram_data_out_net_x0;

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  counter: entity work.xlcounter_limit_blast_0209_dds305
    generic map (
      cnt_15_0 => 508,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_1f06b71632254894",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter_op_net
    );

  ram: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 24,
      core_name0 => "bmg_72_328d7e82706216a4",
      latency => 2
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      data_in => delay1_q_net_x2,
      en => "1",
      rst => "0",
      we(0) => constant_op_net,
      data_out => ram_data_out_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_first_tap/ri_to_c"

entity ri_to_c_entity_6f517952cf is
  port (
    im: in std_logic_vector(23 downto 0); 
    re: in std_logic_vector(23 downto 0); 
    c: out std_logic_vector(47 downto 0)
  );
end ri_to_c_entity_6f517952cf;

architecture structural of ri_to_c_entity_6f517952cf is
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(23 downto 0);

begin
  mult_p_net_x0 <= im;
  mult1_p_net_x0 <= re;
  c <= concat_y_net_x0;

  concat: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1 => reinterpret1_output_port_net,
      y => concat_y_net_x0
    );

  reinterpret: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mult1_p_net_x0,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mult_p_net_x0,
      output_port => reinterpret1_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_first_tap"

entity pol1_in1_first_tap_entity_cb5a0fcb1d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeffs: in std_logic_vector(95 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    coeff_out: out std_logic_vector(83 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    taps_out: out std_logic_vector(47 downto 0)
  );
end pol1_in1_first_tap_entity_cb5a0fcb1d;

architecture structural of pol1_in1_first_tap_entity_cb5a0fcb1d is
  signal ce_1_sg_x503: std_logic;
  signal clk_1_sg_x503: std_logic;
  signal concat_y_net_x1: std_logic_vector(47 downto 0);
  signal delay1_q_net_x3: std_logic_vector(23 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x1: std_logic_vector(23 downto 0);
  signal register_q_net_x1: std_logic_vector(95 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x0: std_logic_vector(83 downto 0);
  signal slice_y_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x503 <= ce_1;
  clk_1_sg_x503 <= clk_1;
  register_q_net_x1 <= coeffs;
  delay1_q_net_x3 <= din;
  coeff_out <= slice1_y_net_x0;
  dout <= ram_data_out_net_x1;
  taps_out <= concat_y_net_x1;

  c_to_ri_97aeb13cb6: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => delay1_q_net_x3,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  delay_bram_7bcb3fe81a: entity work.delay_bram_entity_7bcb3fe81a
    port map (
      ce_1 => ce_1_sg_x503,
      clk_1 => clk_1_sg_x503,
      din => delay1_q_net_x3,
      dout => ram_data_out_net_x1
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x503,
      clk => clk_1_sg_x503,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x503,
      clk => clk_1_sg_x503,
      clr => '0',
      p => mult1_p_net_x0
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_6f517952cf: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x1
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 96,
      y_width => 12
    )
    port map (
      x => register_q_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 95,
      x_width => 96,
      y_width => 84
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_last_tap/pfb_add_tree/adder_tree1"

entity adder_tree1_entity_cafede2303 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(23 downto 0); 
    din2: in std_logic_vector(23 downto 0); 
    din3: in std_logic_vector(23 downto 0); 
    din4: in std_logic_vector(23 downto 0); 
    din5: in std_logic_vector(23 downto 0); 
    din6: in std_logic_vector(23 downto 0); 
    din7: in std_logic_vector(23 downto 0); 
    din8: in std_logic_vector(23 downto 0); 
    sync: in std_logic; 
    dout: out std_logic_vector(23 downto 0); 
    sync_out: out std_logic
  );
end adder_tree1_entity_cafede2303;

architecture structural of adder_tree1_entity_cafede2303 is
  signal addr1_s_net: std_logic_vector(23 downto 0);
  signal addr2_s_net: std_logic_vector(23 downto 0);
  signal addr3_s_net: std_logic_vector(23 downto 0);
  signal addr4_s_net: std_logic_vector(23 downto 0);
  signal addr5_s_net: std_logic_vector(23 downto 0);
  signal addr6_s_net: std_logic_vector(23 downto 0);
  signal addr7_s_net_x0: std_logic_vector(23 downto 0);
  signal ce_1_sg_x504: std_logic;
  signal clk_1_sg_x504: std_logic;
  signal delay_q_net_x0: std_logic;
  signal reint0_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint1_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint2_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint3_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint4_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint5_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint6_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint7_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x504 <= ce_1;
  clk_1_sg_x504 <= clk_1;
  reint0_1_output_port_net_x0 <= din1;
  reint1_1_output_port_net_x0 <= din2;
  reint2_1_output_port_net_x0 <= din3;
  reint3_1_output_port_net_x0 <= din4;
  reint4_1_output_port_net_x0 <= din5;
  reint5_1_output_port_net_x0 <= din6;
  reint6_1_output_port_net_x0 <= din7;
  reint7_1_output_port_net_x0 <= din8;
  delay_q_net_x0 <= sync;
  dout <= addr7_s_net_x0;
  sync_out <= sync_delay_q_net_x0;

  addr1: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => reint0_1_output_port_net_x0,
      b => reint1_1_output_port_net_x0,
      ce => ce_1_sg_x504,
      clk => clk_1_sg_x504,
      clr => '0',
      en => "1",
      s => addr1_s_net
    );

  addr2: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => reint2_1_output_port_net_x0,
      b => reint3_1_output_port_net_x0,
      ce => ce_1_sg_x504,
      clk => clk_1_sg_x504,
      clr => '0',
      en => "1",
      s => addr2_s_net
    );

  addr3: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => reint4_1_output_port_net_x0,
      b => reint5_1_output_port_net_x0,
      ce => ce_1_sg_x504,
      clk => clk_1_sg_x504,
      clr => '0',
      en => "1",
      s => addr3_s_net
    );

  addr4: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => reint6_1_output_port_net_x0,
      b => reint7_1_output_port_net_x0,
      ce => ce_1_sg_x504,
      clk => clk_1_sg_x504,
      clr => '0',
      en => "1",
      s => addr4_s_net
    );

  addr5: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => addr1_s_net,
      b => addr2_s_net,
      ce => ce_1_sg_x504,
      clk => clk_1_sg_x504,
      clr => '0',
      en => "1",
      s => addr5_s_net
    );

  addr6: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => addr3_s_net,
      b => addr4_s_net,
      ce => ce_1_sg_x504,
      clk => clk_1_sg_x504,
      clr => '0',
      en => "1",
      s => addr6_s_net
    );

  addr7: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => addr5_s_net,
      b => addr6_s_net,
      ce => ce_1_sg_x504,
      clk => clk_1_sg_x504,
      clr => '0',
      en => "1",
      s => addr7_s_net_x0
    );

  sync_delay: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x504,
      clk => clk_1_sg_x504,
      clr => '0',
      d(0) => delay_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_last_tap/pfb_add_tree/adder_tree2"

entity adder_tree2_entity_2bda7bdc76 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(23 downto 0); 
    din2: in std_logic_vector(23 downto 0); 
    din3: in std_logic_vector(23 downto 0); 
    din4: in std_logic_vector(23 downto 0); 
    din5: in std_logic_vector(23 downto 0); 
    din6: in std_logic_vector(23 downto 0); 
    din7: in std_logic_vector(23 downto 0); 
    din8: in std_logic_vector(23 downto 0); 
    dout: out std_logic_vector(23 downto 0)
  );
end adder_tree2_entity_2bda7bdc76;

architecture structural of adder_tree2_entity_2bda7bdc76 is
  signal addr1_s_net: std_logic_vector(23 downto 0);
  signal addr2_s_net: std_logic_vector(23 downto 0);
  signal addr3_s_net: std_logic_vector(23 downto 0);
  signal addr4_s_net: std_logic_vector(23 downto 0);
  signal addr5_s_net: std_logic_vector(23 downto 0);
  signal addr6_s_net: std_logic_vector(23 downto 0);
  signal addr7_s_net_x0: std_logic_vector(23 downto 0);
  signal ce_1_sg_x505: std_logic;
  signal clk_1_sg_x505: std_logic;
  signal reint0_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint1_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint2_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint3_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint4_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint5_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint6_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint7_2_output_port_net_x0: std_logic_vector(23 downto 0);

begin
  ce_1_sg_x505 <= ce_1;
  clk_1_sg_x505 <= clk_1;
  reint0_2_output_port_net_x0 <= din1;
  reint1_2_output_port_net_x0 <= din2;
  reint2_2_output_port_net_x0 <= din3;
  reint3_2_output_port_net_x0 <= din4;
  reint4_2_output_port_net_x0 <= din5;
  reint5_2_output_port_net_x0 <= din6;
  reint6_2_output_port_net_x0 <= din7;
  reint7_2_output_port_net_x0 <= din8;
  dout <= addr7_s_net_x0;

  addr1: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => reint0_2_output_port_net_x0,
      b => reint1_2_output_port_net_x0,
      ce => ce_1_sg_x505,
      clk => clk_1_sg_x505,
      clr => '0',
      en => "1",
      s => addr1_s_net
    );

  addr2: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => reint2_2_output_port_net_x0,
      b => reint3_2_output_port_net_x0,
      ce => ce_1_sg_x505,
      clk => clk_1_sg_x505,
      clr => '0',
      en => "1",
      s => addr2_s_net
    );

  addr3: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => reint4_2_output_port_net_x0,
      b => reint5_2_output_port_net_x0,
      ce => ce_1_sg_x505,
      clk => clk_1_sg_x505,
      clr => '0',
      en => "1",
      s => addr3_s_net
    );

  addr4: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => reint6_2_output_port_net_x0,
      b => reint7_2_output_port_net_x0,
      ce => ce_1_sg_x505,
      clk => clk_1_sg_x505,
      clr => '0',
      en => "1",
      s => addr4_s_net
    );

  addr5: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => addr1_s_net,
      b => addr2_s_net,
      ce => ce_1_sg_x505,
      clk => clk_1_sg_x505,
      clr => '0',
      en => "1",
      s => addr5_s_net
    );

  addr6: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => addr3_s_net,
      b => addr4_s_net,
      ce => ce_1_sg_x505,
      clk => clk_1_sg_x505,
      clr => '0',
      en => "1",
      s => addr6_s_net
    );

  addr7: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 22,
      a_width => 24,
      b_arith => xlSigned,
      b_bin_pt => 22,
      b_width => 24,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 25,
      core_name0 => "addsb_11_0_dfc9436ad431ee27",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 25,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 22,
      s_width => 24
    )
    port map (
      a => addr5_s_net,
      b => addr6_s_net,
      ce => ce_1_sg_x505,
      clk => clk_1_sg_x505,
      clr => '0',
      en => "1",
      s => addr7_s_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_last_tap/pfb_add_tree/ri_to_c"

entity ri_to_c_entity_81de5d2889 is
  port (
    im: in std_logic_vector(11 downto 0); 
    re: in std_logic_vector(11 downto 0); 
    c: out std_logic_vector(23 downto 0)
  );
end ri_to_c_entity_81de5d2889;

architecture structural of ri_to_c_entity_81de5d2889 is
  signal concat_y_net_x0: std_logic_vector(23 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(11 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(11 downto 0);
  signal force_im_output_port_net: std_logic_vector(11 downto 0);
  signal force_re_output_port_net: std_logic_vector(11 downto 0);

begin
  convert2_dout_net_x0 <= im;
  convert1_dout_net_x0 <= re;
  c <= concat_y_net_x0;

  concat: entity work.concat_6188124172
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x0
    );

  force_im: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert2_dout_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert1_dout_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_last_tap/pfb_add_tree"

entity pfb_add_tree_entity_e0273a23e0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(383 downto 0); 
    sync: in std_logic; 
    dout: out std_logic_vector(23 downto 0); 
    sync_out: out std_logic
  );
end pfb_add_tree_entity_e0273a23e0;

architecture structural of pfb_add_tree_entity_e0273a23e0 is
  signal addr7_s_net_x0: std_logic_vector(23 downto 0);
  signal addr7_s_net_x1: std_logic_vector(23 downto 0);
  signal ce_1_sg_x506: std_logic;
  signal clk_1_sg_x506: std_logic;
  signal concat_y_net_x1: std_logic_vector(383 downto 0);
  signal concat_y_net_x2: std_logic_vector(23 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(11 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(11 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay_q_net_x1: std_logic;
  signal reint0_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint0_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint1_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint1_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint2_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint2_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint3_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint3_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint4_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint4_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint5_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint5_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint6_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint6_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint7_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint7_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal scale1_op_net: std_logic_vector(23 downto 0);
  signal scale2_op_net: std_logic_vector(23 downto 0);
  signal slice0_1_y_net: std_logic_vector(23 downto 0);
  signal slice0_2_y_net: std_logic_vector(23 downto 0);
  signal slice1_1_y_net: std_logic_vector(23 downto 0);
  signal slice1_2_y_net: std_logic_vector(23 downto 0);
  signal slice2_1_y_net: std_logic_vector(23 downto 0);
  signal slice2_2_y_net: std_logic_vector(23 downto 0);
  signal slice3_1_y_net: std_logic_vector(23 downto 0);
  signal slice3_2_y_net: std_logic_vector(23 downto 0);
  signal slice4_1_y_net: std_logic_vector(23 downto 0);
  signal slice4_2_y_net: std_logic_vector(23 downto 0);
  signal slice5_1_y_net: std_logic_vector(23 downto 0);
  signal slice5_2_y_net: std_logic_vector(23 downto 0);
  signal slice6_1_y_net: std_logic_vector(23 downto 0);
  signal slice6_2_y_net: std_logic_vector(23 downto 0);
  signal slice7_1_y_net: std_logic_vector(23 downto 0);
  signal slice7_2_y_net: std_logic_vector(23 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x506 <= ce_1;
  clk_1_sg_x506 <= clk_1;
  concat_y_net_x1 <= din;
  delay_q_net_x1 <= sync;
  dout <= concat_y_net_x2;
  sync_out <= delay1_q_net_x0;

  adder_tree1_cafede2303: entity work.adder_tree1_entity_cafede2303
    port map (
      ce_1 => ce_1_sg_x506,
      clk_1 => clk_1_sg_x506,
      din1 => reint0_1_output_port_net_x0,
      din2 => reint1_1_output_port_net_x0,
      din3 => reint2_1_output_port_net_x0,
      din4 => reint3_1_output_port_net_x0,
      din5 => reint4_1_output_port_net_x0,
      din6 => reint5_1_output_port_net_x0,
      din7 => reint6_1_output_port_net_x0,
      din8 => reint7_1_output_port_net_x0,
      sync => delay_q_net_x1,
      dout => addr7_s_net_x0,
      sync_out => sync_delay_q_net_x0
    );

  adder_tree2_2bda7bdc76: entity work.adder_tree2_entity_2bda7bdc76
    port map (
      ce_1 => ce_1_sg_x506,
      clk_1 => clk_1_sg_x506,
      din1 => reint0_2_output_port_net_x0,
      din2 => reint1_2_output_port_net_x0,
      din3 => reint2_2_output_port_net_x0,
      din4 => reint3_2_output_port_net_x0,
      din5 => reint4_2_output_port_net_x0,
      din6 => reint5_2_output_port_net_x0,
      din7 => reint6_2_output_port_net_x0,
      din8 => reint7_2_output_port_net_x0,
      dout => addr7_s_net_x1
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 23,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 11,
      dout_width => 12,
      latency => 1,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x506,
      clk => clk_1_sg_x506,
      clr => '0',
      din => scale1_op_net,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 23,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 11,
      dout_width => 12,
      latency => 1,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x506,
      clk => clk_1_sg_x506,
      clr => '0',
      din => scale2_op_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x506,
      clk => clk_1_sg_x506,
      d(0) => sync_delay_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net_x0
    );

  reint0_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice0_1_y_net,
      output_port => reint0_1_output_port_net_x0
    );

  reint0_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice0_2_y_net,
      output_port => reint0_2_output_port_net_x0
    );

  reint1_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_1_y_net,
      output_port => reint1_1_output_port_net_x0
    );

  reint1_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_2_y_net,
      output_port => reint1_2_output_port_net_x0
    );

  reint2_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_1_y_net,
      output_port => reint2_1_output_port_net_x0
    );

  reint2_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_2_y_net,
      output_port => reint2_2_output_port_net_x0
    );

  reint3_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_1_y_net,
      output_port => reint3_1_output_port_net_x0
    );

  reint3_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_2_y_net,
      output_port => reint3_2_output_port_net_x0
    );

  reint4_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_1_y_net,
      output_port => reint4_1_output_port_net_x0
    );

  reint4_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_2_y_net,
      output_port => reint4_2_output_port_net_x0
    );

  reint5_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_1_y_net,
      output_port => reint5_1_output_port_net_x0
    );

  reint5_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_2_y_net,
      output_port => reint5_2_output_port_net_x0
    );

  reint6_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_1_y_net,
      output_port => reint6_1_output_port_net_x0
    );

  reint6_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_2_y_net,
      output_port => reint6_2_output_port_net_x0
    );

  reint7_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_1_y_net,
      output_port => reint7_1_output_port_net_x0
    );

  reint7_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_2_y_net,
      output_port => reint7_2_output_port_net_x0
    );

  ri_to_c_81de5d2889: entity work.ri_to_c_entity_81de5d2889
    port map (
      im => convert2_dout_net_x0,
      re => convert1_dout_net_x0,
      c => concat_y_net_x2
    );

  scale1: entity work.scale_a83099c230
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr7_s_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_a83099c230
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr7_s_net_x1,
      op => scale2_op_net
    );

  slice0_1: entity work.xlslice
    generic map (
      new_lsb => 360,
      new_msb => 383,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice0_1_y_net
    );

  slice0_2: entity work.xlslice
    generic map (
      new_lsb => 336,
      new_msb => 359,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice0_2_y_net
    );

  slice1_1: entity work.xlslice
    generic map (
      new_lsb => 312,
      new_msb => 335,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice1_1_y_net
    );

  slice1_2: entity work.xlslice
    generic map (
      new_lsb => 288,
      new_msb => 311,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice1_2_y_net
    );

  slice2_1: entity work.xlslice
    generic map (
      new_lsb => 264,
      new_msb => 287,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice2_1_y_net
    );

  slice2_2: entity work.xlslice
    generic map (
      new_lsb => 240,
      new_msb => 263,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice2_2_y_net
    );

  slice3_1: entity work.xlslice
    generic map (
      new_lsb => 216,
      new_msb => 239,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice3_1_y_net
    );

  slice3_2: entity work.xlslice
    generic map (
      new_lsb => 192,
      new_msb => 215,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice3_2_y_net
    );

  slice4_1: entity work.xlslice
    generic map (
      new_lsb => 168,
      new_msb => 191,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice4_1_y_net
    );

  slice4_2: entity work.xlslice
    generic map (
      new_lsb => 144,
      new_msb => 167,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice4_2_y_net
    );

  slice5_1: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 143,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice5_1_y_net
    );

  slice5_2: entity work.xlslice
    generic map (
      new_lsb => 96,
      new_msb => 119,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice5_2_y_net
    );

  slice6_1: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 95,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice6_1_y_net
    );

  slice6_2: entity work.xlslice
    generic map (
      new_lsb => 48,
      new_msb => 71,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice6_2_y_net
    );

  slice7_1: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 47,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice7_1_y_net
    );

  slice7_2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 23,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice7_2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_last_tap"

entity pol1_in1_last_tap_entity_98498d4b32 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(11 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    sync: in std_logic; 
    taps: in std_logic_vector(335 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    sync_out: out std_logic
  );
end pol1_in1_last_tap_entity_98498d4b32;

architecture structural of pol1_in1_last_tap_entity_98498d4b32 is
  signal ce_1_sg_x507: std_logic;
  signal clk_1_sg_x507: std_logic;
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal concat_y_net_x1: std_logic_vector(383 downto 0);
  signal concat_y_net_x3: std_logic_vector(335 downto 0);
  signal concat_y_net_x4: std_logic_vector(23 downto 0);
  signal delay1_q_net_x1: std_logic;
  signal delay_q_net_x1: std_logic;
  signal delay_q_net_x2: std_logic;
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x1: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x0: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x507 <= ce_1;
  clk_1_sg_x507 <= clk_1;
  slice1_y_net_x0 <= coeff;
  ram_data_out_net_x1 <= din;
  delay_q_net_x2 <= sync;
  concat_y_net_x3 <= taps;
  dout <= concat_y_net_x4;
  sync_out <= delay1_q_net_x1;

  c_to_ri_c82cda9539: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => ram_data_out_net_x1,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  concat: entity work.concat_c9ea4507fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x0,
      in1 => concat_y_net_x3,
      y => concat_y_net_x1
    );

  delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      d(0) => delay_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x1
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      clr => '0',
      p => mult1_p_net_x0
    );

  pfb_add_tree_e0273a23e0: entity work.pfb_add_tree_entity_e0273a23e0
    port map (
      ce_1 => ce_1_sg_x507,
      clk_1 => clk_1_sg_x507,
      din => concat_y_net_x1,
      sync => delay_q_net_x1,
      dout => concat_y_net_x4,
      sync_out => delay1_q_net_x1
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net_x0,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_c6ddeabcf4: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_tap2"

entity pol1_in1_tap2_entity_7c31495a31 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(83 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    taps: in std_logic_vector(47 downto 0); 
    coeff_out: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    taps_out: out std_logic_vector(95 downto 0)
  );
end pol1_in1_tap2_entity_7c31495a31;

architecture structural of pol1_in1_tap2_entity_7c31495a31 is
  signal ce_1_sg_x509: std_logic;
  signal clk_1_sg_x509: std_logic;
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal concat_y_net_x2: std_logic_vector(47 downto 0);
  signal concat_y_net_x3: std_logic_vector(95 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x4: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x5: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x1: std_logic_vector(83 downto 0);
  signal slice1_y_net_x2: std_logic_vector(71 downto 0);
  signal slice_y_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x509 <= ce_1;
  clk_1_sg_x509 <= clk_1;
  slice1_y_net_x1 <= coeff;
  ram_data_out_net_x4 <= din;
  concat_y_net_x2 <= taps;
  coeff_out <= slice1_y_net_x2;
  dout <= ram_data_out_net_x5;
  taps_out <= concat_y_net_x3;

  c_to_ri_7e5bb2c812: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => ram_data_out_net_x4,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  concat: entity work.concat_d2bebd35da
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x0,
      in1 => concat_y_net_x2,
      y => concat_y_net_x3
    );

  delay_bram_a190918374: entity work.delay_bram_entity_7bcb3fe81a
    port map (
      ce_1 => ce_1_sg_x509,
      clk_1 => clk_1_sg_x509,
      din => ram_data_out_net_x4,
      dout => ram_data_out_net_x5
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      clr => '0',
      p => mult1_p_net_x0
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_4ba32cfe7e: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 84,
      y_width => 12
    )
    port map (
      x => slice1_y_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 83,
      x_width => 84,
      y_width => 72
    )
    port map (
      x => slice1_y_net_x1,
      y => slice1_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_tap3"

entity pol1_in1_tap3_entity_5e850f1895 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(71 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    taps: in std_logic_vector(95 downto 0); 
    coeff_out: out std_logic_vector(59 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    taps_out: out std_logic_vector(143 downto 0)
  );
end pol1_in1_tap3_entity_5e850f1895;

architecture structural of pol1_in1_tap3_entity_5e850f1895 is
  signal ce_1_sg_x511: std_logic;
  signal clk_1_sg_x511: std_logic;
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal concat_y_net_x4: std_logic_vector(95 downto 0);
  signal concat_y_net_x5: std_logic_vector(143 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x8: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x9: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x0: std_logic_vector(59 downto 0);
  signal slice1_y_net_x3: std_logic_vector(71 downto 0);
  signal slice_y_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x511 <= ce_1;
  clk_1_sg_x511 <= clk_1;
  slice1_y_net_x3 <= coeff;
  ram_data_out_net_x8 <= din;
  concat_y_net_x4 <= taps;
  coeff_out <= slice1_y_net_x0;
  dout <= ram_data_out_net_x9;
  taps_out <= concat_y_net_x5;

  c_to_ri_e02f10245b: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => ram_data_out_net_x8,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  concat: entity work.concat_c8cd4b9ca8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x0,
      in1 => concat_y_net_x4,
      y => concat_y_net_x5
    );

  delay_bram_01c437206e: entity work.delay_bram_entity_7bcb3fe81a
    port map (
      ce_1 => ce_1_sg_x511,
      clk_1 => clk_1_sg_x511,
      din => ram_data_out_net_x8,
      dout => ram_data_out_net_x9
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      p => mult1_p_net_x0
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_94ae8687d4: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 72,
      y_width => 12
    )
    port map (
      x => slice1_y_net_x3,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 71,
      x_width => 72,
      y_width => 60
    )
    port map (
      x => slice1_y_net_x3,
      y => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_tap4"

entity pol1_in1_tap4_entity_9378d99f25 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(59 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    taps: in std_logic_vector(143 downto 0); 
    coeff_out: out std_logic_vector(47 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    taps_out: out std_logic_vector(191 downto 0)
  );
end pol1_in1_tap4_entity_9378d99f25;

architecture structural of pol1_in1_tap4_entity_9378d99f25 is
  signal ce_1_sg_x513: std_logic;
  signal clk_1_sg_x513: std_logic;
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal concat_y_net_x1: std_logic_vector(191 downto 0);
  signal concat_y_net_x6: std_logic_vector(143 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x1: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x12: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x1: std_logic_vector(59 downto 0);
  signal slice1_y_net_x2: std_logic_vector(47 downto 0);
  signal slice_y_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x513 <= ce_1;
  clk_1_sg_x513 <= clk_1;
  slice1_y_net_x1 <= coeff;
  ram_data_out_net_x12 <= din;
  concat_y_net_x6 <= taps;
  coeff_out <= slice1_y_net_x2;
  dout <= ram_data_out_net_x1;
  taps_out <= concat_y_net_x1;

  c_to_ri_452a46aaf0: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => ram_data_out_net_x12,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  concat: entity work.concat_e3400f48bc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x0,
      in1 => concat_y_net_x6,
      y => concat_y_net_x1
    );

  delay_bram_5563c30b9f: entity work.delay_bram_entity_7bcb3fe81a
    port map (
      ce_1 => ce_1_sg_x513,
      clk_1 => clk_1_sg_x513,
      din => ram_data_out_net_x12,
      dout => ram_data_out_net_x1
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x513,
      clk => clk_1_sg_x513,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x513,
      clk => clk_1_sg_x513,
      clr => '0',
      p => mult1_p_net_x0
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_36f11d7cc1: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 60,
      y_width => 12
    )
    port map (
      x => slice1_y_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 59,
      x_width => 60,
      y_width => 48
    )
    port map (
      x => slice1_y_net_x1,
      y => slice1_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_tap5"

entity pol1_in1_tap5_entity_92949d4b5f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(47 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    taps: in std_logic_vector(191 downto 0); 
    coeff_out: out std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    taps_out: out std_logic_vector(239 downto 0)
  );
end pol1_in1_tap5_entity_92949d4b5f;

architecture structural of pol1_in1_tap5_entity_92949d4b5f is
  signal ce_1_sg_x515: std_logic;
  signal clk_1_sg_x515: std_logic;
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal concat_y_net_x2: std_logic_vector(191 downto 0);
  signal concat_y_net_x3: std_logic_vector(239 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x4: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x5: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net_x3: std_logic_vector(47 downto 0);
  signal slice_y_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x515 <= ce_1;
  clk_1_sg_x515 <= clk_1;
  slice1_y_net_x3 <= coeff;
  ram_data_out_net_x4 <= din;
  concat_y_net_x2 <= taps;
  coeff_out <= slice1_y_net_x0;
  dout <= ram_data_out_net_x5;
  taps_out <= concat_y_net_x3;

  c_to_ri_03d0e5e511: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => ram_data_out_net_x4,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  concat: entity work.concat_0b00b25e49
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x0,
      in1 => concat_y_net_x2,
      y => concat_y_net_x3
    );

  delay_bram_c323fd17b4: entity work.delay_bram_entity_7bcb3fe81a
    port map (
      ce_1 => ce_1_sg_x515,
      clk_1 => clk_1_sg_x515,
      din => ram_data_out_net_x4,
      dout => ram_data_out_net_x5
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x515,
      clk => clk_1_sg_x515,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x515,
      clk => clk_1_sg_x515,
      clr => '0',
      p => mult1_p_net_x0
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_d7f668bdc1: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 48,
      y_width => 12
    )
    port map (
      x => slice1_y_net_x3,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 47,
      x_width => 48,
      y_width => 36
    )
    port map (
      x => slice1_y_net_x3,
      y => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_tap6"

entity pol1_in1_tap6_entity_e6bf5827c7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(35 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    taps: in std_logic_vector(239 downto 0); 
    coeff_out: out std_logic_vector(23 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    taps_out: out std_logic_vector(287 downto 0)
  );
end pol1_in1_tap6_entity_e6bf5827c7;

architecture structural of pol1_in1_tap6_entity_e6bf5827c7 is
  signal ce_1_sg_x517: std_logic;
  signal clk_1_sg_x517: std_logic;
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal concat_y_net_x4: std_logic_vector(239 downto 0);
  signal concat_y_net_x5: std_logic_vector(287 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x8: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x9: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x1: std_logic_vector(35 downto 0);
  signal slice1_y_net_x2: std_logic_vector(23 downto 0);
  signal slice_y_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x517 <= ce_1;
  clk_1_sg_x517 <= clk_1;
  slice1_y_net_x1 <= coeff;
  ram_data_out_net_x8 <= din;
  concat_y_net_x4 <= taps;
  coeff_out <= slice1_y_net_x2;
  dout <= ram_data_out_net_x9;
  taps_out <= concat_y_net_x5;

  c_to_ri_b02f3208fd: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => ram_data_out_net_x8,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  concat: entity work.concat_ab12067065
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x0,
      in1 => concat_y_net_x4,
      y => concat_y_net_x5
    );

  delay_bram_81d594f247: entity work.delay_bram_entity_7bcb3fe81a
    port map (
      ce_1 => ce_1_sg_x517,
      clk_1 => clk_1_sg_x517,
      din => ram_data_out_net_x8,
      dout => ram_data_out_net_x9
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x517,
      clk => clk_1_sg_x517,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x517,
      clk => clk_1_sg_x517,
      clr => '0',
      p => mult1_p_net_x0
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_d50ce400c8: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 36,
      y_width => 12
    )
    port map (
      x => slice1_y_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 35,
      x_width => 36,
      y_width => 24
    )
    port map (
      x => slice1_y_net_x1,
      y => slice1_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in1_tap7"

entity pol1_in1_tap7_entity_e8914d71ea is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(23 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    taps: in std_logic_vector(287 downto 0); 
    coeff_out: out std_logic_vector(11 downto 0); 
    dout: out std_logic_vector(23 downto 0); 
    taps_out: out std_logic_vector(335 downto 0)
  );
end pol1_in1_tap7_entity_e8914d71ea;

architecture structural of pol1_in1_tap7_entity_e8914d71ea is
  signal ce_1_sg_x519: std_logic;
  signal clk_1_sg_x519: std_logic;
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal concat_y_net_x6: std_logic_vector(287 downto 0);
  signal concat_y_net_x7: std_logic_vector(335 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x12: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x3: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x3: std_logic_vector(23 downto 0);
  signal slice1_y_net_x4: std_logic_vector(11 downto 0);
  signal slice_y_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x519 <= ce_1;
  clk_1_sg_x519 <= clk_1;
  slice1_y_net_x3 <= coeff;
  ram_data_out_net_x12 <= din;
  concat_y_net_x6 <= taps;
  coeff_out <= slice1_y_net_x4;
  dout <= ram_data_out_net_x3;
  taps_out <= concat_y_net_x7;

  c_to_ri_27149910e4: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => ram_data_out_net_x12,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  concat: entity work.concat_ad8008664e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x0,
      in1 => concat_y_net_x6,
      y => concat_y_net_x7
    );

  delay_bram_a1d4d68d2d: entity work.delay_bram_entity_7bcb3fe81a
    port map (
      ce_1 => ce_1_sg_x519,
      clk_1 => clk_1_sg_x519,
      din => ram_data_out_net_x12,
      dout => ram_data_out_net_x3
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x519,
      clk => clk_1_sg_x519,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x519,
      clk => clk_1_sg_x519,
      clr => '0',
      p => mult1_p_net_x0
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_8e1e660c6e: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 24,
      y_width => 12
    )
    port map (
      x => slice1_y_net_x3,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 23,
      x_width => 24,
      y_width => 12
    )
    port map (
      x => slice1_y_net_x3,
      y => slice1_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in2_coeffs"

entity pol1_in2_coeffs_entity_a55017a1cc is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(23 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(95 downto 0); 
    dout: out std_logic_vector(23 downto 0)
  );
end pol1_in2_coeffs_entity_a55017a1cc;

architecture structural of pol1_in2_coeffs_entity_a55017a1cc is
  signal ce_1_sg_x520: std_logic;
  signal clk_1_sg_x520: std_logic;
  signal concat_y_net: std_logic_vector(95 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay16_q_net_x1: std_logic;
  signal delay1_q_net_x0: std_logic_vector(23 downto 0);
  signal delay22_q_net_x0: std_logic_vector(23 downto 0);
  signal fan_delay1_q_net: std_logic_vector(8 downto 0);
  signal fan_delay2_q_net: std_logic_vector(8 downto 0);
  signal fan_delay3_q_net: std_logic_vector(8 downto 0);
  signal fan_delay4_q_net: std_logic_vector(8 downto 0);
  signal fan_delay5_q_net: std_logic_vector(8 downto 0);
  signal fan_delay6_q_net: std_logic_vector(8 downto 0);
  signal fan_delay7_q_net: std_logic_vector(8 downto 0);
  signal fan_delay8_q_net: std_logic_vector(8 downto 0);
  signal register_q_net_x0: std_logic_vector(95 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(11 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(11 downto 0);
  signal rom1_data_net: std_logic_vector(11 downto 0);
  signal rom2_data_net: std_logic_vector(11 downto 0);
  signal rom3_data_net: std_logic_vector(11 downto 0);
  signal rom4_data_net: std_logic_vector(11 downto 0);
  signal rom5_data_net: std_logic_vector(11 downto 0);
  signal rom6_data_net: std_logic_vector(11 downto 0);
  signal rom7_data_net: std_logic_vector(11 downto 0);
  signal rom8_data_net: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x520 <= ce_1;
  clk_1_sg_x520 <= clk_1;
  delay22_q_net_x0 <= din;
  delay16_q_net_x1 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_2b477872fe
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      clr => '0',
      en => "1",
      rst(0) => delay16_q_net_x1,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 24
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => delay22_q_net_x0,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  fan_delay5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay5_q_net
    );

  fan_delay6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay6_q_net
    );

  fan_delay7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay7_q_net
    );

  fan_delay8: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay8_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 96,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom5_data_net,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom6_data_net,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom7_data_net,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_a106f99236
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom8_data_net,
      output_port => reinterpret8_output_port_net
    );

  rom1: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_71a5af829a75ed2e",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_c4f5525aae3b7cc2",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_60732526a32585a3",
      latency => 2
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_ae0ddec0927f04a0",
      latency => 2
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

  rom5: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_9054aea18ca2eda6",
      latency => 2
    )
    port map (
      addr => fan_delay5_q_net,
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      en => "1",
      rst => "0",
      data => rom5_data_net
    );

  rom6: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_4517334a65f39fdf",
      latency => 2
    )
    port map (
      addr => fan_delay6_q_net,
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      en => "1",
      rst => "0",
      data => rom6_data_net
    );

  rom7: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_ebbcdb89d25d5e19",
      latency => 2
    )
    port map (
      addr => fan_delay7_q_net,
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      en => "1",
      rst => "0",
      data => rom7_data_net
    );

  rom8: entity work.xlsprom_blast_0209_dds305
    generic map (
      c_address_width => 9,
      c_width => 12,
      core_name0 => "bmg_72_51c8ac5d548aeae7",
      latency => 2
    )
    port map (
      addr => fan_delay8_q_net,
      ce => ce_1_sg_x520,
      clk => clk_1_sg_x520,
      en => "1",
      rst => "0",
      data => rom8_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in2_last_tap/pfb_add_tree"

entity pfb_add_tree_entity_7fa441029d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(383 downto 0); 
    dout: out std_logic_vector(23 downto 0)
  );
end pfb_add_tree_entity_7fa441029d;

architecture structural of pfb_add_tree_entity_7fa441029d is
  signal addr7_s_net_x0: std_logic_vector(23 downto 0);
  signal addr7_s_net_x1: std_logic_vector(23 downto 0);
  signal ce_1_sg_x525: std_logic;
  signal clk_1_sg_x525: std_logic;
  signal concat_y_net_x1: std_logic_vector(383 downto 0);
  signal concat_y_net_x2: std_logic_vector(23 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(11 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(11 downto 0);
  signal reint0_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint0_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint1_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint1_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint2_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint2_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint3_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint3_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint4_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint4_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint5_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint5_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint6_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint6_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint7_1_output_port_net_x0: std_logic_vector(23 downto 0);
  signal reint7_2_output_port_net_x0: std_logic_vector(23 downto 0);
  signal scale1_op_net: std_logic_vector(23 downto 0);
  signal scale2_op_net: std_logic_vector(23 downto 0);
  signal slice0_1_y_net: std_logic_vector(23 downto 0);
  signal slice0_2_y_net: std_logic_vector(23 downto 0);
  signal slice1_1_y_net: std_logic_vector(23 downto 0);
  signal slice1_2_y_net: std_logic_vector(23 downto 0);
  signal slice2_1_y_net: std_logic_vector(23 downto 0);
  signal slice2_2_y_net: std_logic_vector(23 downto 0);
  signal slice3_1_y_net: std_logic_vector(23 downto 0);
  signal slice3_2_y_net: std_logic_vector(23 downto 0);
  signal slice4_1_y_net: std_logic_vector(23 downto 0);
  signal slice4_2_y_net: std_logic_vector(23 downto 0);
  signal slice5_1_y_net: std_logic_vector(23 downto 0);
  signal slice5_2_y_net: std_logic_vector(23 downto 0);
  signal slice6_1_y_net: std_logic_vector(23 downto 0);
  signal slice6_2_y_net: std_logic_vector(23 downto 0);
  signal slice7_1_y_net: std_logic_vector(23 downto 0);
  signal slice7_2_y_net: std_logic_vector(23 downto 0);

begin
  ce_1_sg_x525 <= ce_1;
  clk_1_sg_x525 <= clk_1;
  concat_y_net_x1 <= din;
  dout <= concat_y_net_x2;

  adder_tree1_15ed06888b: entity work.adder_tree2_entity_2bda7bdc76
    port map (
      ce_1 => ce_1_sg_x525,
      clk_1 => clk_1_sg_x525,
      din1 => reint0_1_output_port_net_x0,
      din2 => reint1_1_output_port_net_x0,
      din3 => reint2_1_output_port_net_x0,
      din4 => reint3_1_output_port_net_x0,
      din5 => reint4_1_output_port_net_x0,
      din6 => reint5_1_output_port_net_x0,
      din7 => reint6_1_output_port_net_x0,
      din8 => reint7_1_output_port_net_x0,
      dout => addr7_s_net_x0
    );

  adder_tree2_f82d02b166: entity work.adder_tree2_entity_2bda7bdc76
    port map (
      ce_1 => ce_1_sg_x525,
      clk_1 => clk_1_sg_x525,
      din1 => reint0_2_output_port_net_x0,
      din2 => reint1_2_output_port_net_x0,
      din3 => reint2_2_output_port_net_x0,
      din4 => reint3_2_output_port_net_x0,
      din5 => reint4_2_output_port_net_x0,
      din6 => reint5_2_output_port_net_x0,
      din7 => reint6_2_output_port_net_x0,
      din8 => reint7_2_output_port_net_x0,
      dout => addr7_s_net_x1
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 23,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 11,
      dout_width => 12,
      latency => 1,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x525,
      clk => clk_1_sg_x525,
      clr => '0',
      din => scale1_op_net,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 23,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 11,
      dout_width => 12,
      latency => 1,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x525,
      clk => clk_1_sg_x525,
      clr => '0',
      din => scale2_op_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  reint0_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice0_1_y_net,
      output_port => reint0_1_output_port_net_x0
    );

  reint0_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice0_2_y_net,
      output_port => reint0_2_output_port_net_x0
    );

  reint1_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_1_y_net,
      output_port => reint1_1_output_port_net_x0
    );

  reint1_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_2_y_net,
      output_port => reint1_2_output_port_net_x0
    );

  reint2_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_1_y_net,
      output_port => reint2_1_output_port_net_x0
    );

  reint2_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_2_y_net,
      output_port => reint2_2_output_port_net_x0
    );

  reint3_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_1_y_net,
      output_port => reint3_1_output_port_net_x0
    );

  reint3_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_2_y_net,
      output_port => reint3_2_output_port_net_x0
    );

  reint4_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_1_y_net,
      output_port => reint4_1_output_port_net_x0
    );

  reint4_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_2_y_net,
      output_port => reint4_2_output_port_net_x0
    );

  reint5_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_1_y_net,
      output_port => reint5_1_output_port_net_x0
    );

  reint5_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_2_y_net,
      output_port => reint5_2_output_port_net_x0
    );

  reint6_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_1_y_net,
      output_port => reint6_1_output_port_net_x0
    );

  reint6_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_2_y_net,
      output_port => reint6_2_output_port_net_x0
    );

  reint7_1: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_1_y_net,
      output_port => reint7_1_output_port_net_x0
    );

  reint7_2: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_2_y_net,
      output_port => reint7_2_output_port_net_x0
    );

  ri_to_c_15964fc373: entity work.ri_to_c_entity_81de5d2889
    port map (
      im => convert2_dout_net_x0,
      re => convert1_dout_net_x0,
      c => concat_y_net_x2
    );

  scale1: entity work.scale_a83099c230
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr7_s_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_a83099c230
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr7_s_net_x1,
      op => scale2_op_net
    );

  slice0_1: entity work.xlslice
    generic map (
      new_lsb => 360,
      new_msb => 383,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice0_1_y_net
    );

  slice0_2: entity work.xlslice
    generic map (
      new_lsb => 336,
      new_msb => 359,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice0_2_y_net
    );

  slice1_1: entity work.xlslice
    generic map (
      new_lsb => 312,
      new_msb => 335,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice1_1_y_net
    );

  slice1_2: entity work.xlslice
    generic map (
      new_lsb => 288,
      new_msb => 311,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice1_2_y_net
    );

  slice2_1: entity work.xlslice
    generic map (
      new_lsb => 264,
      new_msb => 287,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice2_1_y_net
    );

  slice2_2: entity work.xlslice
    generic map (
      new_lsb => 240,
      new_msb => 263,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice2_2_y_net
    );

  slice3_1: entity work.xlslice
    generic map (
      new_lsb => 216,
      new_msb => 239,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice3_1_y_net
    );

  slice3_2: entity work.xlslice
    generic map (
      new_lsb => 192,
      new_msb => 215,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice3_2_y_net
    );

  slice4_1: entity work.xlslice
    generic map (
      new_lsb => 168,
      new_msb => 191,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice4_1_y_net
    );

  slice4_2: entity work.xlslice
    generic map (
      new_lsb => 144,
      new_msb => 167,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice4_2_y_net
    );

  slice5_1: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 143,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice5_1_y_net
    );

  slice5_2: entity work.xlslice
    generic map (
      new_lsb => 96,
      new_msb => 119,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice5_2_y_net
    );

  slice6_1: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 95,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice6_1_y_net
    );

  slice6_2: entity work.xlslice
    generic map (
      new_lsb => 48,
      new_msb => 71,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice6_2_y_net
    );

  slice7_1: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 47,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice7_1_y_net
    );

  slice7_2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 23,
      x_width => 384,
      y_width => 24
    )
    port map (
      x => concat_y_net_x1,
      y => slice7_2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2/pol1_in2_last_tap"

entity pol1_in2_last_tap_entity_e4addf587e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(11 downto 0); 
    din: in std_logic_vector(23 downto 0); 
    taps: in std_logic_vector(335 downto 0); 
    dout: out std_logic_vector(23 downto 0)
  );
end pol1_in2_last_tap_entity_e4addf587e;

architecture structural of pol1_in2_last_tap_entity_e4addf587e is
  signal ce_1_sg_x526: std_logic;
  signal clk_1_sg_x526: std_logic;
  signal concat_y_net_x0: std_logic_vector(47 downto 0);
  signal concat_y_net_x1: std_logic_vector(383 downto 0);
  signal concat_y_net_x3: std_logic_vector(335 downto 0);
  signal concat_y_net_x4: std_logic_vector(23 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(11 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(11 downto 0);
  signal mult1_p_net_x0: std_logic_vector(23 downto 0);
  signal mult_p_net_x0: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x1: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(11 downto 0);
  signal slice1_y_net_x0: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x526 <= ce_1;
  clk_1_sg_x526 <= clk_1;
  slice1_y_net_x0 <= coeff;
  ram_data_out_net_x1 <= din;
  concat_y_net_x3 <= taps;
  dout <= concat_y_net_x4;

  c_to_ri_051aa65941: entity work.c_to_ri8_entity_c11f4b42df
    port map (
      c => ram_data_out_net_x1,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  concat: entity work.concat_c9ea4507fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x0,
      in1 => concat_y_net_x3,
      y => concat_y_net_x1
    );

  mult: entity work.mult_24652a115f
    port map (
      a => force_im_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x526,
      clk => clk_1_sg_x526,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_24652a115f
    port map (
      a => force_re_output_port_net_x0,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x526,
      clk => clk_1_sg_x526,
      clr => '0',
      p => mult1_p_net_x0
    );

  pfb_add_tree_7fa441029d: entity work.pfb_add_tree_entity_7fa441029d
    port map (
      ce_1 => ce_1_sg_x526,
      clk_1 => clk_1_sg_x526,
      din => concat_y_net_x1,
      dout => concat_y_net_x4
    );

  reinterpret: entity work.reinterpret_8f5500aea5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net_x0,
      output_port => reinterpret_output_port_net
    );

  ri_to_c_528845063c: entity work.ri_to_c_entity_6f517952cf
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pfb_fir2"

entity pfb_fir2_entity_d668b6f268 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol1_in1: in std_logic_vector(23 downto 0); 
    pol1_in2: in std_logic_vector(23 downto 0); 
    sync: in std_logic; 
    pol1_out1: out std_logic_vector(23 downto 0); 
    pol1_out2: out std_logic_vector(23 downto 0); 
    sync_out: out std_logic
  );
end pfb_fir2_entity_d668b6f268;

architecture structural of pfb_fir2_entity_d668b6f268 is
  signal ce_1_sg_x539: std_logic;
  signal clk_1_sg_x539: std_logic;
  signal concat_y_net_x10: std_logic_vector(335 downto 0);
  signal concat_y_net_x11: std_logic_vector(47 downto 0);
  signal concat_y_net_x13: std_logic_vector(95 downto 0);
  signal concat_y_net_x14: std_logic_vector(143 downto 0);
  signal concat_y_net_x15: std_logic_vector(191 downto 0);
  signal concat_y_net_x16: std_logic_vector(239 downto 0);
  signal concat_y_net_x17: std_logic_vector(287 downto 0);
  signal concat_y_net_x18: std_logic_vector(335 downto 0);
  signal concat_y_net_x19: std_logic_vector(23 downto 0);
  signal concat_y_net_x2: std_logic_vector(47 downto 0);
  signal concat_y_net_x20: std_logic_vector(23 downto 0);
  signal concat_y_net_x5: std_logic_vector(95 downto 0);
  signal concat_y_net_x6: std_logic_vector(143 downto 0);
  signal concat_y_net_x7: std_logic_vector(191 downto 0);
  signal concat_y_net_x8: std_logic_vector(239 downto 0);
  signal concat_y_net_x9: std_logic_vector(287 downto 0);
  signal delay16_q_net_x2: std_logic;
  signal delay18_q_net_x1: std_logic_vector(23 downto 0);
  signal delay1_q_net_x3: std_logic_vector(23 downto 0);
  signal delay1_q_net_x4: std_logic_vector(23 downto 0);
  signal delay1_q_net_x5: std_logic;
  signal delay22_q_net_x1: std_logic_vector(23 downto 0);
  signal delay_q_net_x2: std_logic;
  signal ram_data_out_net_x10: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x11: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x12: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x13: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x14: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x15: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x16: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x3: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x4: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x5: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x6: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x7: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x8: std_logic_vector(23 downto 0);
  signal ram_data_out_net_x9: std_logic_vector(23 downto 0);
  signal register_q_net_x1: std_logic_vector(95 downto 0);
  signal register_q_net_x2: std_logic_vector(95 downto 0);
  signal slice1_y_net_x1: std_logic_vector(83 downto 0);
  signal slice1_y_net_x10: std_logic_vector(59 downto 0);
  signal slice1_y_net_x11: std_logic_vector(47 downto 0);
  signal slice1_y_net_x12: std_logic_vector(35 downto 0);
  signal slice1_y_net_x13: std_logic_vector(23 downto 0);
  signal slice1_y_net_x14: std_logic_vector(11 downto 0);
  signal slice1_y_net_x2: std_logic_vector(59 downto 0);
  signal slice1_y_net_x3: std_logic_vector(71 downto 0);
  signal slice1_y_net_x4: std_logic_vector(47 downto 0);
  signal slice1_y_net_x5: std_logic_vector(35 downto 0);
  signal slice1_y_net_x6: std_logic_vector(23 downto 0);
  signal slice1_y_net_x7: std_logic_vector(11 downto 0);
  signal slice1_y_net_x8: std_logic_vector(83 downto 0);
  signal slice1_y_net_x9: std_logic_vector(71 downto 0);

begin
  ce_1_sg_x539 <= ce_1;
  clk_1_sg_x539 <= clk_1;
  delay18_q_net_x1 <= pol1_in1;
  delay22_q_net_x1 <= pol1_in2;
  delay16_q_net_x2 <= sync;
  pol1_out1 <= concat_y_net_x19;
  pol1_out2 <= concat_y_net_x20;
  sync_out <= delay1_q_net_x5;

  pol1_in1_coeffs_66e86f0cb5: entity work.pol1_in1_coeffs_entity_66e86f0cb5
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      din => delay18_q_net_x1,
      sync => delay16_q_net_x2,
      coeff => register_q_net_x1,
      dout => delay1_q_net_x3,
      sync_out => delay_q_net_x2
    );

  pol1_in1_first_tap_cb5a0fcb1d: entity work.pol1_in1_first_tap_entity_cb5a0fcb1d
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeffs => register_q_net_x1,
      din => delay1_q_net_x3,
      coeff_out => slice1_y_net_x1,
      dout => ram_data_out_net_x4,
      taps_out => concat_y_net_x2
    );

  pol1_in1_last_tap_98498d4b32: entity work.pol1_in1_last_tap_entity_98498d4b32
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x7,
      din => ram_data_out_net_x3,
      sync => delay_q_net_x2,
      taps => concat_y_net_x10,
      dout => concat_y_net_x19,
      sync_out => delay1_q_net_x5
    );

  pol1_in1_tap2_7c31495a31: entity work.pol1_in1_tap2_entity_7c31495a31
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x1,
      din => ram_data_out_net_x4,
      taps => concat_y_net_x2,
      coeff_out => slice1_y_net_x3,
      dout => ram_data_out_net_x8,
      taps_out => concat_y_net_x5
    );

  pol1_in1_tap3_5e850f1895: entity work.pol1_in1_tap3_entity_5e850f1895
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x3,
      din => ram_data_out_net_x8,
      taps => concat_y_net_x5,
      coeff_out => slice1_y_net_x2,
      dout => ram_data_out_net_x12,
      taps_out => concat_y_net_x6
    );

  pol1_in1_tap4_9378d99f25: entity work.pol1_in1_tap4_entity_9378d99f25
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x2,
      din => ram_data_out_net_x12,
      taps => concat_y_net_x6,
      coeff_out => slice1_y_net_x4,
      dout => ram_data_out_net_x5,
      taps_out => concat_y_net_x7
    );

  pol1_in1_tap5_92949d4b5f: entity work.pol1_in1_tap5_entity_92949d4b5f
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x4,
      din => ram_data_out_net_x5,
      taps => concat_y_net_x7,
      coeff_out => slice1_y_net_x5,
      dout => ram_data_out_net_x9,
      taps_out => concat_y_net_x8
    );

  pol1_in1_tap6_e6bf5827c7: entity work.pol1_in1_tap6_entity_e6bf5827c7
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x5,
      din => ram_data_out_net_x9,
      taps => concat_y_net_x8,
      coeff_out => slice1_y_net_x6,
      dout => ram_data_out_net_x13,
      taps_out => concat_y_net_x9
    );

  pol1_in1_tap7_e8914d71ea: entity work.pol1_in1_tap7_entity_e8914d71ea
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x6,
      din => ram_data_out_net_x13,
      taps => concat_y_net_x9,
      coeff_out => slice1_y_net_x7,
      dout => ram_data_out_net_x3,
      taps_out => concat_y_net_x10
    );

  pol1_in2_coeffs_a55017a1cc: entity work.pol1_in2_coeffs_entity_a55017a1cc
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      din => delay22_q_net_x1,
      sync => delay16_q_net_x2,
      coeff => register_q_net_x2,
      dout => delay1_q_net_x4
    );

  pol1_in2_first_tap_5554b47ee6: entity work.pol1_in1_first_tap_entity_cb5a0fcb1d
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeffs => register_q_net_x2,
      din => delay1_q_net_x4,
      coeff_out => slice1_y_net_x8,
      dout => ram_data_out_net_x6,
      taps_out => concat_y_net_x11
    );

  pol1_in2_last_tap_e4addf587e: entity work.pol1_in2_last_tap_entity_e4addf587e
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x14,
      din => ram_data_out_net_x16,
      taps => concat_y_net_x18,
      dout => concat_y_net_x20
    );

  pol1_in2_tap2_1c92022837: entity work.pol1_in1_tap2_entity_7c31495a31
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x8,
      din => ram_data_out_net_x6,
      taps => concat_y_net_x11,
      coeff_out => slice1_y_net_x9,
      dout => ram_data_out_net_x10,
      taps_out => concat_y_net_x13
    );

  pol1_in2_tap3_d434798a5d: entity work.pol1_in1_tap3_entity_5e850f1895
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x9,
      din => ram_data_out_net_x10,
      taps => concat_y_net_x13,
      coeff_out => slice1_y_net_x10,
      dout => ram_data_out_net_x14,
      taps_out => concat_y_net_x14
    );

  pol1_in2_tap4_0fb19fc474: entity work.pol1_in1_tap4_entity_9378d99f25
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x10,
      din => ram_data_out_net_x14,
      taps => concat_y_net_x14,
      coeff_out => slice1_y_net_x11,
      dout => ram_data_out_net_x7,
      taps_out => concat_y_net_x15
    );

  pol1_in2_tap5_a9e1cf4649: entity work.pol1_in1_tap5_entity_92949d4b5f
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x11,
      din => ram_data_out_net_x7,
      taps => concat_y_net_x15,
      coeff_out => slice1_y_net_x12,
      dout => ram_data_out_net_x11,
      taps_out => concat_y_net_x16
    );

  pol1_in2_tap6_ea498c1624: entity work.pol1_in1_tap6_entity_e6bf5827c7
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x12,
      din => ram_data_out_net_x11,
      taps => concat_y_net_x16,
      coeff_out => slice1_y_net_x13,
      dout => ram_data_out_net_x15,
      taps_out => concat_y_net_x17
    );

  pol1_in2_tap7_463b93c0b4: entity work.pol1_in1_tap7_entity_e8914d71ea
    port map (
      ce_1 => ce_1_sg_x539,
      clk_1 => clk_1_sg_x539,
      coeff => slice1_y_net_x13,
      din => ram_data_out_net_x15,
      taps => concat_y_net_x17,
      coeff_out => slice1_y_net_x14,
      dout => ram_data_out_net_x16,
      taps_out => concat_y_net_x18
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/posedge2"

entity posedge2_entity_c0d9104a95 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end posedge2_entity_c0d9104a95;

architecture structural of posedge2_entity_c0d9104a95 is
  signal blast_0209_dds305_pps_gateway_net_x0: std_logic;
  signal ce_1_sg_x541: std_logic;
  signal clk_1_sg_x541: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;

begin
  ce_1_sg_x541 <= ce_1;
  clk_1_sg_x541 <= clk_1;
  blast_0209_dds305_pps_gateway_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      d(0) => blast_0209_dds305_pps_gateway_net_x0,
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      ip(0) => blast_0209_dds305_pps_gateway_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/posedge8"

entity posedge8_entity_54be68dc15 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end posedge8_entity_54be68dc15;

architecture structural of posedge8_entity_54be68dc15 is
  signal ce_1_sg_x544: std_logic;
  signal clk_1_sg_x544: std_logic;
  signal delay59_q_net_x0: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;

begin
  ce_1_sg_x544 <= ce_1;
  clk_1_sg_x544 <= clk_1;
  delay59_q_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x544,
      clk => clk_1_sg_x544,
      d(0) => delay59_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_f6397bdee1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x544,
      clk => clk_1_sg_x544,
      clr => '0',
      ip(0) => delay59_q_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pps_start"

entity pps_start_entity_dd88f848af is
  port (
    blast_0209_dds305_pps_start_user_data_out: in std_logic_vector(31 downto 0); 
    in_pps_start: out std_logic_vector(31 downto 0)
  );
end pps_start_entity_dd88f848af;

architecture structural of pps_start_entity_dd88f848af is
  signal blast_0209_dds305_pps_start_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_pps_start_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_pps_start_user_data_out_net_x0 <= blast_0209_dds305_pps_start_user_data_out;
  in_pps_start <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_pps_start_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_pps_start_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_pps_start: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_pps_start_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pulse_ext1/posedge"

entity posedge_entity_615db1824e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end posedge_entity_615db1824e;

architecture structural of posedge_entity_615db1824e is
  signal ce_1_sg_x545: std_logic;
  signal clk_1_sg_x545: std_logic;
  signal delay9_q_net_x3: std_logic;
  signal delay_q_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net_x0: std_logic;

begin
  ce_1_sg_x545 <= ce_1;
  clk_1_sg_x545 <= clk_1;
  delay9_q_net_x3 <= in_x0;
  out_x0 <= logical_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x545,
      clk => clk_1_sg_x545,
      d(0) => delay9_q_net_x3,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x545,
      clk => clk_1_sg_x545,
      clr => '0',
      ip(0) => delay_q_net,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay9_q_net_x3,
      y(0) => logical_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pulse_ext1"

entity pulse_ext1_entity_19505637df is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end pulse_ext1_entity_19505637df;

architecture structural of pulse_ext1_entity_19505637df is
  signal ce_1_sg_x546: std_logic;
  signal clk_1_sg_x546: std_logic;
  signal constant5_op_net: std_logic_vector(9 downto 0);
  signal counter3_op_net: std_logic_vector(9 downto 0);
  signal delay9_q_net_x4: std_logic;
  signal logical_y_net_x0: std_logic;
  signal relational5_op_net_x2: std_logic;

begin
  ce_1_sg_x546 <= ce_1;
  clk_1_sg_x546 <= clk_1;
  delay9_q_net_x4 <= in_x0;
  out_x0 <= relational5_op_net_x2;

  constant5: entity work.constant_fbc2f0cce1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  counter3: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_9a633c62b36f8977",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x546,
      clk => clk_1_sg_x546,
      clr => '0',
      en(0) => relational5_op_net_x2,
      rst(0) => logical_y_net_x0,
      op => counter3_op_net
    );

  posedge_615db1824e: entity work.posedge_entity_615db1824e
    port map (
      ce_1 => ce_1_sg_x546,
      clk_1 => clk_1_sg_x546,
      in_x0 => delay9_q_net_x4,
      out_x0 => logical_y_net_x0
    );

  relational5: entity work.relational_f6702ea2f7
    port map (
      a => counter3_op_net,
      b => constant5_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational5_op_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pulse_ext4"

entity pulse_ext4_entity_8af5e19160 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end pulse_ext4_entity_8af5e19160;

architecture structural of pulse_ext4_entity_8af5e19160 is
  signal ce_1_sg_x548: std_logic;
  signal clk_1_sg_x548: std_logic;
  signal constant5_op_net: std_logic_vector(13 downto 0);
  signal counter3_op_net: std_logic_vector(13 downto 0);
  signal edge_op_y_net_x2: std_logic;
  signal logical_y_net_x0: std_logic;
  signal relational5_op_net_x0: std_logic;

begin
  ce_1_sg_x548 <= ce_1;
  clk_1_sg_x548 <= clk_1;
  edge_op_y_net_x2 <= in_x0;
  out_x0 <= relational5_op_net_x0;

  constant5: entity work.constant_24fe963a89
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  counter3: entity work.counter_5c641735c7
    port map (
      ce => ce_1_sg_x548,
      clk => clk_1_sg_x548,
      clr => '0',
      en(0) => relational5_op_net_x0,
      rst(0) => logical_y_net_x0,
      op => counter3_op_net
    );

  posedge_65e48711d0: entity work.posedge_entity_615db1824e
    port map (
      ce_1 => ce_1_sg_x548,
      clk_1 => clk_1_sg_x548,
      in_x0 => edge_op_y_net_x2,
      out_x0 => logical_y_net_x0
    );

  relational5: entity work.relational_7f67627fe4
    port map (
      a => counter3_op_net,
      b => constant5_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational5_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pulse_ext5"

entity pulse_ext5_entity_9f81f134b9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end pulse_ext5_entity_9f81f134b9;

architecture structural of pulse_ext5_entity_9f81f134b9 is
  signal ce_1_sg_x550: std_logic;
  signal clk_1_sg_x550: std_logic;
  signal constant5_op_net: std_logic_vector(11 downto 0);
  signal counter3_op_net: std_logic_vector(11 downto 0);
  signal logical_y_net_x2: std_logic;
  signal logical_y_net_x3: std_logic;
  signal relational5_op_net_x0: std_logic;

begin
  ce_1_sg_x550 <= ce_1;
  clk_1_sg_x550 <= clk_1;
  logical_y_net_x3 <= in_x0;
  out_x0 <= relational5_op_net_x0;

  constant5: entity work.constant_e054d850c5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  counter3: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_47f006c1c8a0d9ca",
      op_arith => xlUnsigned,
      op_width => 12
    )
    port map (
      ce => ce_1_sg_x550,
      clk => clk_1_sg_x550,
      clr => '0',
      en(0) => relational5_op_net_x0,
      rst(0) => logical_y_net_x2,
      op => counter3_op_net
    );

  posedge_ab974a1df3: entity work.posedge_entity_615db1824e
    port map (
      ce_1 => ce_1_sg_x550,
      clk_1 => clk_1_sg_x550,
      in_x0 => logical_y_net_x3,
      out_x0 => logical_y_net_x2
    );

  relational5: entity work.relational_acb3c05dd0
    port map (
      a => counter3_op_net,
      b => constant5_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational5_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/pulse_ext6"

entity pulse_ext6_entity_fb8364835b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end pulse_ext6_entity_fb8364835b;

architecture structural of pulse_ext6_entity_fb8364835b is
  signal ce_1_sg_x552: std_logic;
  signal clk_1_sg_x552: std_logic;
  signal constant5_op_net: std_logic_vector(13 downto 0);
  signal counter3_op_net: std_logic_vector(13 downto 0);
  signal delay29_q_net_x1: std_logic;
  signal logical_y_net_x0: std_logic;
  signal relational5_op_net_x1: std_logic;

begin
  ce_1_sg_x552 <= ce_1;
  clk_1_sg_x552 <= clk_1;
  delay29_q_net_x1 <= in_x0;
  out_x0 <= relational5_op_net_x1;

  constant5: entity work.constant_a7b85580da
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  counter3: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_ed02d0c03a6c5e46",
      op_arith => xlUnsigned,
      op_width => 14
    )
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      en(0) => relational5_op_net_x1,
      rst(0) => logical_y_net_x0,
      op => counter3_op_net
    );

  posedge_97f7438c54: entity work.posedge_entity_615db1824e
    port map (
      ce_1 => ce_1_sg_x552,
      clk_1 => clk_1_sg_x552,
      in_x0 => delay29_q_net_x1,
      out_x0 => logical_y_net_x0
    );

  relational5: entity work.relational_7f67627fe4
    port map (
      a => counter3_op_net,
      b => constant5_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational5_op_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/rawfftbin/add_gen"

entity add_gen_entity_281412ce03 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    cont: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    go: in std_logic; 
    init: in std_logic; 
    we: in std_logic; 
    add: out std_logic_vector(13 downto 0); 
    dout: out std_logic_vector(127 downto 0); 
    status: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end add_gen_entity_281412ce03;

architecture structural of add_gen_entity_281412ce03 is
  signal add_gen_op_net: std_logic_vector(18 downto 0);
  signal ce_1_sg_x554: std_logic;
  signal clk_1_sg_x554: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal convert_dout_net: std_logic_vector(12 downto 0);
  signal data_choice_y_net_x0: std_logic_vector(127 downto 0);
  signal delay1_q_net: std_logic_vector(17 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net_x0: std_logic_vector(127 downto 0);
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register5_q_net: std_logic;
  signal register6_q_net_x0: std_logic;
  signal shift_op_net: std_logic_vector(12 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net_x0: std_logic_vector(13 downto 0);
  signal slice3_y_net_x0: std_logic;
  signal we_choice_y_net_x0: std_logic;

begin
  ce_1_sg_x554 <= ce_1;
  clk_1_sg_x554 <= clk_1;
  never_op_net_x0 <= cont;
  data_choice_y_net_x0 <= din;
  register6_q_net_x0 <= go;
  edge_op_y_net_x1 <= init;
  we_choice_y_net_x0 <= we;
  add <= slice2_y_net_x0;
  dout <= delay6_q_net_x0;
  status <= concat_y_net_x0;
  we_o <= logical6_y_net_x0;

  add_gen: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_0532334f8152a761",
      op_arith => xlUnsigned,
      op_width => 19
    )
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      en(0) => logical6_y_net_x0,
      rst(0) => delay4_q_net,
      op => add_gen_op_net
    );

  concat: entity work.concat_a1e3f9e7e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => shift_op_net,
      in1(0) => inverter_op_net,
      in2 => delay1_q_net,
      y => concat_y_net_x0
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 13,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      din(0) => register5_q_net,
      en => "1",
      dout => convert_dout_net
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      d(0) => delay4_q_net,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_b6092ad150
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      d => slice1_y_net,
      q => delay1_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      d(0) => never_op_net_x0,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      d(0) => edge_op_y_net_x1,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_ee0f706095
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      d => data_choice_y_net_x0,
      q => delay6_q_net_x0
    );

  edge_detect_d994be0865: entity work.edge_detect_entity_27b9bc22ff
    port map (
      ce_1 => ce_1_sg_x554,
      clk_1 => clk_1_sg_x554,
      in_x0 => slice3_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_6844eee868
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      ip(0) => register5_q_net,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      ip(0) => edge_op_y_net_x0,
      op(0) => inverter1_op_net
    );

  logical1: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      d0(0) => we_choice_y_net_x0,
      d1(0) => register6_q_net_x0,
      y(0) => logical1_y_net
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay3_q_net,
      d1(0) => inverter1_op_net,
      y(0) => logical4_y_net
    );

  logical6: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register5_q_net,
      d1(0) => logical4_y_net,
      d2(0) => logical1_y_net,
      y(0) => logical6_y_net_x0
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"1"
    )
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      d(0) => delay3_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => delay_q_net,
      q(0) => register5_q_net
    );

  shift: entity work.shift_07a28c25d6
    port map (
      ce => ce_1_sg_x554,
      clk => clk_1_sg_x554,
      clr => '0',
      ip => convert_dout_net,
      op => shift_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 19,
      y_width => 18
    )
    port map (
      x => add_gen_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 17,
      x_width => 19,
      y_width => 14
    )
    port map (
      x => add_gen_op_net,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 19,
      y_width => 1
    )
    port map (
      x => add_gen_op_net,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/rawfftbin/basic_ctrl"

entity basic_ctrl_entity_d5a6733d17 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ctrl: in std_logic_vector(31 downto 0); 
    din: in std_logic_vector(127 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(127 downto 0); 
    go: out std_logic; 
    init: out std_logic; 
    we_o: out std_logic
  );
end basic_ctrl_entity_d5a6733d17;

architecture structural of basic_ctrl_entity_d5a6733d17 is
  signal cast_dout_net_x1: std_logic_vector(127 downto 0);
  signal ce_1_sg_x557: std_logic;
  signal clk_1_sg_x557: std_logic;
  signal constant1_op_net: std_logic;
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic;
  signal data_choice_y_net_x2: std_logic_vector(127 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay27_q_net_x0: std_logic;
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal edge_op_y_net_x4: std_logic;
  signal enable_y_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x1: std_logic;
  signal mux2_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal trig_src_y_net: std_logic;
  signal valid_src_y_net: std_logic;
  signal we_choice_y_net_x2: std_logic;

begin
  ce_1_sg_x557 <= ce_1;
  clk_1_sg_x557 <= clk_1;
  reint1_output_port_net_x0 <= ctrl;
  cast_dout_net_x1 <= din;
  delay27_q_net_x0 <= we;
  dout <= data_choice_y_net_x2;
  go <= register6_q_net_x1;
  init <= edge_op_y_net_x4;
  we_o <= we_choice_y_net_x2;

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      d(0) => enable_y_net,
      q(0) => delay1_q_net_x0
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      d(0) => trig_src_y_net,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      d(0) => valid_src_y_net,
      q(0) => delay3_q_net
    );

  dram_munge_5bf9e234fb: entity work.dram_munge_entity_9ed6f8ea3d
    port map (
      ce_1 => ce_1_sg_x557,
      clk_1 => clk_1_sg_x557,
      din => cast_dout_net_x1,
      init => edge_op_y_net_x4,
      we => mux1_y_net_x1,
      dout => data_choice_y_net_x2,
      we_o => we_choice_y_net_x2
    );

  edge_detect_901d63363c: entity work.edge_detect1_entity_a1c15fd7db
    port map (
      ce_1 => ce_1_sg_x557,
      clk_1 => clk_1_sg_x557,
      in_x0 => delay1_q_net_x0,
      out_x0 => edge_op_y_net_x4
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => enable_y_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      ip(0) => edge_op_y_net_x4,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux2_y_net,
      d1(0) => inverter_op_net,
      y(0) => logical_y_net
    );

  mux1: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay27_q_net_x0,
      d1(0) => constant2_op_net,
      sel(0) => delay3_q_net,
      y(0) => mux1_y_net_x1
    );

  mux2: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay27_q_net_x0,
      d1(0) => constant1_op_net,
      sel(0) => delay2_q_net,
      y(0) => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      d(0) => constant_op_net,
      en(0) => edge_op_y_net_x4,
      rst(0) => logical_y_net,
      q(0) => register1_q_net
    );

  register6: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      d(0) => mux2_y_net,
      en(0) => register1_q_net,
      rst(0) => edge_op_y_net_x4,
      q(0) => register6_q_net_x1
    );

  trig_src: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => trig_src_y_net
    );

  valid_src: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => valid_src_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/rawfftbin/bram"

entity bram_entity_1b0b279e9d is
  port (
    addr: in std_logic_vector(13 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(127 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(13 downto 0); 
    convert_din1_x0: out std_logic_vector(127 downto 0); 
    convert_we_x0: out std_logic
  );
end bram_entity_1b0b279e9d;

architecture structural of bram_entity_1b0b279e9d is
  signal add_del_q_net_x1: std_logic_vector(13 downto 0);
  signal ce_1_sg_x559: std_logic;
  signal clk_1_sg_x559: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(127 downto 0);
  signal mux_y_net_x0: std_logic_vector(13 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(127 downto 0);
  signal we_del_q_net_x0: std_logic;

begin
  add_del_q_net_x1 <= addr;
  ce_1_sg_x559 <= ce_1;
  clk_1_sg_x559 <= clk_1;
  dat_del_q_net_x1 <= data_in;
  we_del_q_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_8ce6919fed: entity work.calc_add_entity_9798cbd3b9
    port map (
      ce_1 => ce_1_sg_x559,
      clk_1 => clk_1_sg_x559,
      in_x0 => add_del_q_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 14,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 14,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 128,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      clr => '0',
      din => reinterpret_out_output_port_net_x0,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      clr => '0',
      din(0) => we_del_q_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

  munge_in_33da69ce4f: entity work.munge_in_entity_bfbd9f3801
    port map (
      din => dat_del_q_net_x1,
      dout => reinterpret_out_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/rawfftbin/ctrl"

entity ctrl_entity_962c7c5a78 is
  port (
    blast_0209_dds305_rawfftbin_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_962c7c5a78;

architecture structural of ctrl_entity_962c7c5a78 is
  signal blast_0209_dds305_rawfftbin_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_rawfftbin_ctrl_user_data_out_net_x0 <= blast_0209_dds305_rawfftbin_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_rawfftbin_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/rawfftbin"

entity rawfftbin_entity_13c7b5a3c5 is
  port (
    blast_0209_dds305_rawfftbin_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    we: in std_logic; 
    bram: out std_logic_vector(13 downto 0); 
    bram_x0: out std_logic_vector(127 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0)
  );
end rawfftbin_entity_13c7b5a3c5;

architecture structural of rawfftbin_entity_13c7b5a3c5 is
  signal add_del_q_net_x1: std_logic_vector(13 downto 0);
  signal blast_0209_dds305_rawfftbin_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal cast_dout_net_x1: std_logic_vector(127 downto 0);
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x561: std_logic;
  signal clk_1_sg_x561: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(127 downto 0);
  signal convert_addr_dout_net_x1: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(127 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(127 downto 0);
  signal delay27_q_net_x1: std_logic;
  signal delay6_q_net_x0: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x4: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal ri_output_port_net: std_logic_vector(127 downto 0);
  signal slice2_y_net_x0: std_logic_vector(13 downto 0);
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  blast_0209_dds305_rawfftbin_ctrl_user_data_out_net_x1 <= blast_0209_dds305_rawfftbin_ctrl_user_data_out;
  ce_1_sg_x561 <= ce_1;
  clk_1_sg_x561 <= clk_1;
  concatenate_y_net_x1 <= din;
  delay27_q_net_x1 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= cast_gw_dout_net_x1;

  add_del: entity work.delay_93ae8f3a04
    port map (
      ce => ce_1_sg_x561,
      clk => clk_1_sg_x561,
      clr => '0',
      d => slice2_y_net_x0,
      q => add_del_q_net_x1
    );

  add_gen_281412ce03: entity work.add_gen_entity_281412ce03
    port map (
      ce_1 => ce_1_sg_x561,
      clk_1 => clk_1_sg_x561,
      cont => never_op_net_x0,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we => we_choice_y_net_x2,
      add => slice2_y_net_x0,
      dout => delay6_q_net_x0,
      status => concat_y_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_d5a6733d17: entity work.basic_ctrl_entity_d5a6733d17
    port map (
      ce_1 => ce_1_sg_x561,
      clk_1 => clk_1_sg_x561,
      ctrl => reint1_output_port_net_x1,
      din => cast_dout_net_x1,
      we => delay27_q_net_x1,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we_o => we_choice_y_net_x2
    );

  bram_1b0b279e9d: entity work.bram_entity_1b0b279e9d
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x561,
      clk_1 => clk_1_sg_x561,
      data_in => dat_del_q_net_x1,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 128,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x561,
      clk => clk_1_sg_x561,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  ctrl_962c7c5a78: entity work.ctrl_entity_962c7c5a78
    port map (
      blast_0209_dds305_rawfftbin_ctrl_user_data_out => blast_0209_dds305_rawfftbin_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  dat_del: entity work.delay_ee0f706095
    port map (
      ce => ce_1_sg_x561,
      clk => clk_1_sg_x561,
      clr => '0',
      d => delay6_q_net_x0,
      q => dat_del_q_net_x1
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x0
    );

  ri: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x1,
      output_port => ri_output_port_net
    );

  status_5dabd8b414: entity work.status_entity_1610992e91
    port map (
      ce_1 => ce_1_sg_x561,
      clk_1 => clk_1_sg_x561,
      out_reg => concat_y_net_x1,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

  we_del: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x561,
      clk => clk_1_sg_x561,
      clr => '0',
      d(0) => logical6_y_net_x0,
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/rx_ack"

entity rx_ack_entity_a4f38b1ca4 is
  port (
    blast_0209_dds305_rx_ack_user_data_out: in std_logic_vector(31 downto 0); 
    in_reset: out std_logic_vector(31 downto 0)
  );
end rx_ack_entity_a4f38b1ca4;

architecture structural of rx_ack_entity_a4f38b1ca4 is
  signal blast_0209_dds305_rx_ack_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reset_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_rx_ack_user_data_out_net_x0 <= blast_0209_dds305_rx_ack_user_data_out;
  in_reset <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_rx_ack_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reset_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reset: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reset_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/rx_rst"

entity rx_rst_entity_bc03cac20a is
  port (
    blast_0209_dds305_rx_rst_user_data_out: in std_logic_vector(31 downto 0); 
    in_reset: out std_logic_vector(31 downto 0)
  );
end rx_rst_entity_bc03cac20a;

architecture structural of rx_rst_entity_bc03cac20a is
  signal blast_0209_dds305_rx_rst_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reset_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_rx_rst_user_data_out_net_x0 <= blast_0209_dds305_rx_rst_user_data_out;
  in_reset <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_rx_rst_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reset_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reset: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reset_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/start_dac"

entity start_dac_entity_56f0ebcf6a is
  port (
    blast_0209_dds305_start_dac_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end start_dac_entity_56f0ebcf6a;

architecture structural of start_dac_entity_56f0ebcf6a is
  signal blast_0209_dds305_start_dac_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_start_dac_user_data_out_net_x0 <= blast_0209_dds305_start_dac_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_start_dac_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/sync/accum_len"

entity accum_len_entity_62629f9116 is
  port (
    blast_0209_dds305_sync_accum_len_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end accum_len_entity_62629f9116;

architecture structural of accum_len_entity_62629f9116 is
  signal blast_0209_dds305_sync_accum_len_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_sync_accum_len_user_data_out_net_x0 <= blast_0209_dds305_sync_accum_len_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_sync_accum_len_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/sync/accum_reset"

entity accum_reset_entity_11d9bc073f is
  port (
    blast_0209_dds305_sync_accum_reset_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end accum_reset_entity_11d9bc073f;

architecture structural of accum_reset_entity_11d9bc073f is
  signal blast_0209_dds305_sync_accum_reset_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_sync_accum_reset_user_data_out_net_x0 <= blast_0209_dds305_sync_accum_reset_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_sync_accum_reset_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/sync"

entity sync_entity_c3f2a66b6a is
  port (
    blast_0209_dds305_sync_accum_len_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_sync_accum_reset_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    accum_ready: out std_logic
  );
end sync_entity_c3f2a66b6a;

architecture structural of sync_entity_c3f2a66b6a is
  signal accum_counter1_op_net: std_logic_vector(23 downto 0);
  signal blast_0209_dds305_sync_accum_len_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_sync_accum_reset_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x563: std_logic;
  signal clk_1_sg_x563: std_logic;
  signal constant1_op_net: std_logic;
  signal convert1_dout_net: std_logic;
  signal delay48_q_net_x0: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal relational4_op_net_x0: std_logic;
  signal slice_y_net_x0: std_logic;

begin
  blast_0209_dds305_sync_accum_len_user_data_out_net_x1 <= blast_0209_dds305_sync_accum_len_user_data_out;
  blast_0209_dds305_sync_accum_reset_user_data_out_net_x1 <= blast_0209_dds305_sync_accum_reset_user_data_out;
  ce_1_sg_x563 <= ce_1;
  clk_1_sg_x563 <= clk_1;
  delay48_q_net_x0 <= sync_in;
  accum_ready <= relational4_op_net_x0;

  accum_counter1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_4762233ff70c041e",
      op_arith => xlUnsigned,
      op_width => 24
    )
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      en(0) => convert1_dout_net,
      rst(0) => logical_y_net,
      op => accum_counter1_op_net
    );

  accum_len_62629f9116: entity work.accum_len_entity_62629f9116
    port map (
      blast_0209_dds305_sync_accum_len_user_data_out => blast_0209_dds305_sync_accum_len_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x0
    );

  accum_reset_11d9bc073f: entity work.accum_reset_entity_11d9bc073f
    port map (
      blast_0209_dds305_sync_accum_reset_user_data_out => blast_0209_dds305_sync_accum_reset_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      din(0) => register1_q_net,
      en => "1",
      dout(0) => convert1_dout_net
    );

  edge_detect2_edf3585594: entity work.edge_detect1_entity_35b2158155
    port map (
      ce_1 => ce_1_sg_x563,
      clk_1 => clk_1_sg_x563,
      in_x0 => slice_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x0,
      d1(0) => relational4_op_net_x0,
      y(0) => logical_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      d(0) => constant1_op_net,
      en(0) => delay48_q_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register1_q_net
    );

  relational4: entity work.relational_e415e473bb
    port map (
      a => accum_counter1_op_net,
      b => reint1_output_port_net_x0,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational4_op_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x1,
      y(0) => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/tx_destip"

entity tx_destip_entity_b9b3944cba is
  port (
    blast_0209_dds305_tx_destip_user_data_out: in std_logic_vector(31 downto 0); 
    in_reset: out std_logic_vector(31 downto 0)
  );
end tx_destip_entity_b9b3944cba;

architecture structural of tx_destip_entity_b9b3944cba is
  signal blast_0209_dds305_tx_destip_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reset_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_tx_destip_user_data_out_net_x0 <= blast_0209_dds305_tx_destip_user_data_out;
  in_reset <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_tx_destip_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reset_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reset: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reset_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/tx_destport"

entity tx_destport_entity_fba435391b is
  port (
    blast_0209_dds305_tx_destport_user_data_out: in std_logic_vector(31 downto 0); 
    in_reset: out std_logic_vector(31 downto 0)
  );
end tx_destport_entity_fba435391b;

architecture structural of tx_destport_entity_fba435391b is
  signal blast_0209_dds305_tx_destport_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reset_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_tx_destport_user_data_out_net_x0 <= blast_0209_dds305_tx_destport_user_data_out;
  in_reset <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_tx_destport_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reset_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reset: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reset_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305/tx_rst"

entity tx_rst_entity_df33bbb24d is
  port (
    blast_0209_dds305_tx_rst_user_data_out: in std_logic_vector(31 downto 0); 
    in_reset: out std_logic_vector(31 downto 0)
  );
end tx_rst_entity_df33bbb24d;

architecture structural of tx_rst_entity_df33bbb24d is
  signal blast_0209_dds305_tx_rst_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reset_y_net: std_logic_vector(31 downto 0);

begin
  blast_0209_dds305_tx_rst_user_data_out_net_x0 <= blast_0209_dds305_tx_rst_user_data_out;
  in_reset <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blast_0209_dds305_tx_rst_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reset_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reset: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reset_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "blast_0209_dds305"

entity blast_0209_dds305 is
  port (
    blast_0209_dds305_accum_snap_bram_data_out: in std_logic_vector(127 downto 0); 
    blast_0209_dds305_accum_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_adc_mkid_user_data_i0: in std_logic_vector(11 downto 0); 
    blast_0209_dds305_adc_mkid_user_data_i1: in std_logic_vector(11 downto 0); 
    blast_0209_dds305_adc_mkid_user_data_q0: in std_logic_vector(11 downto 0); 
    blast_0209_dds305_adc_mkid_user_data_q1: in std_logic_vector(11 downto 0); 
    blast_0209_dds305_adc_mkid_user_sync: in std_logic; 
    blast_0209_dds305_adc_snap_bram_data_out: in std_logic_vector(63 downto 0); 
    blast_0209_dds305_adc_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_adc_snap_trig_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_bins_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_chan_select_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_dac_reset_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_dds_shift_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_fft_shift_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_fft_snap_bram_data_out: in std_logic_vector(63 downto 0); 
    blast_0209_dds305_fft_snap_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_load_bins_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_mixerout_bram_data_out: in std_logic_vector(63 downto 0); 
    blast_0209_dds305_mixerout_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_one_gbe_app_dbg_data: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_one_gbe_app_dbg_dvld: in std_logic; 
    blast_0209_dds305_one_gbe_app_rx_badframe: in std_logic; 
    blast_0209_dds305_one_gbe_app_rx_data: in std_logic_vector(7 downto 0); 
    blast_0209_dds305_one_gbe_app_rx_dvld: in std_logic; 
    blast_0209_dds305_one_gbe_app_rx_eof: in std_logic; 
    blast_0209_dds305_one_gbe_app_rx_overrun: in std_logic; 
    blast_0209_dds305_one_gbe_app_rx_srcip: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_one_gbe_app_rx_srcport: in std_logic_vector(15 downto 0); 
    blast_0209_dds305_one_gbe_app_tx_afull: in std_logic; 
    blast_0209_dds305_one_gbe_app_tx_overflow: in std_logic; 
    blast_0209_dds305_pps_gateway: in std_logic; 
    blast_0209_dds305_pps_start_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_qdr_lut_qdr0_ack: in std_logic; 
    blast_0209_dds305_qdr_lut_qdr0_cal_fail: in std_logic; 
    blast_0209_dds305_qdr_lut_qdr0_data_out: in std_logic_vector(71 downto 0); 
    blast_0209_dds305_qdr_lut_qdr0_data_valid: in std_logic; 
    blast_0209_dds305_qdr_lut_qdr0_phy_ready: in std_logic; 
    blast_0209_dds305_qdr_lut_qdr1_ack: in std_logic; 
    blast_0209_dds305_qdr_lut_qdr1_cal_fail: in std_logic; 
    blast_0209_dds305_qdr_lut_qdr1_data_out: in std_logic_vector(71 downto 0); 
    blast_0209_dds305_qdr_lut_qdr1_data_valid: in std_logic; 
    blast_0209_dds305_qdr_lut_qdr1_phy_ready: in std_logic; 
    blast_0209_dds305_qdr_lut_we_qdr_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_rawfftbin_bram_data_out: in std_logic_vector(127 downto 0); 
    blast_0209_dds305_rawfftbin_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_rx_ack_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_rx_rst_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_start_dac_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_sync_accum_len_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_sync_accum_reset_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_tx_destip_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_tx_destport_user_data_out: in std_logic_vector(31 downto 0); 
    blast_0209_dds305_tx_rst_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    blast_0209_dds305_accum_snap_bram_addr: out std_logic_vector(8 downto 0); 
    blast_0209_dds305_accum_snap_bram_data_in: out std_logic_vector(127 downto 0); 
    blast_0209_dds305_accum_snap_bram_we: out std_logic; 
    blast_0209_dds305_accum_snap_status_user_data_in: out std_logic_vector(31 downto 0); 
    blast_0209_dds305_adc_snap_bram_addr: out std_logic_vector(9 downto 0); 
    blast_0209_dds305_adc_snap_bram_data_in: out std_logic_vector(63 downto 0); 
    blast_0209_dds305_adc_snap_bram_we: out std_logic; 
    blast_0209_dds305_adc_snap_status_user_data_in: out std_logic_vector(31 downto 0); 
    blast_0209_dds305_dac_mkid1_dac_data_i0: out std_logic_vector(15 downto 0); 
    blast_0209_dds305_dac_mkid1_dac_data_i1: out std_logic_vector(15 downto 0); 
    blast_0209_dds305_dac_mkid1_dac_data_q0: out std_logic_vector(15 downto 0); 
    blast_0209_dds305_dac_mkid1_dac_data_q1: out std_logic_vector(15 downto 0); 
    blast_0209_dds305_dac_mkid1_dac_sync_i: out std_logic; 
    blast_0209_dds305_dac_mkid1_dac_sync_q: out std_logic; 
    blast_0209_dds305_dac_mkid1_not_reset: out std_logic; 
    blast_0209_dds305_fft_snap_bram_addr: out std_logic_vector(8 downto 0); 
    blast_0209_dds305_fft_snap_bram_data_in: out std_logic_vector(63 downto 0); 
    blast_0209_dds305_fft_snap_bram_we: out std_logic; 
    blast_0209_dds305_fft_snap_status_user_data_in: out std_logic_vector(31 downto 0); 
    blast_0209_dds305_mixerout_bram_addr: out std_logic_vector(13 downto 0); 
    blast_0209_dds305_mixerout_bram_data_in: out std_logic_vector(63 downto 0); 
    blast_0209_dds305_mixerout_bram_we: out std_logic; 
    blast_0209_dds305_mixerout_status_user_data_in: out std_logic_vector(31 downto 0); 
    blast_0209_dds305_one_gbe_app_rx_ack: out std_logic; 
    blast_0209_dds305_one_gbe_app_rx_rst: out std_logic; 
    blast_0209_dds305_one_gbe_app_tx_data: out std_logic_vector(7 downto 0); 
    blast_0209_dds305_one_gbe_app_tx_destip: out std_logic_vector(31 downto 0); 
    blast_0209_dds305_one_gbe_app_tx_destport: out std_logic_vector(15 downto 0); 
    blast_0209_dds305_one_gbe_app_tx_dvld: out std_logic; 
    blast_0209_dds305_one_gbe_app_tx_eof: out std_logic; 
    blast_0209_dds305_one_gbe_app_tx_rst: out std_logic; 
    blast_0209_dds305_overflow_user_data_in: out std_logic_vector(31 downto 0); 
    blast_0209_dds305_qdr_lut_qdr0_address: out std_logic_vector(31 downto 0); 
    blast_0209_dds305_qdr_lut_qdr0_be: out std_logic_vector(7 downto 0); 
    blast_0209_dds305_qdr_lut_qdr0_data_in: out std_logic_vector(71 downto 0); 
    blast_0209_dds305_qdr_lut_qdr0_rd_en: out std_logic; 
    blast_0209_dds305_qdr_lut_qdr0_wr_en: out std_logic; 
    blast_0209_dds305_qdr_lut_qdr1_address: out std_logic_vector(31 downto 0); 
    blast_0209_dds305_qdr_lut_qdr1_be: out std_logic_vector(7 downto 0); 
    blast_0209_dds305_qdr_lut_qdr1_data_in: out std_logic_vector(71 downto 0); 
    blast_0209_dds305_qdr_lut_qdr1_rd_en: out std_logic; 
    blast_0209_dds305_qdr_lut_qdr1_wr_en: out std_logic; 
    blast_0209_dds305_rawfftbin_bram_addr: out std_logic_vector(13 downto 0); 
    blast_0209_dds305_rawfftbin_bram_data_in: out std_logic_vector(127 downto 0); 
    blast_0209_dds305_rawfftbin_bram_we: out std_logic; 
    blast_0209_dds305_rawfftbin_status_user_data_in: out std_logic_vector(31 downto 0)
  );
end blast_0209_dds305;

architecture structural of blast_0209_dds305 is
  attribute core_generation_info: string;
  attribute core_generation_info of structural : architecture is "blast_0209_dds305,sysgen_core,{clock_period=3.90620000,clocking=Clock_Enables,compilation=NGC_Netlist,sample_periods=1.00000000000,testbench=0,total_blocks=12517,xilinx_accumulator_block=2,xilinx_adder_subtracter_block=223,xilinx_arithmetic_relational_operator_block=68,xilinx_assert_block=13,xilinx_binary_shift_operator_block=5,xilinx_bit_slice_extractor_block=1302,xilinx_bitbasher_block=4,xilinx_bus_concatenator_block=409,xilinx_bus_multiplexer_block=171,xilinx_constant_block_block=457,xilinx_counter_block=108,xilinx_delay_block=694,xilinx_disregard_subsystem_for_generation_block=7,xilinx_dual_port_random_access_memory_block=15,xilinx_gateway_in_block=77,xilinx_gateway_out_block=55,xilinx_input_scaler_block=44,xilinx_inverter_block=170,xilinx_logical_block_block=324,xilinx_multiplier_block=76,xilinx_negate_block_block=15,xilinx_register_block=80,xilinx_single_port_random_access_memory_block=40,xilinx_single_port_read_only_memory_block=25,xilinx_system_generator_block=1,xilinx_type_converter_block=187,xilinx_type_reinterpreter_block=1909,}";

  signal accumulator1_q_net: std_logic_vector(31 downto 0);
  signal accumulator_q_net: std_logic_vector(31 downto 0);
  signal addsub1_s_net: std_logic_vector(9 downto 0);
  signal adress_counter3_op_net: std_logic_vector(8 downto 0);
  signal adress_counter4_op_net: std_logic_vector(8 downto 0);
  signal blast_0209_dds305_accum_snap_bram_addr_net: std_logic_vector(8 downto 0);
  signal blast_0209_dds305_accum_snap_bram_data_in_net: std_logic_vector(127 downto 0);
  signal blast_0209_dds305_accum_snap_bram_data_out_net: std_logic_vector(127 downto 0);
  signal blast_0209_dds305_accum_snap_bram_we_net: std_logic;
  signal blast_0209_dds305_accum_snap_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_accum_snap_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_adc_mkid_user_data_i0_net: std_logic_vector(11 downto 0);
  signal blast_0209_dds305_adc_mkid_user_data_i1_net: std_logic_vector(11 downto 0);
  signal blast_0209_dds305_adc_mkid_user_data_q0_net: std_logic_vector(11 downto 0);
  signal blast_0209_dds305_adc_mkid_user_data_q1_net: std_logic_vector(11 downto 0);
  signal blast_0209_dds305_adc_mkid_user_sync_net: std_logic;
  signal blast_0209_dds305_adc_snap_bram_addr_net: std_logic_vector(9 downto 0);
  signal blast_0209_dds305_adc_snap_bram_data_in_net: std_logic_vector(63 downto 0);
  signal blast_0209_dds305_adc_snap_bram_data_out_net: std_logic_vector(63 downto 0);
  signal blast_0209_dds305_adc_snap_bram_we_net: std_logic;
  signal blast_0209_dds305_adc_snap_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_adc_snap_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_adc_snap_trig_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_bins_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_chan_select_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_dac_mkid1_dac_data_i0_net: std_logic_vector(15 downto 0);
  signal blast_0209_dds305_dac_mkid1_dac_data_i1_net: std_logic_vector(15 downto 0);
  signal blast_0209_dds305_dac_mkid1_dac_data_q0_net: std_logic_vector(15 downto 0);
  signal blast_0209_dds305_dac_mkid1_dac_data_q1_net: std_logic_vector(15 downto 0);
  signal blast_0209_dds305_dac_mkid1_dac_sync_i_net: std_logic;
  signal blast_0209_dds305_dac_mkid1_dac_sync_q_net: std_logic;
  signal blast_0209_dds305_dac_mkid1_not_reset_net: std_logic;
  signal blast_0209_dds305_dac_reset_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_dds_shift_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_fft_shift_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_fft_snap_bram_addr_net: std_logic_vector(8 downto 0);
  signal blast_0209_dds305_fft_snap_bram_data_in_net: std_logic_vector(63 downto 0);
  signal blast_0209_dds305_fft_snap_bram_data_out_net: std_logic_vector(63 downto 0);
  signal blast_0209_dds305_fft_snap_bram_we_net: std_logic;
  signal blast_0209_dds305_fft_snap_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_fft_snap_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_load_bins_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_mixerout_bram_addr_net: std_logic_vector(13 downto 0);
  signal blast_0209_dds305_mixerout_bram_data_in_net: std_logic_vector(63 downto 0);
  signal blast_0209_dds305_mixerout_bram_data_out_net: std_logic_vector(63 downto 0);
  signal blast_0209_dds305_mixerout_bram_we_net: std_logic;
  signal blast_0209_dds305_mixerout_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_mixerout_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_one_gbe_app_dbg_data_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_one_gbe_app_dbg_dvld_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_rx_ack_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_rx_badframe_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_rx_data_net: std_logic_vector(7 downto 0);
  signal blast_0209_dds305_one_gbe_app_rx_dvld_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_rx_eof_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_rx_overrun_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_rx_rst_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_rx_srcip_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_one_gbe_app_rx_srcport_net: std_logic_vector(15 downto 0);
  signal blast_0209_dds305_one_gbe_app_tx_afull_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_tx_data_net: std_logic_vector(7 downto 0);
  signal blast_0209_dds305_one_gbe_app_tx_destip_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_one_gbe_app_tx_destport_net: std_logic_vector(15 downto 0);
  signal blast_0209_dds305_one_gbe_app_tx_dvld_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_tx_eof_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_tx_overflow_net: std_logic;
  signal blast_0209_dds305_one_gbe_app_tx_rst_net: std_logic;
  signal blast_0209_dds305_overflow_user_data_in_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_pps_gateway_net: std_logic;
  signal blast_0209_dds305_pps_start_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr0_ack_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr0_address_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr0_be_net: std_logic_vector(7 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr0_cal_fail_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr0_data_in_net: std_logic_vector(71 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr0_data_out_net: std_logic_vector(71 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr0_data_valid_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr0_phy_ready_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr0_rd_en_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr0_wr_en_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr1_ack_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr1_address_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr1_be_net: std_logic_vector(7 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr1_cal_fail_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr1_data_in_net: std_logic_vector(71 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr1_data_out_net: std_logic_vector(71 downto 0);
  signal blast_0209_dds305_qdr_lut_qdr1_data_valid_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr1_phy_ready_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr1_rd_en_net: std_logic;
  signal blast_0209_dds305_qdr_lut_qdr1_wr_en_net: std_logic;
  signal blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_rawfftbin_bram_addr_net: std_logic_vector(13 downto 0);
  signal blast_0209_dds305_rawfftbin_bram_data_in_net: std_logic_vector(127 downto 0);
  signal blast_0209_dds305_rawfftbin_bram_data_out_net: std_logic_vector(127 downto 0);
  signal blast_0209_dds305_rawfftbin_bram_we_net: std_logic;
  signal blast_0209_dds305_rawfftbin_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_rawfftbin_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_rx_ack_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_rx_rst_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_start_dac_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_sync_accum_len_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_sync_accum_reset_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_tx_destip_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_tx_destport_user_data_out_net: std_logic_vector(31 downto 0);
  signal blast_0209_dds305_tx_rst_user_data_out_net: std_logic_vector(31 downto 0);
  signal ce_1_sg_x564: std_logic;
  signal clk_1_sg_x564: std_logic;
  signal concat_y_net_x0: std_logic_vector(23 downto 0);
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal concat_y_net_x19: std_logic_vector(23 downto 0);
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x20: std_logic_vector(23 downto 0);
  signal concat_y_net_x3: std_logic_vector(23 downto 0);
  signal concat_y_net_x4: std_logic_vector(37 downto 0);
  signal concat_y_net_x5: std_logic_vector(37 downto 0);
  signal concatenate1_y_net_x16: std_logic_vector(127 downto 0);
  signal concatenate4_y_net: std_logic_vector(71 downto 0);
  signal concatenate5_y_net: std_logic_vector(71 downto 0);
  signal concatenate7_y_net: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(63 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(127 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(63 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(127 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(63 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(31 downto 0);
  signal constant10_op_net_x1: std_logic;
  signal constant11_op_net: std_logic;
  signal constant12_op_net: std_logic;
  signal constant13_op_net: std_logic_vector(9 downto 0);
  signal constant14_op_net: std_logic;
  signal constant15_op_net: std_logic_vector(71 downto 0);
  signal constant16_op_net: std_logic_vector(71 downto 0);
  signal constant17_op_net: std_logic_vector(31 downto 0);
  signal constant1_op_net_x2: std_logic;
  signal constant2_op_net_x0: std_logic;
  signal constant4_op_net: std_logic_vector(9 downto 0);
  signal convert10_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert11_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert12_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert13_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert3_dout_net: std_logic;
  signal convert4_dout_net: std_logic;
  signal convert5_dout_net: std_logic;
  signal convert8_dout_net_x0: std_logic_vector(31 downto 0);
  signal counter2_op_net: std_logic_vector(8 downto 0);
  signal counter3_op_net: std_logic_vector(19 downto 0);
  signal counter4_op_net: std_logic_vector(31 downto 0);
  signal counter6_op_net: std_logic_vector(10 downto 0);
  signal delay100_q_net: std_logic;
  signal delay101_q_net: std_logic;
  signal delay102_q_net: std_logic;
  signal delay103_q_net: std_logic_vector(8 downto 0);
  signal delay104_q_net: std_logic;
  signal delay105_q_net: std_logic_vector(71 downto 0);
  signal delay106_q_net: std_logic;
  signal delay107_q_net: std_logic;
  signal delay108_q_net: std_logic;
  signal delay109_q_net: std_logic;
  signal delay10_q_net: std_logic;
  signal delay10_q_net_x2: std_logic_vector(15 downto 0);
  signal delay110_q_net: std_logic_vector(71 downto 0);
  signal delay111_q_net: std_logic;
  signal delay112_q_net: std_logic;
  signal delay113_q_net: std_logic_vector(71 downto 0);
  signal delay114_q_net: std_logic_vector(71 downto 0);
  signal delay11_q_net_x0: std_logic_vector(63 downto 0);
  signal delay11_q_net_x2: std_logic_vector(15 downto 0);
  signal delay12_q_net_x1: std_logic_vector(15 downto 0);
  signal delay12_q_net_x3: std_logic;
  signal delay13_q_net: std_logic_vector(9 downto 0);
  signal delay14_q_net: std_logic_vector(8 downto 0);
  signal delay14_q_net_x1: std_logic_vector(15 downto 0);
  signal delay15_q_net: std_logic_vector(71 downto 0);
  signal delay16_q_net_x2: std_logic;
  signal delay17_q_net_x0: std_logic_vector(31 downto 0);
  signal delay17_q_net_x2: std_logic_vector(15 downto 0);
  signal delay18_q_net_x1: std_logic_vector(23 downto 0);
  signal delay18_q_net_x2: std_logic_vector(15 downto 0);
  signal delay19_q_net_x0: std_logic_vector(11 downto 0);
  signal delay1_q_net: std_logic_vector(71 downto 0);
  signal delay1_q_net_x5: std_logic;
  signal delay20_q_net_x2: std_logic_vector(35 downto 0);
  signal delay21_q_net_x2: std_logic_vector(35 downto 0);
  signal delay22_q_net_x1: std_logic_vector(23 downto 0);
  signal delay23_q_net_x0: std_logic_vector(31 downto 0);
  signal delay24_q_net_x0: std_logic_vector(31 downto 0);
  signal delay25_q_net_x0: std_logic_vector(31 downto 0);
  signal delay26_q_net: std_logic;
  signal delay27_q_net_x1: std_logic;
  signal delay28_q_net_x0: std_logic_vector(31 downto 0);
  signal delay29_q_net_x1: std_logic;
  signal delay2_q_net: std_logic_vector(71 downto 0);
  signal delay2_q_net_x1: std_logic_vector(15 downto 0);
  signal delay31_q_net_x0: std_logic_vector(11 downto 0);
  signal delay32_q_net: std_logic_vector(71 downto 0);
  signal delay33_q_net: std_logic;
  signal delay34_q_net_x0: std_logic_vector(17 downto 0);
  signal delay35_q_net_x0: std_logic_vector(17 downto 0);
  signal delay36_q_net_x0: std_logic_vector(17 downto 0);
  signal delay37_q_net_x0: std_logic_vector(17 downto 0);
  signal delay38_q_net: std_logic;
  signal delay39_q_net: std_logic;
  signal delay3_q_net_x0: std_logic_vector(63 downto 0);
  signal delay40_q_net_x2: std_logic_vector(35 downto 0);
  signal delay41_q_net_x2: std_logic_vector(35 downto 0);
  signal delay42_q_net_x1: std_logic;
  signal delay43_q_net: std_logic;
  signal delay44_q_net_x0: std_logic_vector(11 downto 0);
  signal delay45_q_net: std_logic_vector(31 downto 0);
  signal delay46_q_net_x0: std_logic_vector(11 downto 0);
  signal delay47_q_net: std_logic;
  signal delay48_q_net_x0: std_logic;
  signal delay49_q_net_x0: std_logic_vector(18 downto 0);
  signal delay4_q_net: std_logic;
  signal delay50_q_net_x0: std_logic_vector(18 downto 0);
  signal delay51_q_net: std_logic_vector(31 downto 0);
  signal delay52_q_net: std_logic_vector(31 downto 0);
  signal delay53_q_net: std_logic_vector(71 downto 0);
  signal delay54_q_net: std_logic_vector(31 downto 0);
  signal delay55_q_net: std_logic_vector(31 downto 0);
  signal delay56_q_net: std_logic_vector(31 downto 0);
  signal delay57_q_net_x0: std_logic_vector(31 downto 0);
  signal delay58_q_net_x11: std_logic;
  signal delay59_q_net_x0: std_logic;
  signal delay5_q_net_x1: std_logic;
  signal delay60_q_net_x0: std_logic_vector(18 downto 0);
  signal delay61_q_net: std_logic;
  signal delay62_q_net_x0: std_logic_vector(18 downto 0);
  signal delay63_q_net: std_logic_vector(71 downto 0);
  signal delay64_q_net_x0: std_logic;
  signal delay67_q_net_x0: std_logic;
  signal delay68_q_net: std_logic;
  signal delay69_q_net: std_logic_vector(7 downto 0);
  signal delay6_q_net: std_logic;
  signal delay70_q_net: std_logic;
  signal delay71_q_net: std_logic;
  signal delay72_q_net_x0: std_logic_vector(127 downto 0);
  signal delay73_q_net_x1: std_logic_vector(23 downto 0);
  signal delay74_q_net_x1: std_logic_vector(23 downto 0);
  signal delay77_q_net: std_logic;
  signal delay78_q_net: std_logic;
  signal delay79_q_net: std_logic;
  signal delay7_q_net: std_logic;
  signal delay82_q_net_x0: std_logic;
  signal delay83_q_net: std_logic;
  signal delay84_q_net: std_logic_vector(1 downto 0);
  signal delay86_q_net: std_logic;
  signal delay87_q_net: std_logic_vector(31 downto 0);
  signal delay8_q_net: std_logic;
  signal delay91_q_net: std_logic;
  signal delay92_q_net: std_logic;
  signal delay96_q_net: std_logic_vector(71 downto 0);
  signal delay97_q_net: std_logic_vector(71 downto 0);
  signal delay98_q_net: std_logic;
  signal delay99_q_net: std_logic_vector(9 downto 0);
  signal delay9_q_net_x1: std_logic_vector(15 downto 0);
  signal delay9_q_net_x4: std_logic;
  signal dual_port_ram3_douta_net: std_logic_vector(9 downto 0);
  signal dual_port_ram3_doutb_net: std_logic_vector(9 downto 0);
  signal dual_port_ram4_douta_net: std_logic_vector(71 downto 0);
  signal dual_port_ram4_doutb_net: std_logic_vector(71 downto 0);
  signal dual_port_ram5_douta_net: std_logic_vector(71 downto 0);
  signal dual_port_ram5_doutb_net: std_logic_vector(71 downto 0);
  signal dual_port_ram_doutb_net_x2: std_logic_vector(31 downto 0);
  signal dual_port_ram_doutb_net_x3: std_logic_vector(31 downto 0);
  signal dual_port_ram_doutb_net_x4: std_logic_vector(15 downto 0);
  signal dual_port_ram_doutb_net_x5: std_logic_vector(15 downto 0);
  signal dual_port_ram_doutb_net_x6: std_logic_vector(15 downto 0);
  signal dual_port_ram_doutb_net_x7: std_logic_vector(15 downto 0);
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal edge_op_y_net_x17: std_logic;
  signal edge_op_y_net_x18: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal edge_op_y_net_x3: std_logic;
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(18 downto 0);
  signal force_im_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(18 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(18 downto 0);
  signal force_re_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(18 downto 0);
  signal inverter1_op_net: std_logic;
  signal inverter2_op_net: std_logic;
  signal inverter3_op_net: std_logic;
  signal inverter4_op_net: std_logic;
  signal inverter5_op_net: std_logic;
  signal logical3_y_net_x0: std_logic;
  signal logical_y_net_x3: std_logic;
  signal lut_counter1_op_net: std_logic_vector(9 downto 0);
  signal mux10_y_net: std_logic_vector(7 downto 0);
  signal mux15_y_net: std_logic_vector(35 downto 0);
  signal mux16_y_net: std_logic_vector(71 downto 0);
  signal mux17_y_net: std_logic_vector(8 downto 0);
  signal mux18_y_net: std_logic_vector(8 downto 0);
  signal mux19_y_net: std_logic_vector(9 downto 0);
  signal mux1_y_net: std_logic_vector(35 downto 0);
  signal mux2_y_net: std_logic_vector(35 downto 0);
  signal mux3_y_net: std_logic_vector(35 downto 0);
  signal mux4_y_net_x0: std_logic_vector(7 downto 0);
  signal mux6_y_net: std_logic_vector(31 downto 0);
  signal mux8_y_net: std_logic_vector(10 downto 0);
  signal of_or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x3: std_logic;
  signal register1_q_net_x17: std_logic_vector(7 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x10: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x11: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x12: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x13: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x3: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x4: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x5: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x6: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x7: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x8: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x9: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x23: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x24: std_logic_vector(35 downto 0);
  signal reinterpret_output_port_net_x4: std_logic_vector(11 downto 0);
  signal reinterpret_output_port_net_x5: std_logic_vector(11 downto 0);
  signal reinterpret_output_port_net_x6: std_logic_vector(11 downto 0);
  signal reinterpret_output_port_net_x7: std_logic_vector(11 downto 0);
  signal relational1_op_net: std_logic;
  signal relational4_op_net_x0: std_logic;
  signal relational5_op_net_x0: std_logic;
  signal relational5_op_net_x1: std_logic;
  signal relational5_op_net_x2: std_logic;
  signal relational5_op_net_x3: std_logic;
  signal selector1_op_net: std_logic;
  signal single_port_ram1_data_out_net: std_logic_vector(31 downto 0);
  signal single_port_ram_data_out_net_x1: std_logic_vector(31 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(31 downto 0);
  signal single_port_ram_data_out_net_x3: std_logic_vector(31 downto 0);
  signal single_port_ram_data_out_net_x4: std_logic_vector(31 downto 0);
  signal slice10_y_net: std_logic_vector(7 downto 0);
  signal slice13_y_net: std_logic_vector(35 downto 0);
  signal slice14_y_net: std_logic_vector(35 downto 0);
  signal slice15_y_net: std_logic_vector(7 downto 0);
  signal slice16_y_net: std_logic_vector(7 downto 0);
  signal slice19_y_net: std_logic_vector(1 downto 0);
  signal slice1_y_net_x3: std_logic;
  signal slice20_y_net: std_logic_vector(10 downto 0);
  signal slice21_y_net: std_logic_vector(10 downto 0);
  signal slice25_y_net_x0: std_logic;
  signal slice26_y_net_x0: std_logic;
  signal slice27_y_net_x0: std_logic_vector(15 downto 0);
  signal slice28_y_net_x0: std_logic;
  signal slice2_y_net_x2: std_logic;
  signal slice35_y_net: std_logic_vector(9 downto 0);
  signal slice36_y_net: std_logic;
  signal slice37_y_net: std_logic;
  signal slice38_y_net: std_logic_vector(9 downto 0);
  signal slice39_y_net: std_logic_vector(8 downto 0);
  signal slice3_y_net: std_logic;
  signal slice40_y_net: std_logic_vector(8 downto 0);
  signal slice41_y_net: std_logic_vector(35 downto 0);
  signal slice42_y_net: std_logic_vector(35 downto 0);
  signal slice43_y_net: std_logic_vector(35 downto 0);
  signal slice44_y_net: std_logic_vector(35 downto 0);
  signal slice45_y_net: std_logic_vector(35 downto 0);
  signal slice46_y_net: std_logic_vector(35 downto 0);
  signal slice47_y_net: std_logic_vector(35 downto 0);
  signal slice48_y_net: std_logic_vector(35 downto 0);
  signal slice4_y_net_x0: std_logic;
  signal slice5_y_net: std_logic_vector(1 downto 0);
  signal slice6_y_net_x5: std_logic_vector(8 downto 0);
  signal slice7_y_net: std_logic;
  signal slice9_y_net: std_logic_vector(7 downto 0);

begin
  blast_0209_dds305_accum_snap_bram_data_out_net <= blast_0209_dds305_accum_snap_bram_data_out;
  blast_0209_dds305_accum_snap_ctrl_user_data_out_net <= blast_0209_dds305_accum_snap_ctrl_user_data_out;
  blast_0209_dds305_adc_mkid_user_data_i0_net <= blast_0209_dds305_adc_mkid_user_data_i0;
  blast_0209_dds305_adc_mkid_user_data_i1_net <= blast_0209_dds305_adc_mkid_user_data_i1;
  blast_0209_dds305_adc_mkid_user_data_q0_net <= blast_0209_dds305_adc_mkid_user_data_q0;
  blast_0209_dds305_adc_mkid_user_data_q1_net <= blast_0209_dds305_adc_mkid_user_data_q1;
  blast_0209_dds305_adc_mkid_user_sync_net <= blast_0209_dds305_adc_mkid_user_sync;
  blast_0209_dds305_adc_snap_bram_data_out_net <= blast_0209_dds305_adc_snap_bram_data_out;
  blast_0209_dds305_adc_snap_ctrl_user_data_out_net <= blast_0209_dds305_adc_snap_ctrl_user_data_out;
  blast_0209_dds305_adc_snap_trig_user_data_out_net <= blast_0209_dds305_adc_snap_trig_user_data_out;
  blast_0209_dds305_bins_user_data_out_net <= blast_0209_dds305_bins_user_data_out;
  blast_0209_dds305_chan_select_user_data_out_net <= blast_0209_dds305_chan_select_user_data_out;
  blast_0209_dds305_dac_reset_user_data_out_net <= blast_0209_dds305_dac_reset_user_data_out;
  blast_0209_dds305_dds_shift_user_data_out_net <= blast_0209_dds305_dds_shift_user_data_out;
  blast_0209_dds305_fft_shift_user_data_out_net <= blast_0209_dds305_fft_shift_user_data_out;
  blast_0209_dds305_fft_snap_bram_data_out_net <= blast_0209_dds305_fft_snap_bram_data_out;
  blast_0209_dds305_fft_snap_ctrl_user_data_out_net <= blast_0209_dds305_fft_snap_ctrl_user_data_out;
  blast_0209_dds305_load_bins_user_data_out_net <= blast_0209_dds305_load_bins_user_data_out;
  blast_0209_dds305_mixerout_bram_data_out_net <= blast_0209_dds305_mixerout_bram_data_out;
  blast_0209_dds305_mixerout_ctrl_user_data_out_net <= blast_0209_dds305_mixerout_ctrl_user_data_out;
  blast_0209_dds305_one_gbe_app_dbg_data_net <= blast_0209_dds305_one_gbe_app_dbg_data;
  blast_0209_dds305_one_gbe_app_dbg_dvld_net <= blast_0209_dds305_one_gbe_app_dbg_dvld;
  blast_0209_dds305_one_gbe_app_rx_badframe_net <= blast_0209_dds305_one_gbe_app_rx_badframe;
  blast_0209_dds305_one_gbe_app_rx_data_net <= blast_0209_dds305_one_gbe_app_rx_data;
  blast_0209_dds305_one_gbe_app_rx_dvld_net <= blast_0209_dds305_one_gbe_app_rx_dvld;
  blast_0209_dds305_one_gbe_app_rx_eof_net <= blast_0209_dds305_one_gbe_app_rx_eof;
  blast_0209_dds305_one_gbe_app_rx_overrun_net <= blast_0209_dds305_one_gbe_app_rx_overrun;
  blast_0209_dds305_one_gbe_app_rx_srcip_net <= blast_0209_dds305_one_gbe_app_rx_srcip;
  blast_0209_dds305_one_gbe_app_rx_srcport_net <= blast_0209_dds305_one_gbe_app_rx_srcport;
  blast_0209_dds305_one_gbe_app_tx_afull_net <= blast_0209_dds305_one_gbe_app_tx_afull;
  blast_0209_dds305_one_gbe_app_tx_overflow_net <= blast_0209_dds305_one_gbe_app_tx_overflow;
  blast_0209_dds305_pps_gateway_net <= blast_0209_dds305_pps_gateway;
  blast_0209_dds305_pps_start_user_data_out_net <= blast_0209_dds305_pps_start_user_data_out;
  blast_0209_dds305_qdr_lut_qdr0_ack_net <= blast_0209_dds305_qdr_lut_qdr0_ack;
  blast_0209_dds305_qdr_lut_qdr0_cal_fail_net <= blast_0209_dds305_qdr_lut_qdr0_cal_fail;
  blast_0209_dds305_qdr_lut_qdr0_data_out_net <= blast_0209_dds305_qdr_lut_qdr0_data_out;
  blast_0209_dds305_qdr_lut_qdr0_data_valid_net <= blast_0209_dds305_qdr_lut_qdr0_data_valid;
  blast_0209_dds305_qdr_lut_qdr0_phy_ready_net <= blast_0209_dds305_qdr_lut_qdr0_phy_ready;
  blast_0209_dds305_qdr_lut_qdr1_ack_net <= blast_0209_dds305_qdr_lut_qdr1_ack;
  blast_0209_dds305_qdr_lut_qdr1_cal_fail_net <= blast_0209_dds305_qdr_lut_qdr1_cal_fail;
  blast_0209_dds305_qdr_lut_qdr1_data_out_net <= blast_0209_dds305_qdr_lut_qdr1_data_out;
  blast_0209_dds305_qdr_lut_qdr1_data_valid_net <= blast_0209_dds305_qdr_lut_qdr1_data_valid;
  blast_0209_dds305_qdr_lut_qdr1_phy_ready_net <= blast_0209_dds305_qdr_lut_qdr1_phy_ready;
  blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net <= blast_0209_dds305_qdr_lut_we_qdr_user_data_out;
  blast_0209_dds305_rawfftbin_bram_data_out_net <= blast_0209_dds305_rawfftbin_bram_data_out;
  blast_0209_dds305_rawfftbin_ctrl_user_data_out_net <= blast_0209_dds305_rawfftbin_ctrl_user_data_out;
  blast_0209_dds305_rx_ack_user_data_out_net <= blast_0209_dds305_rx_ack_user_data_out;
  blast_0209_dds305_rx_rst_user_data_out_net <= blast_0209_dds305_rx_rst_user_data_out;
  blast_0209_dds305_start_dac_user_data_out_net <= blast_0209_dds305_start_dac_user_data_out;
  blast_0209_dds305_sync_accum_len_user_data_out_net <= blast_0209_dds305_sync_accum_len_user_data_out;
  blast_0209_dds305_sync_accum_reset_user_data_out_net <= blast_0209_dds305_sync_accum_reset_user_data_out;
  blast_0209_dds305_tx_destip_user_data_out_net <= blast_0209_dds305_tx_destip_user_data_out;
  blast_0209_dds305_tx_destport_user_data_out_net <= blast_0209_dds305_tx_destport_user_data_out;
  blast_0209_dds305_tx_rst_user_data_out_net <= blast_0209_dds305_tx_rst_user_data_out;
  ce_1_sg_x564 <= ce_1;
  clk_1_sg_x564 <= clk_1;
  blast_0209_dds305_accum_snap_bram_addr <= blast_0209_dds305_accum_snap_bram_addr_net;
  blast_0209_dds305_accum_snap_bram_data_in <= blast_0209_dds305_accum_snap_bram_data_in_net;
  blast_0209_dds305_accum_snap_bram_we <= blast_0209_dds305_accum_snap_bram_we_net;
  blast_0209_dds305_accum_snap_status_user_data_in <= blast_0209_dds305_accum_snap_status_user_data_in_net;
  blast_0209_dds305_adc_snap_bram_addr <= blast_0209_dds305_adc_snap_bram_addr_net;
  blast_0209_dds305_adc_snap_bram_data_in <= blast_0209_dds305_adc_snap_bram_data_in_net;
  blast_0209_dds305_adc_snap_bram_we <= blast_0209_dds305_adc_snap_bram_we_net;
  blast_0209_dds305_adc_snap_status_user_data_in <= blast_0209_dds305_adc_snap_status_user_data_in_net;
  blast_0209_dds305_dac_mkid1_dac_data_i0 <= blast_0209_dds305_dac_mkid1_dac_data_i0_net;
  blast_0209_dds305_dac_mkid1_dac_data_i1 <= blast_0209_dds305_dac_mkid1_dac_data_i1_net;
  blast_0209_dds305_dac_mkid1_dac_data_q0 <= blast_0209_dds305_dac_mkid1_dac_data_q0_net;
  blast_0209_dds305_dac_mkid1_dac_data_q1 <= blast_0209_dds305_dac_mkid1_dac_data_q1_net;
  blast_0209_dds305_dac_mkid1_dac_sync_i <= blast_0209_dds305_dac_mkid1_dac_sync_i_net;
  blast_0209_dds305_dac_mkid1_dac_sync_q <= blast_0209_dds305_dac_mkid1_dac_sync_q_net;
  blast_0209_dds305_dac_mkid1_not_reset <= blast_0209_dds305_dac_mkid1_not_reset_net;
  blast_0209_dds305_fft_snap_bram_addr <= blast_0209_dds305_fft_snap_bram_addr_net;
  blast_0209_dds305_fft_snap_bram_data_in <= blast_0209_dds305_fft_snap_bram_data_in_net;
  blast_0209_dds305_fft_snap_bram_we <= blast_0209_dds305_fft_snap_bram_we_net;
  blast_0209_dds305_fft_snap_status_user_data_in <= blast_0209_dds305_fft_snap_status_user_data_in_net;
  blast_0209_dds305_mixerout_bram_addr <= blast_0209_dds305_mixerout_bram_addr_net;
  blast_0209_dds305_mixerout_bram_data_in <= blast_0209_dds305_mixerout_bram_data_in_net;
  blast_0209_dds305_mixerout_bram_we <= blast_0209_dds305_mixerout_bram_we_net;
  blast_0209_dds305_mixerout_status_user_data_in <= blast_0209_dds305_mixerout_status_user_data_in_net;
  blast_0209_dds305_one_gbe_app_rx_ack <= blast_0209_dds305_one_gbe_app_rx_ack_net;
  blast_0209_dds305_one_gbe_app_rx_rst <= blast_0209_dds305_one_gbe_app_rx_rst_net;
  blast_0209_dds305_one_gbe_app_tx_data <= blast_0209_dds305_one_gbe_app_tx_data_net;
  blast_0209_dds305_one_gbe_app_tx_destip <= blast_0209_dds305_one_gbe_app_tx_destip_net;
  blast_0209_dds305_one_gbe_app_tx_destport <= blast_0209_dds305_one_gbe_app_tx_destport_net;
  blast_0209_dds305_one_gbe_app_tx_dvld <= blast_0209_dds305_one_gbe_app_tx_dvld_net;
  blast_0209_dds305_one_gbe_app_tx_eof <= blast_0209_dds305_one_gbe_app_tx_eof_net;
  blast_0209_dds305_one_gbe_app_tx_rst <= blast_0209_dds305_one_gbe_app_tx_rst_net;
  blast_0209_dds305_overflow_user_data_in <= blast_0209_dds305_overflow_user_data_in_net;
  blast_0209_dds305_qdr_lut_qdr0_address <= blast_0209_dds305_qdr_lut_qdr0_address_net;
  blast_0209_dds305_qdr_lut_qdr0_be <= blast_0209_dds305_qdr_lut_qdr0_be_net;
  blast_0209_dds305_qdr_lut_qdr0_data_in <= blast_0209_dds305_qdr_lut_qdr0_data_in_net;
  blast_0209_dds305_qdr_lut_qdr0_rd_en <= blast_0209_dds305_qdr_lut_qdr0_rd_en_net;
  blast_0209_dds305_qdr_lut_qdr0_wr_en <= blast_0209_dds305_qdr_lut_qdr0_wr_en_net;
  blast_0209_dds305_qdr_lut_qdr1_address <= blast_0209_dds305_qdr_lut_qdr1_address_net;
  blast_0209_dds305_qdr_lut_qdr1_be <= blast_0209_dds305_qdr_lut_qdr1_be_net;
  blast_0209_dds305_qdr_lut_qdr1_data_in <= blast_0209_dds305_qdr_lut_qdr1_data_in_net;
  blast_0209_dds305_qdr_lut_qdr1_rd_en <= blast_0209_dds305_qdr_lut_qdr1_rd_en_net;
  blast_0209_dds305_qdr_lut_qdr1_wr_en <= blast_0209_dds305_qdr_lut_qdr1_wr_en_net;
  blast_0209_dds305_rawfftbin_bram_addr <= blast_0209_dds305_rawfftbin_bram_addr_net;
  blast_0209_dds305_rawfftbin_bram_data_in <= blast_0209_dds305_rawfftbin_bram_data_in_net;
  blast_0209_dds305_rawfftbin_bram_we <= blast_0209_dds305_rawfftbin_bram_we_net;
  blast_0209_dds305_rawfftbin_status_user_data_in <= blast_0209_dds305_rawfftbin_status_user_data_in_net;

  accum_snap_c908e90a25: entity work.accum_snap_entity_c908e90a25
    port map (
      blast_0209_dds305_accum_snap_ctrl_user_data_out => blast_0209_dds305_accum_snap_ctrl_user_data_out_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => delay72_q_net_x0,
      trig => delay9_q_net_x4,
      we => relational5_op_net_x2,
      bram => blast_0209_dds305_accum_snap_bram_addr_net,
      bram_x0 => blast_0209_dds305_accum_snap_bram_data_in_net,
      bram_x1 => blast_0209_dds305_accum_snap_bram_we_net,
      status => blast_0209_dds305_accum_snap_status_user_data_in_net
    );

  accumulator: entity work.accum_30e7444a38
    port map (
      b(0) => convert5_dout_net,
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en(0) => slice7_y_net,
      q => accumulator_q_net
    );

  accumulator1: entity work.accum_30e7444a38
    port map (
      b(0) => convert4_dout_net,
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en(0) => slice7_y_net,
      q => accumulator1_q_net
    );

  adc_mkid_aa08432fe2: entity work.adc_mkid_entity_aa08432fe2
    port map (
      blast_0209_dds305_adc_mkid_user_data_i0 => blast_0209_dds305_adc_mkid_user_data_i0_net,
      blast_0209_dds305_adc_mkid_user_data_i1 => blast_0209_dds305_adc_mkid_user_data_i1_net,
      blast_0209_dds305_adc_mkid_user_data_q0 => blast_0209_dds305_adc_mkid_user_data_q0_net,
      blast_0209_dds305_adc_mkid_user_data_q1 => blast_0209_dds305_adc_mkid_user_data_q1_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      data_i0 => reinterpret_output_port_net_x4,
      data_i1 => reinterpret_output_port_net_x5,
      data_q0 => reinterpret_output_port_net_x6,
      data_q1 => reinterpret_output_port_net_x7
    );

  adc_snap_7e674f563c: entity work.adc_snap_entity_7e674f563c
    port map (
      blast_0209_dds305_adc_snap_ctrl_user_data_out => blast_0209_dds305_adc_snap_ctrl_user_data_out_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => delay11_q_net_x0,
      trig => slice2_y_net_x2,
      we => constant10_op_net_x1,
      bram => blast_0209_dds305_adc_snap_bram_addr_net,
      bram_x0 => blast_0209_dds305_adc_snap_bram_data_in_net,
      bram_x1 => blast_0209_dds305_adc_snap_bram_we_net,
      status => blast_0209_dds305_adc_snap_status_user_data_in_net
    );

  adc_snap_trig_fe125d08a4: entity work.adc_snap_trig_entity_fe125d08a4
    port map (
      blast_0209_dds305_adc_snap_trig_user_data_out => blast_0209_dds305_adc_snap_trig_user_data_out_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_reg => reint1_output_port_net_x0
    );

  addsub1: entity work.xladdsub_blast_0209_dds305
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 10,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 10,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 11,
      core_name0 => "addsb_11_0_c0b46a46c1db574d",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 11,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 10
    )
    port map (
      a => mux19_y_net,
      b => constant4_op_net,
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en => "1",
      s => addsub1_s_net
    );

  adress_counter3: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en(0) => inverter4_op_net,
      rst(0) => delay98_q_net,
      op => adress_counter3_op_net
    );

  adress_counter4: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en(0) => convert3_dout_net,
      rst(0) => delay98_q_net,
      op => adress_counter4_op_net
    );

  bins_ba5c42e40f: entity work.bins_entity_ba5c42e40f
    port map (
      blast_0209_dds305_bins_user_data_out => blast_0209_dds305_bins_user_data_out_net,
      in_reg => reint1_output_port_net_x1
    );

  bus_create1_e98d453ec1: entity work.bus_create1_entity_e98d453ec1
    port map (
      in1 => convert10_dout_net_x0,
      in2 => convert11_dout_net_x0,
      in3 => convert12_dout_net_x0,
      in4 => convert13_dout_net_x0,
      bus_out => concatenate_y_net_x0
    );

  bus_create4_7234e3b349: entity work.join_entity_aefcecb885
    port map (
      in1 => concatenate_y_net_x13,
      in2 => concatenate_y_net_x14,
      bus_out => concatenate_y_net_x4
    );

  bus_create5_bdb10f7b98: entity work.bus_create5_entity_bdb10f7b98
    port map (
      in1 => delay57_q_net_x0,
      in2 => delay24_q_net_x0,
      in3 => delay23_q_net_x0,
      in4 => delay28_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

  bus_create6_b764156945: entity work.join_entity_628a03ad90
    port map (
      in1 => delay17_q_net_x0,
      in2 => dual_port_ram_doutb_net_x2,
      in3 => delay25_q_net_x0,
      in4 => dual_port_ram_doutb_net_x3,
      bus_out => concatenate_y_net_x5
    );

  bus_create7_53d16b4e65: entity work.bus_create7_entity_53d16b4e65
    port map (
      in1 => delay10_q_net_x2,
      in2 => delay17_q_net_x2,
      bus_out => concatenate_y_net_x6
    );

  bus_create8_c0c92258fb: entity work.bus_create7_entity_53d16b4e65
    port map (
      in1 => delay11_q_net_x2,
      in2 => delay18_q_net_x2,
      bus_out => concatenate_y_net_x7
    );

  bus_create9_1a9330e0d3: entity work.join_entity_aefcecb885
    port map (
      in1 => concatenate_y_net_x11,
      in2 => concatenate_y_net_x12,
      bus_out => concatenate_y_net_x8
    );

  c_to_ri3_f97ac79861: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => delay40_q_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri5_9f5d726fc2: entity work.c_to_ri5_entity_9f5d726fc2
    port map (
      c => concat_y_net_x5,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  c_to_ri6_89875ede30: entity work.c_to_ri3_entity_f97ac79861
    port map (
      c => delay41_q_net_x2,
      im => force_im_output_port_net_x2,
      re => force_re_output_port_net_x2
    );

  c_to_ri7_2255b7af75: entity work.c_to_ri5_entity_9f5d726fc2
    port map (
      c => concat_y_net_x4,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  chan_select_606dfa777f: entity work.chan_select_entity_606dfa777f
    port map (
      blast_0209_dds305_chan_select_user_data_out => blast_0209_dds305_chan_select_user_data_out_net,
      in_reg => reint1_output_port_net_x2
    );

  concatenate1: entity work.concat_b11ec1c0d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant17_op_net,
      in1 => accumulator1_q_net,
      in2 => counter4_op_net,
      in3 => accumulator_q_net,
      y => concatenate1_y_net_x16
    );

  concatenate4: entity work.concat_c3ccc04d1a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => mux2_y_net,
      in1 => mux1_y_net,
      y => concatenate4_y_net
    );

  concatenate5: entity work.concat_c3ccc04d1a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => mux15_y_net,
      in1 => mux3_y_net,
      y => concatenate5_y_net
    );

  concatenate7: entity work.concat_c3ccc04d1a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net_x24,
      in1 => reinterpret1_output_port_net_x23,
      y => concatenate7_y_net
    );

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net_x2
    );

  constant10: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant10_op_net_x1
    );

  constant11: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant11_op_net
    );

  constant12: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant12_op_net
    );

  constant13: entity work.constant_498bc68c14
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant13_op_net
    );

  constant14: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant14_op_net
    );

  constant15: entity work.constant_68d110842c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant15_op_net
    );

  constant16: entity work.constant_68d110842c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant16_op_net
    );

  constant17: entity work.constant_c392aa8a91
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant17_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net_x0
    );

  constant4: entity work.constant_f1ac4bddff
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  convert10: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 11,
      din_width => 12,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      din => reinterpret_output_port_net_x4,
      en => "1",
      dout => convert10_dout_net_x0
    );

  convert11: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 11,
      din_width => 12,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      din => reinterpret_output_port_net_x5,
      en => "1",
      dout => convert11_dout_net_x0
    );

  convert12: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 11,
      din_width => 12,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      din => reinterpret_output_port_net_x6,
      en => "1",
      dout => convert12_dout_net_x0
    );

  convert13: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 11,
      din_width => 12,
      dout_arith => 2,
      dout_bin_pt => 15,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      din => reinterpret_output_port_net_x7,
      en => "1",
      dout => convert13_dout_net_x0
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      din(0) => selector1_op_net,
      en => "1",
      dout(0) => convert3_dout_net
    );

  convert4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      din(0) => edge_op_y_net_x2,
      en => "1",
      dout(0) => convert4_dout_net
    );

  convert5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      din(0) => edge_op_y_net_x17,
      en => "1",
      dout(0) => convert5_dout_net
    );

  convert8: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      din(0) => of_or_y_net_x0,
      en => "1",
      dout => convert8_dout_net_x0
    );

  counter2: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_1f06b71632254894",
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en => "1",
      rst(0) => delay83_q_net,
      op => counter2_op_net
    );

  counter3: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_121582607093004b",
      op_arith => xlUnsigned,
      op_width => 20
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en(0) => relational5_op_net_x3,
      rst(0) => edge_op_y_net_x3,
      op => counter3_op_net
    );

  counter4: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_7e7fb47e39adf4da",
      op_arith => xlUnsigned,
      op_width => 32
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en(0) => slice7_y_net,
      rst(0) => edge_op_y_net_x2,
      op => counter4_op_net
    );

  counter6: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_bf568bdf3cd9f9c7",
      op_arith => xlUnsigned,
      op_width => 11
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en => "1",
      rst(0) => edge_op_y_net_x0,
      op => counter6_op_net
    );

  dac_mkid1_70d3ed7c4a: entity work.dac_mkid1_entity_70d3ed7c4a
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      data_i0 => delay2_q_net_x1,
      data_i1 => delay9_q_net_x1,
      data_q0 => delay12_q_net_x1,
      data_q1 => delay14_q_net_x1,
      reset => slice4_y_net_x0,
      sync_i => slice1_y_net_x3,
      convert1_x0 => blast_0209_dds305_dac_mkid1_dac_data_i1_net,
      convert2_x0 => blast_0209_dds305_dac_mkid1_dac_data_q0_net,
      convert3_x0 => blast_0209_dds305_dac_mkid1_dac_data_q1_net,
      convert_not_reset_x0 => blast_0209_dds305_dac_mkid1_not_reset_net,
      convert_sync_i_x0 => blast_0209_dds305_dac_mkid1_dac_sync_i_net,
      convert_sync_q_x0 => blast_0209_dds305_dac_mkid1_dac_sync_q_net,
      convert_x0 => blast_0209_dds305_dac_mkid1_dac_data_i0_net
    );

  dac_reset_a0b5aac069: entity work.dac_reset_entity_a0b5aac069
    port map (
      blast_0209_dds305_dac_reset_user_data_out => blast_0209_dds305_dac_reset_user_data_out_net,
      in_reg => reint1_output_port_net_x3
    );

  dds_shift0_6ed64f8cf1: entity work.dds_shift0_entity_6ed64f8cf1
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      delay => slice6_y_net_x5,
      din => concatenate_y_net_x6,
      dout => dual_port_ram_doutb_net_x2
    );

  dds_shift1_70e03633f9: entity work.dds_shift0_entity_6ed64f8cf1
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      delay => slice6_y_net_x5,
      din => concatenate_y_net_x7,
      dout => dual_port_ram_doutb_net_x3
    );

  dds_shift2_4845de00b1: entity work.dds_shift2_entity_4845de00b1
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      delay => slice6_y_net_x5,
      din => delay10_q_net_x2,
      dout => dual_port_ram_doutb_net_x4
    );

  dds_shift3_6928de46ec: entity work.dds_shift2_entity_4845de00b1
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      delay => slice6_y_net_x5,
      din => delay17_q_net_x2,
      dout => dual_port_ram_doutb_net_x5
    );

  dds_shift4_0fd9365198: entity work.dds_shift2_entity_4845de00b1
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      delay => slice6_y_net_x5,
      din => delay18_q_net_x2,
      dout => dual_port_ram_doutb_net_x6
    );

  dds_shift5_1b56a310b6: entity work.dds_shift2_entity_4845de00b1
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      delay => slice6_y_net_x5,
      din => delay11_q_net_x2,
      dout => dual_port_ram_doutb_net_x7
    );

  dds_shift_9ba88dfbb1: entity work.dds_shift_entity_9ba88dfbb1
    port map (
      blast_0209_dds305_dds_shift_user_data_out => blast_0209_dds305_dds_shift_user_data_out_net,
      in_reg => reint1_output_port_net_x4
    );

  delay1: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concatenate7_y_net,
      en => '1',
      rst => '1',
      q => delay1_q_net
    );

  delay10: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay61_q_net,
      en => '1',
      rst => '1',
      q(0) => delay10_q_net
    );

  delay100: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => slice37_y_net,
      en => '1',
      rst => '1',
      q(0) => delay100_q_net
    );

  delay101: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay102_q_net,
      en => '1',
      rst => '1',
      q(0) => delay101_q_net
    );

  delay102: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay5_q_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay102_q_net
    );

  delay103: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => slice40_y_net,
      en => '1',
      rst => '1',
      q => delay103_q_net
    );

  delay104: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay111_q_net,
      en => '1',
      rst => '1',
      q(0) => delay104_q_net
    );

  delay105: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => dual_port_ram4_douta_net,
      en => '1',
      rst => '1',
      q => delay105_q_net
    );

  delay106: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => slice36_y_net,
      en => '1',
      rst => '1',
      q(0) => delay106_q_net
    );

  delay107: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => slice3_y_net,
      en => '1',
      rst => '1',
      q(0) => delay107_q_net
    );

  delay108: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => convert3_dout_net,
      en => '1',
      rst => '1',
      q(0) => delay108_q_net
    );

  delay109: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay107_q_net,
      en => '1',
      rst => '1',
      q(0) => delay109_q_net
    );

  delay11: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 64
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concatenate_y_net_x0,
      en => '1',
      rst => '1',
      q => delay11_q_net_x0
    );

  delay110: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => dual_port_ram4_doutb_net,
      en => '1',
      rst => '1',
      q => delay110_q_net
    );

  delay111: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay106_q_net,
      en => '1',
      rst => '1',
      q(0) => delay111_q_net
    );

  delay112: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay111_q_net,
      en => '1',
      rst => '1',
      q(0) => delay112_q_net
    );

  delay113: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => dual_port_ram5_douta_net,
      en => '1',
      rst => '1',
      q => delay113_q_net
    );

  delay114: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => dual_port_ram5_doutb_net,
      en => '1',
      rst => '1',
      q => delay114_q_net
    );

  delay12: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay7_q_net,
      en => '1',
      rst => '1',
      q(0) => delay12_q_net_x3
    );

  delay13: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => dual_port_ram3_doutb_net,
      en => '1',
      rst => '1',
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => slice40_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay15: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => delay2_q_net,
      en => '1',
      rst => '1',
      q => delay15_q_net
    );

  delay16: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay47_q_net,
      en => '1',
      rst => '1',
      q(0) => delay16_q_net_x2
    );

  delay17: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concatenate_y_net_x9,
      en => '1',
      rst => '1',
      q => delay17_q_net_x0
    );

  delay18: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 24
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => delay18_q_net_x1
    );

  delay19: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 12
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => reinterpret_output_port_net_x4,
      en => '1',
      rst => '1',
      q => delay19_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => delay53_q_net,
      en => '1',
      rst => '1',
      q => delay2_q_net
    );

  delay20: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concat_y_net_x2,
      en => '1',
      rst => '1',
      q => delay20_q_net_x2
    );

  delay21: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concat_y_net_x1,
      en => '1',
      rst => '1',
      q => delay21_q_net_x2
    );

  delay22: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 24
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concat_y_net_x3,
      en => '1',
      rst => '1',
      q => delay22_q_net_x1
    );

  delay23: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => single_port_ram_data_out_net_x2,
      en => '1',
      rst => '1',
      q => delay23_q_net_x0
    );

  delay24: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => single_port_ram_data_out_net_x3,
      en => '1',
      rst => '1',
      q => delay24_q_net_x0
    );

  delay25: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concatenate_y_net_x10,
      en => '1',
      rst => '1',
      q => delay25_q_net_x0
    );

  delay26: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay109_q_net,
      en => '1',
      rst => '1',
      q(0) => delay26_q_net
    );

  delay27: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => relational1_op_net,
      en => '1',
      rst => '1',
      q(0) => delay27_q_net_x1
    );

  delay28: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => single_port_ram_data_out_net_x4,
      en => '1',
      rst => '1',
      q => delay28_q_net_x0
    );

  delay29: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => logical_y_net_x3,
      q(0) => delay29_q_net_x1
    );

  delay3: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 64
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concatenate_y_net_x4,
      en => '1',
      rst => '1',
      q => delay3_q_net_x0
    );

  delay31: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 12
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => reinterpret_output_port_net_x5,
      en => '1',
      rst => '1',
      q => delay31_q_net_x0
    );

  delay32: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => delay15_q_net,
      en => '1',
      rst => '1',
      q => delay32_q_net
    );

  delay33: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => convert3_dout_net,
      en => '1',
      rst => '1',
      q(0) => delay33_q_net
    );

  delay34: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => force_re_output_port_net_x2,
      en => '1',
      rst => '1',
      q => delay34_q_net_x0
    );

  delay35: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => force_im_output_port_net_x2,
      en => '1',
      rst => '1',
      q => delay35_q_net_x0
    );

  delay36: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => force_re_output_port_net_x0,
      en => '1',
      rst => '1',
      q => delay36_q_net_x0
    );

  delay37: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => force_im_output_port_net_x0,
      en => '1',
      rst => '1',
      q => delay37_q_net_x0
    );

  delay38: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay10_q_net,
      en => '1',
      rst => '1',
      q(0) => delay38_q_net
    );

  delay39: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => relational1_op_net,
      en => '1',
      rst => '1',
      q(0) => delay39_q_net
    );

  delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => convert3_dout_net,
      en => '1',
      rst => '1',
      q(0) => delay4_q_net
    );

  delay40: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => slice14_y_net,
      en => '1',
      rst => '1',
      q => delay40_q_net_x2
    );

  delay41: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => slice13_y_net,
      en => '1',
      rst => '1',
      q => delay41_q_net_x2
    );

  delay42: entity work.xldelay
    generic map (
      latency => 8,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay39_q_net,
      en => '1',
      rst => '1',
      q(0) => delay42_q_net_x1
    );

  delay43: entity work.xldelay
    generic map (
      latency => 512,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay98_q_net,
      en => '1',
      rst => '1',
      q(0) => delay43_q_net
    );

  delay44: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 12
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => reinterpret_output_port_net_x6,
      en => '1',
      rst => '1',
      q => delay44_q_net_x0
    );

  delay45: entity work.delay_2f957c0904
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => delay52_q_net,
      q => delay45_q_net
    );

  delay46: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 12
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => reinterpret_output_port_net_x7,
      en => '1',
      rst => '1',
      q => delay46_q_net_x0
    );

  delay47: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => edge_op_y_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay47_q_net
    );

  delay48: entity work.xldelay
    generic map (
      latency => 12,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay8_q_net,
      en => '1',
      rst => '1',
      q(0) => delay48_q_net_x0
    );

  delay49: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 19
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => force_re_output_port_net_x3,
      en => '1',
      rst => '1',
      q => delay49_q_net_x0
    );

  delay5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => logical3_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay5_q_net_x1
    );

  delay50: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 19
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => force_im_output_port_net_x3,
      en => '1',
      rst => '1',
      q => delay50_q_net_x0
    );

  delay51: entity work.delay_2f957c0904
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => delay23_q_net_x0,
      q => delay51_q_net
    );

  delay52: entity work.delay_2f957c0904
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => delay54_q_net,
      q => delay52_q_net
    );

  delay53: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => delay1_q_net,
      en => '1',
      rst => '1',
      q => delay53_q_net
    );

  delay54: entity work.delay_2f957c0904
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => delay28_q_net_x0,
      q => delay54_q_net
    );

  delay55: entity work.delay_2f957c0904
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => delay51_q_net,
      q => delay55_q_net
    );

  delay56: entity work.delay_2f957c0904
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => delay24_q_net_x0,
      q => delay56_q_net
    );

  delay57: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => single_port_ram_data_out_net_x1,
      en => '1',
      rst => '1',
      q => delay57_q_net_x0
    );

  delay58: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => relational4_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay58_q_net_x11
    );

  delay59: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => relational5_op_net_x1,
      q(0) => delay59_q_net_x0
    );

  delay6: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay4_q_net,
      en => '1',
      rst => '1',
      q(0) => delay6_q_net
    );

  delay60: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 19
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => force_re_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay60_q_net_x0
    );

  delay61: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay43_q_net,
      en => '1',
      rst => '1',
      q(0) => delay61_q_net
    );

  delay62: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 19
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => force_im_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay62_q_net_x0
    );

  delay63: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => delay32_q_net,
      en => '1',
      rst => '1',
      q => delay63_q_net
    );

  delay64: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => delay86_q_net,
      q(0) => delay64_q_net_x0
    );

  delay67: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => relational5_op_net_x0,
      q(0) => delay67_q_net_x0
    );

  delay68: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay109_q_net,
      en => '1',
      rst => '1',
      q(0) => delay68_q_net
    );

  delay69: entity work.delay_ebec135d8a
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => mux10_y_net,
      q => delay69_q_net
    );

  delay7: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay1_q_net_x5,
      en => '1',
      rst => '1',
      q(0) => delay7_q_net
    );

  delay70: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => inverter3_op_net,
      q(0) => delay70_q_net
    );

  delay71: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay79_q_net,
      en => '1',
      rst => '1',
      q(0) => delay71_q_net
    );

  delay72: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 128
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concatenate_y_net_x1,
      en => '1',
      rst => '1',
      q => delay72_q_net_x0
    );

  delay73: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 24
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concat_y_net_x19,
      en => '1',
      rst => '1',
      q => delay73_q_net_x1
    );

  delay74: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 24
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concat_y_net_x20,
      en => '1',
      rst => '1',
      q => delay74_q_net_x1
    );

  delay77: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay6_q_net,
      en => '1',
      rst => '1',
      q(0) => delay77_q_net
    );

  delay78: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay38_q_net,
      en => '1',
      rst => '1',
      q(0) => delay78_q_net
    );

  delay79: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay77_q_net,
      en => '1',
      rst => '1',
      q(0) => delay79_q_net
    );

  delay8: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay78_q_net,
      en => '1',
      rst => '1',
      q(0) => delay8_q_net
    );

  delay82: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => delay91_q_net,
      q(0) => delay82_q_net_x0
    );

  delay83: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay8_q_net,
      en => '1',
      rst => '1',
      q(0) => delay83_q_net
    );

  delay84: entity work.delay_fcebea29b9
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => slice19_y_net,
      q => delay84_q_net
    );

  delay86: entity work.delay_20c73969ef
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => edge_op_y_net_x17,
      q(0) => delay86_q_net
    );

  delay87: entity work.delay_920dce5cac
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d => mux6_y_net,
      q => delay87_q_net
    );

  delay9: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay58_q_net_x11,
      en => '1',
      rst => '1',
      q(0) => delay9_q_net_x4
    );

  delay91: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => relational5_op_net_x1,
      q(0) => delay91_q_net
    );

  delay92: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d(0) => delay59_q_net_x0,
      q(0) => delay92_q_net
    );

  delay96: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concatenate4_y_net,
      en => '1',
      rst => '1',
      q => delay96_q_net
    );

  delay97: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concatenate5_y_net,
      en => '1',
      rst => '1',
      q => delay97_q_net
    );

  delay98: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => delay101_q_net,
      en => '1',
      rst => '1',
      q(0) => delay98_q_net
    );

  delay99: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => dual_port_ram3_douta_net,
      en => '1',
      rst => '1',
      q => delay99_q_net
    );

  downselect18to16_d5980b4ea3: entity work.downselect18to16_entity_d5980b4ea3
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      complexin => delay40_q_net_x2,
      out1 => concatenate_y_net_x9
    );

  downselect18to2_0968d907ac: entity work.downselect18to16_entity_d5980b4ea3
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      complexin => delay41_q_net_x2,
      out1 => concatenate_y_net_x10
    );

  downselect19to1_1db523393f: entity work.downselect19to1_entity_1db523393f
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      complexin => concat_y_net_x4,
      out1 => concatenate_y_net_x11
    );

  downselect19to2_d210ed342f: entity work.downselect19to2_entity_d210ed342f
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      complexin => concat_y_net_x5,
      out1 => concatenate_y_net_x12
    );

  downselect19to3_77f93ab952: entity work.downselect18to16_entity_d5980b4ea3
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      complexin => reinterpret1_output_port_net_x23,
      out1 => concatenate_y_net_x13
    );

  downselect19to4_412aabdbaa: entity work.downselect18to16_entity_d5980b4ea3
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      complexin => reinterpret1_output_port_net_x24,
      out1 => concatenate_y_net_x14
    );

  dual_port_ram3: entity work.xldpram_blast_0209_dds305
    generic map (
      c_address_width_a => 10,
      c_address_width_b => 10,
      c_width_a => 10,
      c_width_b => 10,
      core_name0 => "bmg_72_a900d79ebfb489b6",
      latency => 3
    )
    port map (
      a_ce => ce_1_sg_x564,
      a_clk => clk_1_sg_x564,
      addra => mux19_y_net,
      addrb => addsub1_s_net,
      b_ce => ce_1_sg_x564,
      b_clk => clk_1_sg_x564,
      dina => slice35_y_net,
      dinb => constant13_op_net,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => delay100_q_net,
      web(0) => constant12_op_net,
      douta => dual_port_ram3_douta_net,
      doutb => dual_port_ram3_doutb_net
    );

  dual_port_ram4: entity work.xldpram_blast_0209_dds305
    generic map (
      c_address_width_a => 9,
      c_address_width_b => 9,
      c_width_a => 72,
      c_width_b => 72,
      core_name0 => "bmg_72_3323983e8a5ee1ac",
      latency => 3
    )
    port map (
      a_ce => ce_1_sg_x564,
      a_clk => clk_1_sg_x564,
      addra => mux17_y_net,
      addrb => delay14_q_net,
      b_ce => ce_1_sg_x564,
      b_clk => clk_1_sg_x564,
      dina => delay63_q_net,
      dinb => constant15_op_net,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => delay33_q_net,
      web(0) => constant14_op_net,
      douta => dual_port_ram4_douta_net,
      doutb => dual_port_ram4_doutb_net
    );

  dual_port_ram5: entity work.xldpram_blast_0209_dds305
    generic map (
      c_address_width_a => 9,
      c_address_width_b => 9,
      c_width_a => 72,
      c_width_b => 72,
      core_name0 => "bmg_72_3323983e8a5ee1ac",
      latency => 3
    )
    port map (
      a_ce => ce_1_sg_x564,
      a_clk => clk_1_sg_x564,
      addra => mux18_y_net,
      addrb => delay103_q_net,
      b_ce => ce_1_sg_x564,
      b_clk => clk_1_sg_x564,
      dina => delay63_q_net,
      dinb => constant16_op_net,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => inverter1_op_net,
      web(0) => constant11_op_net,
      douta => dual_port_ram5_douta_net,
      doutb => dual_port_ram5_doutb_net
    );

  edge_detect1_35b2158155: entity work.edge_detect1_entity_35b2158155
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => delay9_q_net_x4,
      out_x0 => edge_op_y_net_x0
    );

  fft_7b95c97a50: entity work.fft_entity_7b95c97a50
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in00 => delay21_q_net_x2,
      in01 => delay20_q_net_x2,
      shift => reint1_output_port_net_x12,
      sync => delay12_q_net_x3,
      of_x0 => of_or_y_net_x0,
      out00 => reinterpret1_output_port_net_x23,
      out01 => reinterpret1_output_port_net_x24,
      sync_out => post_sync_delay_q_net_x3
    );

  fft_shift_16bfd57803: entity work.fft_shift_entity_16bfd57803
    port map (
      blast_0209_dds305_fft_shift_user_data_out => blast_0209_dds305_fft_shift_user_data_out_net,
      in_reg => reint1_output_port_net_x12
    );

  fft_snap_6f40b6873d: entity work.fft_snap_entity_6f40b6873d
    port map (
      blast_0209_dds305_fft_snap_ctrl_user_data_out => blast_0209_dds305_fft_snap_ctrl_user_data_out_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => delay3_q_net_x0,
      trig => delay5_q_net_x1,
      we => constant1_op_net_x2,
      bram => blast_0209_dds305_fft_snap_bram_addr_net,
      bram_x0 => blast_0209_dds305_fft_snap_bram_data_in_net,
      bram_x1 => blast_0209_dds305_fft_snap_bram_we_net,
      status => blast_0209_dds305_fft_snap_status_user_data_in_net
    );

  fft_sync_6718faa2ca: entity work.fft_sync_entity_6718faa2ca
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      sync_in => post_sync_delay_q_net_x3,
      data_ready => logical3_y_net_x0
    );

  ia_ab92225e81: entity work.ia_entity_ab92225e81
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => delay49_q_net_x0,
      new_acc => delay58_q_net_x11,
      dout => single_port_ram_data_out_net_x1
    );

  ib_9bb0982c64: entity work.ia_entity_ab92225e81
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => delay60_q_net_x0,
      new_acc => delay58_q_net_x11,
      dout => single_port_ram_data_out_net_x2
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      ip(0) => delay108_q_net,
      op(0) => inverter1_op_net
    );

  inverter2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      ip(0) => delay67_q_net_x0,
      op(0) => inverter2_op_net
    );

  inverter3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      ip(0) => relational5_op_net_x3,
      op(0) => inverter3_op_net
    );

  inverter4: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      ip(0) => convert3_dout_net,
      op(0) => inverter4_op_net
    );

  inverter5: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      ip(0) => convert3_dout_net,
      op(0) => inverter5_op_net
    );

  load_bins_885e4687bc: entity work.load_bins_entity_885e4687bc
    port map (
      blast_0209_dds305_load_bins_user_data_out => blast_0209_dds305_load_bins_user_data_out_net,
      in_reg => reint1_output_port_net_x5
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay9_q_net_x4,
      d1(0) => inverter2_op_net,
      y(0) => logical_y_net_x3
    );

  lut_counter1: entity work.xlcounter_free_blast_0209_dds305
    generic map (
      core_name0 => "cntr_11_0_2446b11135c8d90d",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en => "1",
      rst(0) => delay5_q_net_x1,
      op => lut_counter1_op_net
    );

  mixer_even_93fe5ae968: entity work.mixer_even_entity_93fe5ae968
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      data_i => delay36_q_net_x0,
      data_q => delay37_q_net_x0,
      dds_i => dual_port_ram_doutb_net_x4,
      dds_q => dual_port_ram_doutb_net_x5,
      mixed_out => concat_y_net_x4
    );

  mixer_odd_23482cc25d: entity work.mixer_even_entity_93fe5ae968
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      data_i => delay34_q_net_x0,
      data_q => delay35_q_net_x0,
      dds_i => dual_port_ram_doutb_net_x7,
      dds_q => dual_port_ram_doutb_net_x6,
      mixed_out => concat_y_net_x5
    );

  mixerout_23b917c6c1: entity work.mixerout_entity_23b917c6c1
    port map (
      blast_0209_dds305_mixerout_ctrl_user_data_out => blast_0209_dds305_mixerout_ctrl_user_data_out_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => concatenate_y_net_x8,
      we => delay42_q_net_x1,
      bram => blast_0209_dds305_mixerout_bram_addr_net,
      bram_x0 => blast_0209_dds305_mixerout_bram_data_in_net,
      bram_x1 => blast_0209_dds305_mixerout_bram_we_net,
      status => blast_0209_dds305_mixerout_status_user_data_in_net
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => slice42_y_net,
      d1 => slice41_y_net,
      sel(0) => delay104_q_net,
      y => mux1_y_net
    );

  mux10: entity work.mux_81f00cece7
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => slice9_y_net,
      d1 => slice10_y_net,
      d2 => slice15_y_net,
      d3 => slice16_y_net,
      sel => delay84_q_net,
      y => mux10_y_net
    );

  mux15: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => slice48_y_net,
      d1 => slice47_y_net,
      sel(0) => delay26_q_net,
      y => mux15_y_net
    );

  mux16: entity work.mux_674531f69e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => delay96_q_net,
      d1 => delay97_q_net,
      sel(0) => delay71_q_net,
      y => mux16_y_net
    );

  mux17: entity work.mux_c839fa4342
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => slice39_y_net,
      d1 => adress_counter4_op_net,
      sel(0) => convert3_dout_net,
      y => mux17_y_net
    );

  mux18: entity work.mux_c839fa4342
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => slice39_y_net,
      d1 => adress_counter3_op_net,
      sel(0) => inverter5_op_net,
      y => mux18_y_net
    );

  mux19: entity work.mux_6ec07dbeb8
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => lut_counter1_op_net,
      d1 => slice38_y_net,
      sel(0) => slice37_y_net,
      y => mux19_y_net
    );

  mux2: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => slice44_y_net,
      d1 => slice43_y_net,
      sel(0) => delay68_q_net,
      y => mux2_y_net
    );

  mux3: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => slice46_y_net,
      d1 => slice45_y_net,
      sel(0) => delay112_q_net,
      y => mux3_y_net
    );

  mux4: entity work.mux_387191112d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => delay69_q_net,
      d1 => register1_q_net_x17,
      sel(0) => delay70_q_net,
      y => mux4_y_net_x0
    );

  mux6: entity work.mux_c7fc178374
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => delay57_q_net_x0,
      d1 => delay56_q_net,
      d2 => delay55_q_net,
      d3 => delay45_q_net,
      sel => slice5_y_net,
      y => mux6_y_net
    );

  mux8: entity work.mux_a837cccb97
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      d0 => slice20_y_net,
      d1 => slice21_y_net,
      sel(0) => delay92_q_net,
      y => mux8_y_net
    );

  one_gbe_deea7e5d1b: entity work.one_gbe_entity_deea7e5d1b
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      rx_ack => slice26_y_net_x0,
      rx_rst => slice25_y_net_x0,
      tx_data => mux4_y_net_x0,
      tx_destip => reint1_output_port_net_x13,
      tx_destport => slice27_y_net_x0,
      tx_eof => delay64_q_net_x0,
      tx_rst => slice28_y_net_x0,
      tx_val => delay67_q_net_x0,
      convert_rx_ack_x0 => blast_0209_dds305_one_gbe_app_rx_ack_net,
      convert_rx_rst_x0 => blast_0209_dds305_one_gbe_app_rx_rst_net,
      convert_tx_data_x0 => blast_0209_dds305_one_gbe_app_tx_data_net,
      convert_tx_dest_ip_x0 => blast_0209_dds305_one_gbe_app_tx_destip_net,
      convert_tx_end_of_frame_x0 => blast_0209_dds305_one_gbe_app_tx_eof_net,
      convert_tx_port_x0 => blast_0209_dds305_one_gbe_app_tx_destport_net,
      convert_tx_rst_x0 => blast_0209_dds305_one_gbe_app_tx_rst_net,
      convert_tx_valid_x0 => blast_0209_dds305_one_gbe_app_tx_dvld_net
    );

  overflow_0a0a4ac425: entity work.status_entity_1610992e91
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      out_reg => convert8_dout_net_x0,
      cast_gw_x0 => blast_0209_dds305_overflow_user_data_in_net
    );

  parallel_to_serial_converter_7ac324252e: entity work.parallel_to_serial_converter_entity_7ac324252e
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      ld => edge_op_y_net_x17,
      pin => concatenate1_y_net_x16,
      shift => constant2_op_net_x0,
      sout => register1_q_net_x17
    );

  pfb_fir2_d668b6f268: entity work.pfb_fir2_entity_d668b6f268
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      pol1_in1 => delay18_q_net_x1,
      pol1_in2 => delay22_q_net_x1,
      sync => delay16_q_net_x2,
      pol1_out1 => concat_y_net_x19,
      pol1_out2 => concat_y_net_x20,
      sync_out => delay1_q_net_x5
    );

  posedge1_987496cb83: entity work.edge_detect1_entity_35b2158155
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => slice1_y_net_x3,
      out_x0 => edge_op_y_net_x1
    );

  posedge2_c0d9104a95: entity work.posedge2_entity_c0d9104a95
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => blast_0209_dds305_pps_gateway_net,
      out_x0 => edge_op_y_net_x2
    );

  posedge3_fe9cba2991: entity work.edge_detect_entity_64e4b1b900
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => relational5_op_net_x3,
      out_x0 => edge_op_y_net_x17
    );

  posedge5_c6a03e5c31: entity work.edge_detect_entity_64e4b1b900
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => delay82_q_net_x0,
      out_x0 => edge_op_y_net_x18
    );

  posedge8_54be68dc15: entity work.posedge8_entity_54be68dc15
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => delay59_q_net_x0,
      out_x0 => edge_op_y_net_x3
    );

  pps_start_dd88f848af: entity work.pps_start_entity_dd88f848af
    port map (
      blast_0209_dds305_pps_start_user_data_out => blast_0209_dds305_pps_start_user_data_out_net,
      in_pps_start => reint1_output_port_net_x6
    );

  pulse_ext1_19505637df: entity work.pulse_ext1_entity_19505637df
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => delay9_q_net_x4,
      out_x0 => relational5_op_net_x2
    );

  pulse_ext4_8af5e19160: entity work.pulse_ext4_entity_8af5e19160
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => edge_op_y_net_x18,
      out_x0 => relational5_op_net_x0
    );

  pulse_ext5_9f81f134b9: entity work.pulse_ext5_entity_9f81f134b9
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => logical_y_net_x3,
      out_x0 => relational5_op_net_x1
    );

  pulse_ext6_fb8364835b: entity work.pulse_ext6_entity_fb8364835b
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      in_x0 => delay29_q_net_x1,
      out_x0 => relational5_op_net_x3
    );

  qa_3ef6b29008: entity work.ia_entity_ab92225e81
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => delay50_q_net_x0,
      new_acc => delay58_q_net_x11,
      dout => single_port_ram_data_out_net_x3
    );

  qb_3eaeb56900: entity work.ia_entity_ab92225e81
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => delay62_q_net_x0,
      new_acc => delay58_q_net_x11,
      dout => single_port_ram_data_out_net_x4
    );

  qdr_lut_36237efa01: entity work.qdr_lut_entity_36237efa01
    port map (
      blast_0209_dds305_qdr_lut_qdr0_data_out => blast_0209_dds305_qdr_lut_qdr0_data_out_net,
      blast_0209_dds305_qdr_lut_qdr1_data_out => blast_0209_dds305_qdr_lut_qdr1_data_out_net,
      blast_0209_dds305_qdr_lut_we_qdr_user_data_out => blast_0209_dds305_qdr_lut_we_qdr_user_data_out_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      startdac => slice1_y_net_x3,
      data_i0 => delay2_q_net_x1,
      data_i1 => delay9_q_net_x1,
      data_q0 => delay12_q_net_x1,
      data_q1 => delay14_q_net_x1,
      dds_i0 => delay10_q_net_x2,
      dds_i1 => delay11_q_net_x2,
      dds_q0 => delay17_q_net_x2,
      dds_q1 => delay18_q_net_x2,
      qdr0 => blast_0209_dds305_qdr_lut_qdr0_address_net,
      qdr0_x0 => blast_0209_dds305_qdr_lut_qdr0_be_net,
      qdr0_x1 => blast_0209_dds305_qdr_lut_qdr0_data_in_net,
      qdr0_x2 => blast_0209_dds305_qdr_lut_qdr0_rd_en_net,
      qdr0_x3 => blast_0209_dds305_qdr_lut_qdr0_wr_en_net,
      qdr1 => blast_0209_dds305_qdr_lut_qdr1_address_net,
      qdr1_x0 => blast_0209_dds305_qdr_lut_qdr1_be_net,
      qdr1_x1 => blast_0209_dds305_qdr_lut_qdr1_data_in_net,
      qdr1_x2 => blast_0209_dds305_qdr_lut_qdr1_rd_en_net,
      qdr1_x3 => blast_0209_dds305_qdr_lut_qdr1_wr_en_net
    );

  rawfftbin_13c7b5a3c5: entity work.rawfftbin_entity_13c7b5a3c5
    port map (
      blast_0209_dds305_rawfftbin_ctrl_user_data_out => blast_0209_dds305_rawfftbin_ctrl_user_data_out_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      din => concatenate_y_net_x5,
      we => delay27_q_net_x1,
      bram => blast_0209_dds305_rawfftbin_bram_addr_net,
      bram_x0 => blast_0209_dds305_rawfftbin_bram_data_in_net,
      bram_x1 => blast_0209_dds305_rawfftbin_bram_we_net,
      status => blast_0209_dds305_rawfftbin_status_user_data_in_net
    );

  relational1: entity work.relational_a4ff7b3f59
    port map (
      a => reint1_output_port_net_x2,
      b => counter2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  ri_to_c4_97b3568c33: entity work.ri_to_c_entity_81de5d2889
    port map (
      im => delay44_q_net_x0,
      re => delay19_q_net_x0,
      c => concat_y_net_x0
    );

  ri_to_c5_5463028769: entity work.ri_to_c_entity_81de5d2889
    port map (
      im => delay46_q_net_x0,
      re => delay31_q_net_x0,
      c => concat_y_net_x3
    );

  rx_ack_a4f38b1ca4: entity work.rx_ack_entity_a4f38b1ca4
    port map (
      blast_0209_dds305_rx_ack_user_data_out => blast_0209_dds305_rx_ack_user_data_out_net,
      in_reset => reint1_output_port_net_x7
    );

  rx_rst_bc03cac20a: entity work.rx_rst_entity_bc03cac20a
    port map (
      blast_0209_dds305_rx_rst_user_data_out => blast_0209_dds305_rx_rst_user_data_out_net,
      in_reset => reint1_output_port_net_x8
    );

  selector1: entity work.counter_2943023fcf
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en(0) => delay98_q_net,
      op(0) => selector1_op_net
    );

  single_port_ram1: entity work.xlspram_blast_0209_dds305
    generic map (
      c_address_width => 11,
      c_width => 32,
      core_name0 => "bmg_72_916677c90b373a35",
      latency => 1
    )
    port map (
      addr => mux8_y_net,
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      data_in => delay87_q_net,
      en => "1",
      rst => "0",
      we(0) => delay91_q_net,
      data_out => single_port_ram1_data_out_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x9,
      y(0) => slice1_y_net_x3
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 15,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => single_port_ram1_data_out_net,
      y => slice10_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => mux16_y_net,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => mux16_y_net,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 23,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => single_port_ram1_data_out_net,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 31,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => single_port_ram1_data_out_net,
      y => slice16_y_net
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 20,
      y_width => 2
    )
    port map (
      x => counter3_op_net,
      y => slice19_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => slice2_y_net_x2
    );

  slice20: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 12,
      x_width => 20,
      y_width => 11
    )
    port map (
      x => counter3_op_net,
      y => slice20_y_net
    );

  slice21: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 10,
      x_width => 20,
      y_width => 11
    )
    port map (
      x => counter3_op_net,
      y => slice21_y_net
    );

  slice25: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x8,
      y(0) => slice25_y_net_x0
    );

  slice26: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x7,
      y(0) => slice26_y_net_x0
    );

  slice27: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => reint1_output_port_net_x10,
      y => slice27_y_net_x0
    );

  slice28: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x11,
      y(0) => slice28_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => delay13_q_net,
      y(0) => slice3_y_net
    );

  slice35: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 32,
      y_width => 10
    )
    port map (
      x => reint1_output_port_net_x1,
      y => slice35_y_net
    );

  slice36: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => delay99_q_net,
      y(0) => slice36_y_net
    );

  slice37: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x5,
      y(0) => slice37_y_net
    );

  slice38: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 10,
      x_width => 32,
      y_width => 10
    )
    port map (
      x => reint1_output_port_net_x5,
      y => slice38_y_net
    );

  slice39: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 9,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => delay99_q_net,
      y => slice39_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x3,
      y(0) => slice4_y_net_x0
    );

  slice40: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 9,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => delay13_q_net,
      y => slice40_y_net
    );

  slice41: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => delay105_q_net,
      y => slice41_y_net
    );

  slice42: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => delay105_q_net,
      y => slice42_y_net
    );

  slice43: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => delay110_q_net,
      y => slice43_y_net
    );

  slice44: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => delay110_q_net,
      y => slice44_y_net
    );

  slice45: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => delay113_q_net,
      y => slice45_y_net
    );

  slice46: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => delay113_q_net,
      y => slice46_y_net
    );

  slice47: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => delay114_q_net,
      y => slice47_y_net
    );

  slice48: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => delay114_q_net,
      y => slice48_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 10,
      x_width => 11,
      y_width => 2
    )
    port map (
      x => counter6_op_net,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 32,
      y_width => 9
    )
    port map (
      x => reint1_output_port_net_x4,
      y => slice6_y_net_x5
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x6,
      y(0) => slice7_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => single_port_ram1_data_out_net,
      y => slice9_y_net
    );

  start_dac_56f0ebcf6a: entity work.start_dac_entity_56f0ebcf6a
    port map (
      blast_0209_dds305_start_dac_user_data_out => blast_0209_dds305_start_dac_user_data_out_net,
      in_reg => reint1_output_port_net_x9
    );

  sync_c3f2a66b6a: entity work.sync_entity_c3f2a66b6a
    port map (
      blast_0209_dds305_sync_accum_len_user_data_out => blast_0209_dds305_sync_accum_len_user_data_out_net,
      blast_0209_dds305_sync_accum_reset_user_data_out => blast_0209_dds305_sync_accum_reset_user_data_out_net,
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      sync_in => delay48_q_net_x0,
      accum_ready => relational4_op_net_x0
    );

  tx_destip_b9b3944cba: entity work.tx_destip_entity_b9b3944cba
    port map (
      blast_0209_dds305_tx_destip_user_data_out => blast_0209_dds305_tx_destip_user_data_out_net,
      in_reset => reint1_output_port_net_x13
    );

  tx_destport_fba435391b: entity work.tx_destport_entity_fba435391b
    port map (
      blast_0209_dds305_tx_destport_user_data_out => blast_0209_dds305_tx_destport_user_data_out_net,
      in_reset => reint1_output_port_net_x10
    );

  tx_rst_df33bbb24d: entity work.tx_rst_entity_df33bbb24d
    port map (
      blast_0209_dds305_tx_rst_user_data_out => blast_0209_dds305_tx_rst_user_data_out_net,
      in_reset => reint1_output_port_net_x11
    );

  x12to0_c0fc6704db: entity work.x12to0_entity_c0fc6704db
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      complexin => delay73_q_net_x1,
      out1 => concat_y_net_x1
    );

  x12to1_23fd5c79f2: entity work.x12to0_entity_c0fc6704db
    port map (
      ce_1 => ce_1_sg_x564,
      clk_1 => clk_1_sg_x564,
      complexin => delay74_q_net_x1,
      out1 => concat_y_net_x2
    );

end structural;
