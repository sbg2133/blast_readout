#################################################################
# Makefile generated by Xilinx Platform Studio 
# Project:/home/muchacho/workspace/skasa/matt3/blast_0209_dds305/XPS_ROACH2_base/system.xmp
#
# WARNING : This file will be re-generated every time a command
# to run a make target is invoked. So, any changes made to this  
# file manually, will be lost when make is invoked next. 
#################################################################

XILINX_EDK_DIR = /opt/Xilinx/14.5/ISE_DS/EDK

SYSTEM = system

MHSFILE = system.mhs

FPGA_ARCH = virtex6

DEVICE = xc6vsx475tff1759-1

INTSTYLE = default

XPS_HDL_LANG = vhdl
GLOBAL_SEARCHPATHOPT = 
PROJECT_SEARCHPATHOPT = 

SEARCHPATHOPT = $(PROJECT_SEARCHPATHOPT) $(GLOBAL_SEARCHPATHOPT)

SUBMODULE_OPT = 

PLATGEN_OPTIONS = -p $(DEVICE) -lang $(XPS_HDL_LANG) -intstyle $(INTSTYLE) $(SEARCHPATHOPT) $(SUBMODULE_OPT) -msg __xps/ise/xmsgprops.lst

OBSERVE_PAR_OPTIONS = -error yes

MICROBLAZE_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop.elf
MICROBLAZE_BOOTLOOP_LE = $(XILINX_EDK_DIR)/sw/lib/microblaze/mb_bootloop_le.elf
PPC405_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc405/ppc_bootloop.elf
PPC440_BOOTLOOP = $(XILINX_EDK_DIR)/sw/lib/ppc440/ppc440_bootloop.elf
BOOTLOOP_DIR = bootloops

BRAMINIT_ELF_IMP_FILES =
BRAMINIT_ELF_IMP_FILE_ARGS =

BRAMINIT_ELF_SIM_FILES =
BRAMINIT_ELF_SIM_FILE_ARGS =

SIM_CMD = xterm -e ./isim_system

BEHAVIORAL_SIM_SCRIPT = simulation/behavioral/$(SYSTEM)_setup.tcl

STRUCTURAL_SIM_SCRIPT = simulation/structural/$(SYSTEM)_setup.tcl

TIMING_SIM_SCRIPT = simulation/timing/$(SYSTEM)_setup.tcl

DEFAULT_SIM_SCRIPT = $(BEHAVIORAL_SIM_SCRIPT)

SIMGEN_OPTIONS = -p $(DEVICE) -lang $(XPS_HDL_LANG) -intstyle $(INTSTYLE) $(SEARCHPATHOPT) $(BRAMINIT_ELF_SIM_FILE_ARGS) -msg __xps/ise/xmsgprops.lst -s isim


CORE_STATE_DEVELOPMENT_FILES = pcores/temac_v1_00_a/netlist/emac_wrapper.ngc \
pcores/qdr_controller_v1_00_a/netlist/chipscope_ila.ngc \
pcores/qdr_controller_v1_00_a/netlist/chipscope_icon.ngc \
pcores/opb_qdr_sniffer_v1_00_a/netlist/chipscope_ila.ngc \
pcores/opb_qdr_sniffer_v1_00_a/netlist/chipscope_icon.ngc \
pcores/qdr_controller_v1_00_a/netlist/chipscope_ila.ngc \
pcores/qdr_controller_v1_00_a/netlist/chipscope_icon.ngc \
pcores/opb_qdr_sniffer_v1_00_a/netlist/chipscope_ila.ngc \
pcores/opb_qdr_sniffer_v1_00_a/netlist/chipscope_icon.ngc \
pcores/bram_block_custom_v1_00_a/netlist/dummy.edn \
pcores/adc_mkid_interface_v1_00_a/netlist/async_fifo_24x128.ngc \
pcores/bram_block_custom_v1_00_a/netlist/dummy.edn \
pcores/bram_block_custom_v1_00_a/netlist/dummy.edn \
pcores/bram_block_custom_v1_00_a/netlist/dummy.edn \
pcores/gbe_udp_v1_00_a/netlist/gbe_arp_cache.ngc \
pcores/gbe_udp_v1_00_a/netlist/gbe_cpu_buffer.ngc \
pcores/gbe_udp_v1_00_a/netlist/gbe_ctrl_fifo.ngc \
pcores/gbe_udp_v1_00_a/netlist/gbe_rx_ctrl_fifo.ngc \
pcores/gbe_udp_v1_00_a/netlist/gbe_rx_packet_fifo.ngc \
pcores/gbe_udp_v1_00_a/netlist/gbe_tx_packet_fifo.ngc \
pcores/bram_block_custom_v1_00_a/netlist/dummy.edn \
pcores/temac_v1_00_a/hdl/verilog/temac.v \
pcores/temac_v1_00_a/hdl/verilog/emac_wrapper.v \
pcores/sgmii_phy_v1_00_a/hdl/verilog/sgmii_gtx.v \
pcores/sgmii_phy_v1_00_a/hdl/verilog/sgmii_phy.v \
pcores/roach_infrastructure_v1_00_a/hdl/verilog/roach_infrastructure.v \
pcores/reset_block_v1_00_a/hdl/verilog/reset_block.v \
pcores/epb32_opb_bridge_v1_00_a/hdl/verilog/epb32_opb_bridge.v \
pcores/epb_infrastructure_v1_00_a/hdl/verilog/epb_infrastructure.v \
pcores/sys_block_v1_00_a/hdl/verilog/sys_block.v \
pcores/qdr_controller_v1_00_a/hdl/verilog/qdr_controller.v \
pcores/qdr_controller_v1_00_a/hdl/verilog/qdrc_infrastructure.v \
pcores/qdr_controller_v1_00_a/hdl/verilog/qdrc_rd.v \
pcores/qdr_controller_v1_00_a/hdl/verilog/qdrc_wr.v \
pcores/qdr_controller_v1_00_a/hdl/verilog/rt_var_delay.v \
pcores/qdr_controller_v1_00_a/hdl/verilog/chipscope_icon.v \
pcores/qdr_controller_v1_00_a/hdl/verilog/chipscope_ila.v \
pcores/opb_qdr_sniffer_v1_00_a/hdl/verilog/opb_qdr_sniffer.v \
pcores/opb_qdr_sniffer_v1_00_a/hdl/verilog/async_qdr_interface.v \
pcores/opb_qdr_sniffer_v1_00_a/hdl/verilog/async_qdr_interface36.v \
pcores/opb_qdr_sniffer_v1_00_a/hdl/verilog/qdr_config.v \
pcores/opb_qdr_sniffer_v1_00_a/hdl/verilog/edge_detect.v \
pcores/opb_qdr_sniffer_v1_00_a/hdl/verilog/clk_domain_crosser.v \
pcores/opb_qdr_sniffer_v1_00_a/hdl/verilog/chipscope_ila.v \
pcores/opb_qdr_sniffer_v1_00_a/hdl/verilog/chipscope_icon.v \
pcores/opb_register_ppc2simulink_v1_00_a/hdl/verilog/opb_register_ppc2simulink.v \
pcores/bram_block_custom_v1_00_a/hdl/verilog/bram_block_custom.v \
pcores/bram_block_custom_v1_00_a/hdl/verilog/bram.v \
pcores/opb_register_simulink2ppc_v1_00_a/hdl/verilog/opb_register_simulink2ppc.v \
pcores/adc_mkid_interface_v1_00_a/hdl/vhdl/adc_mkid_interface.vhd \
pcores/adc_mkid_interface_v1_00_a/hdl/vhdl/async_fifo_24x128.vhd \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_arp_cache.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_cpu_buffer.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_ctrl_fifo.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_cpu_attach.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_rx_ctrl_fifo.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_rx_packet_fifo.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_rx.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_tx.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_udp.v \
pcores/gbe_udp_v1_00_a/hdl/verilog/gbe_tx_packet_fifo.v \
pcores/diffgpio_ext2simulink_v1_00_a/hdl/vhdl/diffgpio_ext2simulink.vhd

WRAPPER_NGC_FILES = implementation/system_temac_inst_wrapper.ngc \
implementation/system_sgmii_phy_inst_wrapper.ngc \
implementation/system_infrastructure_inst_wrapper.ngc \
implementation/system_reset_block_inst_wrapper.ngc \
implementation/system_opb0_wrapper.ngc \
implementation/system_epb_opb_bridge_inst_wrapper.ngc \
implementation/system_epb_infrastructure_inst_wrapper.ngc \
implementation/system_sys_block_inst_wrapper.ngc \
implementation/system_qdr0_controller_wrapper.ngc \
implementation/system_qdr0_sniffer_wrapper.ngc \
implementation/system_qdr1_controller_wrapper.ngc \
implementation/system_qdr1_sniffer_wrapper.ngc \
implementation/system_blast_0209_dds305_qdr_lut_we_qdr_wrapper.ngc \
implementation/system_blast_0209_dds305_accum_snap_bram_ramblk_wrapper.ngc \
implementation/system_blast_0209_dds305_accum_snap_bram_wrapper.ngc \
implementation/system_blast_0209_dds305_accum_snap_ctrl_wrapper.ngc \
implementation/system_blast_0209_dds305_accum_snap_status_wrapper.ngc \
implementation/system_blast_0209_dds305_adc_mkid_wrapper.ngc \
implementation/system_blast_0209_dds305_adc_snap_bram_ramblk_wrapper.ngc \
implementation/system_blast_0209_dds305_adc_snap_bram_wrapper.ngc \
implementation/system_blast_0209_dds305_adc_snap_ctrl_wrapper.ngc \
implementation/system_blast_0209_dds305_adc_snap_status_wrapper.ngc \
implementation/system_blast_0209_dds305_adc_snap_trig_wrapper.ngc \
implementation/system_blast_0209_dds305_bins_wrapper.ngc \
implementation/system_blast_0209_dds305_chan_select_wrapper.ngc \
implementation/system_blast_0209_dds305_dac_mkid1_wrapper.ngc \
implementation/system_blast_0209_dds305_dac_reset_wrapper.ngc \
implementation/system_blast_0209_dds305_dds_shift_wrapper.ngc \
implementation/system_blast_0209_dds305_fft_shift_wrapper.ngc \
implementation/system_blast_0209_dds305_fft_snap_bram_ramblk_wrapper.ngc \
implementation/system_blast_0209_dds305_fft_snap_bram_wrapper.ngc \
implementation/system_blast_0209_dds305_fft_snap_ctrl_wrapper.ngc \
implementation/system_blast_0209_dds305_fft_snap_status_wrapper.ngc \
implementation/system_blast_0209_dds305_load_bins_wrapper.ngc \
implementation/system_blast_0209_dds305_mixerout_bram_ramblk_wrapper.ngc \
implementation/system_blast_0209_dds305_mixerout_bram_wrapper.ngc \
implementation/system_blast_0209_dds305_mixerout_ctrl_wrapper.ngc \
implementation/system_blast_0209_dds305_mixerout_status_wrapper.ngc \
implementation/system_blast_0209_dds305_one_gbe_wrapper.ngc \
implementation/system_blast_0209_dds305_overflow_wrapper.ngc \
implementation/system_blast_0209_dds305_pps_wrapper.ngc \
implementation/system_blast_0209_dds305_pps_start_wrapper.ngc \
implementation/system_blast_0209_dds305_rawfftbin_bram_ramblk_wrapper.ngc \
implementation/system_blast_0209_dds305_rawfftbin_bram_wrapper.ngc \
implementation/system_blast_0209_dds305_rawfftbin_ctrl_wrapper.ngc \
implementation/system_blast_0209_dds305_rawfftbin_status_wrapper.ngc \
implementation/system_blast_0209_dds305_rx_ack_wrapper.ngc \
implementation/system_blast_0209_dds305_rx_rst_wrapper.ngc \
implementation/system_blast_0209_dds305_start_dac_wrapper.ngc \
implementation/system_blast_0209_dds305_sync_accum_len_wrapper.ngc \
implementation/system_blast_0209_dds305_sync_accum_reset_wrapper.ngc \
implementation/system_blast_0209_dds305_tx_destip_wrapper.ngc \
implementation/system_blast_0209_dds305_tx_destport_wrapper.ngc \
implementation/system_blast_0209_dds305_tx_rst_wrapper.ngc \
implementation/system_opb1_wrapper.ngc \
implementation/system_opb2opb_bridge_opb1_wrapper.ngc

POSTSYN_NETLIST = implementation/$(SYSTEM).ngc

SYSTEM_BIT = implementation/$(SYSTEM).bit

DOWNLOAD_BIT = implementation/download.bit

SYSTEM_ACE = implementation/$(SYSTEM).ace

UCF_FILE = data/system.ucf

BMM_FILE = implementation/$(SYSTEM).bmm

BITGEN_UT_FILE = etc/bitgen.ut

XFLOW_OPT_FILE = etc/fast_runtime.opt
XFLOW_DEPENDENCY = __xps/xpsxflow.opt $(XFLOW_OPT_FILE)

XPLORER_DEPENDENCY = __xps/xplorer.opt
XPLORER_OPTIONS = -p $(DEVICE) -uc $(SYSTEM).ucf -bm $(SYSTEM).bmm -max_runs 7

FPGA_IMP_DEPENDENCY = $(BMM_FILE) $(POSTSYN_NETLIST) $(UCF_FILE) $(XFLOW_DEPENDENCY)

SDK_EXPORT_DIR = SDK/SDK_Export/hw
SYSTEM_HW_HANDOFF = $(SDK_EXPORT_DIR)/$(SYSTEM).xml
SYSTEM_HW_HANDOFF_BIT = $(SDK_EXPORT_DIR)/$(SYSTEM).bit
SYSTEM_HW_HANDOFF_DEP = $(SYSTEM_HW_HANDOFF) $(SYSTEM_HW_HANDOFF_BIT)
